if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

            ;var snabbdom={};function createElement(e,t){return document.createElement(e,t)}function createElementNS(e,t,n){return document.createElementNS(e,t,n)}function createTextNode(e){return document.createTextNode(e)}function createComment(e){return document.createComment(e)}function insertBefore(e,t,n){e.insertBefore(t,n)}function removeChild(e,t){t.parentNode&&t.parentNode.removeChild(t)}function appendChild(e,t){e.appendChild(t)}function parentNode(e){return e.parentNode}function nextSibling(e){return e.nextSibling}function tagName(e){return e.tagName}function setTextContent(e,t){e.textContent=t}function getTextContent(e){return e.textContent}function isElement(e){return 1===e.nodeType}function isText(e){return 3===e.nodeType}function isComment(e){return 8===e.nodeType}const htmlDomApi={createElement:createElement,createElementNS:createElementNS,createTextNode:createTextNode,createComment:createComment,insertBefore:insertBefore,removeChild:removeChild,appendChild:appendChild,parentNode:parentNode,nextSibling:nextSibling,tagName:tagName,setTextContent:setTextContent,getTextContent:getTextContent,isElement:isElement,isText:isText,isComment:isComment};function vnode(e,t,n,o,a){return{sel:e,data:t,children:n,text:o,elm:a,key:void 0===t?void 0:t.key}}const array=Array.isArray;function primitive(e){return"string"==typeof e||"number"==typeof e}function isUndef(e){return void 0===e}function isDef(e){return void 0!==e}const emptyNode=vnode("",{},[],void 0,void 0);function sameVnode(e,t){var n=e.key===t.key,o=(null===(o=e.data)||void 0===o?void 0:o.is)===(null===(o=t.data)||void 0===o?void 0:o.is);return e.sel===t.sel&&n&&o}function isVnode(e){return void 0!==e.sel}function createKeyToOldIdx(t,n,o){const a={};for(let e=n;e<=o;++e){var r=null===(r=t[e])||void 0===r?void 0:r.key;void 0!==r&&(a[r]=e)}return a}const hooks=["create","update","remove","destroy","pre","post"];function init$1(e,t){let n,o;const v={create:[],update:[],remove:[],destroy:[],pre:[],post:[]},p=void 0!==t?t:htmlDomApi;for(n=0;n<hooks.length;++n)for(v[hooks[n]]=[],o=0;o<e.length;++o){var a=e[o][hooks[n]];void 0!==a&&v[hooks[n]].push(a)}function h(e,t){let n,o=e.data;if(void 0!==o){const u=null===(s=o.hook)||void 0===s?void 0:s.init;isDef(u)&&(u(e),o=e.data)}var a=e.children;const r=e.sel;if("!"===r)isUndef(e.text)&&(e.text=""),e.elm=p.createComment(e.text);else if(void 0!==r){var i=r.indexOf("#"),l=r.indexOf(".",i),d=0<i?i:r.length,s=0<l?l:r.length,i=-1!==i||-1!==l?r.slice(0,Math.min(d,s)):r;const f=e.elm=isDef(o)&&isDef(n=o.ns)?p.createElementNS(n,i,o):p.createElement(i,o);for(d<s&&f.setAttribute("id",r.slice(d+1,s)),0<l&&f.setAttribute("class",r.slice(s+1).replace(/\./g," ")),n=0;n<v.create.length;++n)v.create[n](emptyNode,e);if(array(a))for(n=0;n<a.length;++n){var c=a[n];null!=c&&p.appendChild(f,h(c,t))}else primitive(e.text)&&p.appendChild(f,p.createTextNode(e.text));l=e.data.hook;isDef(l)&&(null!==(s=l.create)&&void 0!==s&&s.call(l,emptyNode,e),l.insert&&t.push(e))}else e.elm=p.createTextNode(e.text);return e.elm}function y(e,t,n,o,a,r){for(;o<=a;++o){var i=n[o];null!=i&&p.insertBefore(e,h(i,r),t)}}function g(e,n,o,t){for(var a;o<=t;++o){let t;var r=n[o];if(null!=r)if(isDef(r.sel)){!function t(n){var e,o=n.data;if(void 0!==o){null!==(o=null===(e=null==o?void 0:o.hook)||void 0===e?void 0:e.destroy)&&void 0!==o&&o.call(e,n);for(let e=0;e<v.destroy.length;++e)v.destroy[e](n);if(void 0!==n.children)for(let e=0;e<n.children.length;++e){var a=n.children[e];null!=a&&"string"!=typeof a&&t(a)}}}(r),a=v.remove.length+1,t=function(t,n){return function(){var e;0==--n&&(e=p.parentNode(t),p.removeChild(e,t))}}(r.elm,a);for(let e=0;e<v.remove.length;++e)v.remove[e](r,t);const i=null===(a=null===(a=null==r?void 0:r.data)||void 0===a?void 0:a.hook)||void 0===a?void 0:a.remove;isDef(i)?i(r,t):t()}else p.removeChild(e,r.elm)}}function x(t,n,e){var o,a,r=null===(o=n.data)||void 0===o?void 0:o.hook;null!==(a=null==r?void 0:r.prepatch)&&void 0!==a&&a.call(r,t,n);var i=n.elm=t.elm,l=t.children,d=n.children;if(t!==n){if(void 0!==n.data){for(let e=0;e<v.update.length;++e)v.update[e](t,n);null!==(a=null===(o=n.data.hook)||void 0===o?void 0:o.update)&&void 0!==a&&a.call(o,t,n)}isUndef(n.text)?isDef(l)&&isDef(d)?l!==d&&function(e,t,n,o){let a=0,r=0,i=t.length-1,l=t[0],d=t[i],s=n.length-1,c=n[0],u=n[s],f;for(var v,m;a<=i&&r<=s;)null==l?l=t[++a]:null==d?d=t[--i]:null==c?c=n[++r]:null==u?u=n[--s]:sameVnode(l,c)?(x(l,c,o),l=t[++a],c=n[++r]):sameVnode(d,u)?(x(d,u,o),d=t[--i],u=n[--s]):sameVnode(l,u)?(x(l,u,o),p.insertBefore(e,l.elm,p.nextSibling(d.elm)),l=t[++a],u=n[--s]):c=(sameVnode(d,c)?(x(d,c,o),p.insertBefore(e,d.elm,l.elm),d=t[--i]):(void 0===f&&(f=createKeyToOldIdx(t,a,i)),isUndef(v=f[c.key])||(m=t[v]).sel!==c.sel?p.insertBefore(e,h(c,o),l.elm):(x(m,c,o),t[v]=void 0,p.insertBefore(e,m.elm,l.elm))),n[++r]);(a<=i||r<=s)&&(a>i?y(e,null==n[s+1]?null:n[s+1].elm,n,r,s,o):g(e,t,a,i))}(i,l,d,e):isDef(d)?(isDef(t.text)&&p.setTextContent(i,""),y(i,null,d,0,d.length-1,e)):isDef(l)?g(i,l,0,l.length-1):isDef(t.text)&&p.setTextContent(i,""):t.text!==n.text&&(isDef(l)&&g(i,l,0,l.length-1),p.setTextContent(i,n.text)),null!==(i=null==r?void 0:r.postpatch)&&void 0!==i&&i.call(r,t,n)}}return function(e,t){let n,o,a;const r=[];for(n=0;n<v.pre.length;++n)v.pre[n]();for(sameVnode(e=!isVnode(e)?function(e){var t=e.id?"#"+e.id:"";const n=e.getAttribute("class");var o=n?"."+n.split(" ").join("."):"";return vnode(p.tagName(e).toLowerCase()+t+o,{},[],void 0,e)}(e):e,t)?x(e,t,r):(o=e.elm,a=p.parentNode(o),h(t,r),null!==a&&(p.insertBefore(a,t.elm,p.nextSibling(o)),g(a,[e],0,0))),n=0;n<r.length;++n)r[n].data.hook.insert(r[n]);for(n=0;n<v.post.length;++n)v.post[n]();return t}}function addNS(e,t,n){if(e.ns="http://www.w3.org/2000/svg","foreignObject"!==n&&void 0!==t)for(let e=0;e<t.length;++e){var o=t[e].data;void 0!==o&&addNS(o,t[e].children,t[e].sel)}}function h(e,t,n){let o={},a,r,i;if(void 0!==n?(null!==t&&(o=t),array(n)?a=n:primitive(n)?r=n:n&&n.sel&&(a=[n])):null!=t&&(array(t)?a=t:primitive(t)?r=t:t&&t.sel?a=[t]:o=t),void 0!==a)for(i=0;i<a.length;++i)primitive(a[i])&&(a[i]=vnode(void 0,void 0,void 0,a[i],void 0));return"s"!==e[0]||"v"!==e[1]||"g"!==e[2]||3!==e.length&&"."!==e[3]&&"#"!==e[3]||addNS(o,a,e),vnode(e,o,a,r,void 0)}function copyToThunk(e,t){e.data.fn=t.data.fn,e.data.args=t.data.args,t.data=e.data,t.children=e.children,t.text=e.text,t.elm=e.elm}function init(e){const t=e.data;copyToThunk(t.fn(...t.args),e)}function prepatch(e,t){let n;var o=e.data;const a=t.data;var r=o.args,i=a.args;if(o.fn===a.fn&&r.length===i.length){for(n=0;n<i.length;++n)if(r[n]!==i[n])return void copyToThunk(a.fn(...i),t);copyToThunk(e,t)}else copyToThunk(a.fn(...i),t)}const thunk=function(e,t,n,o){return void 0===o&&(o=n,n=t,t=void 0),h(e,{key:t,hook:{init:init,prepatch:prepatch},fn:n,args:o})};function pre(e,t){var n=e.data.attachData;t.data.attachData.placeholder=n.placeholder,t.data.attachData.real=n.real,e.elm=e.data.attachData.real}function post(e,t){t.elm=t.data.attachData.placeholder}function destroy(e){void 0!==e.elm&&e.elm.parentNode.removeChild(e.elm),e.elm=e.data.attachData.real}function create(e,t){var n=t.elm;const o=t.data.attachData;var a=document.createElement("span");t.elm=a,o.target.appendChild(n),o.real=n,o.placeholder=a}function attachTo(e,t){void 0===t.data&&(t.data={}),void 0===t.data.hook&&(t.data.hook={});const n=t.data,o=t.data.hook;return n.attachData={target:e,placeholder:void 0,real:void 0},o.create=create,o.prepatch=pre,o.postpatch=post,o.destroy=destroy,t}function toVNode(n,o){const a=void 0!==o?o:htmlDomApi;let e;if(a.isElement(n)){var r=n.id?"#"+n.id:"";const c=n.getAttribute("class");var i,l=c?"."+c.split(" ").join("."):"",l=a.tagName(n).toLowerCase()+r+l;const u={},f=[];let e,t;var d=n.attributes,s=n.childNodes;for(e=0,t=d.length;e<t;e++)"id"!==(i=d[e].nodeName)&&"class"!==i&&(u[i]=d[e].nodeValue);for(e=0,t=s.length;e<t;e++)f.push(toVNode(s[e],o));return vnode(l,{attrs:u},f,void 0,n)}return a.isText(n)?(e=a.getTextContent(n),vnode(void 0,void 0,void 0,e,n)):a.isComment(n)?(e=a.getTextContent(n),vnode("!",{},[],e,n)):vnode("",{},[],void 0,n)}const xlinkNS="http://www.w3.org/1999/xlink",xmlNS="http://www.w3.org/XML/1998/namespace",colonChar=58,xChar=120;function updateAttrs(e,t){let n;const o=t.elm;var a=e.data.attrs;let r=t.data.attrs;if((a||r)&&a!==r){for(n in a=a||{},r=r||{},r){var i=r[n];a[n]!==i&&(!0===i?o.setAttribute(n,""):!1===i?o.removeAttribute(n):n.charCodeAt(0)!==xChar?o.setAttribute(n,i):n.charCodeAt(3)===colonChar?o.setAttributeNS(xmlNS,n,i):n.charCodeAt(5)===colonChar?o.setAttributeNS(xlinkNS,n,i):o.setAttribute(n,i))}for(n in a)n in r||o.removeAttribute(n)}}const attributesModule={create:updateAttrs,update:updateAttrs};function updateClass(e,t){var n;let o;const a=t.elm;var r=e.data.class;let i=t.data.class;if((r||i)&&r!==i){for(o in r=r||{},i=i||{},r)r[o]&&!Object.prototype.hasOwnProperty.call(i,o)&&a.classList.remove(o);for(o in i)(n=i[o])!==r[o]&&a.classList[n?"add":"remove"](o)}}const classModule={create:updateClass,update:updateClass},CAPS_REGEX=/[A-Z]/g;function updateDataset(e,t){const n=t.elm;var o=e.data.dataset;let a=t.data.dataset,r;if((o||a)&&o!==a){o=o||{},a=a||{};const i=n.dataset;for(r in o)a[r]||(i?r in i&&delete i[r]:n.removeAttribute("data-"+r.replace(CAPS_REGEX,"-$&").toLowerCase()));for(r in a)o[r]!==a[r]&&(i?i[r]=a[r]:n.setAttribute("data-"+r.replace(CAPS_REGEX,"-$&").toLowerCase(),a[r]))}}const datasetModule={create:updateDataset,update:updateDataset};function invokeHandler(t,n,o){if("function"==typeof t)t.call(n,o,n);else if("object"==typeof t)for(let e=0;e<t.length;e++)invokeHandler(t[e],n,o)}function handleEvent(e,t){var n=e.type,o=t.data.on;o&&o[n]&&invokeHandler(o[n],t,e)}function createListener(){return function e(t){handleEvent(t,e.vnode)}}function updateEventListeners(e,t){var n=e.data.on,o=e.listener;const a=e.elm;var r=t&&t.data.on;const i=t&&t.elm;let l;if(n!==r){if(n&&o)if(r)for(l in n)r[l]||a.removeEventListener(l,o,!1);else for(l in n)a.removeEventListener(l,o,!1);if(r){const d=t.listener=e.listener||createListener();if(d.vnode=t,n)for(l in r)n[l]||i.addEventListener(l,d,!1);else for(l in r)i.addEventListener(l,d,!1)}}}const eventListenersModule={create:updateEventListeners,update:updateEventListeners,destroy:updateEventListeners};function updateProps(e,t){let n;var o;const a=t.elm;var r=e.data.props;let i=t.data.props;if((r||i)&&r!==i)for(n in r=r||{},i=i||{},i)o=i[n],r[n]===o||"value"===n&&a[n]===o||(a[n]=o)}const propsModule={create:updateProps,update:updateProps},raf="undefined"!=typeof window&&window.requestAnimationFrame.bind(window)||setTimeout,nextFrame=function(e){raf(function(){raf(e)})};let reflowForced=!1;function setNextFrame(e,t,n){nextFrame(function(){e[t]=n})}function updateStyle(e,t){let n,o;const a=t.elm;var r=e.data.style;let i=t.data.style;if((r||i)&&r!==i){r=r||{},i=i||{};var l="delayed"in r;for(o in r)i[o]||("-"===o[0]&&"-"===o[1]?a.style.removeProperty(o):a.style[o]="");for(o in i)if(n=i[o],"delayed"===o&&i.delayed)for(const d in i.delayed)n=i.delayed[d],l&&n===r.delayed[d]||setNextFrame(a.style,d,n);else"remove"!==o&&n!==r[o]&&("-"===o[0]&&"-"===o[1]?a.style.setProperty(o,n):a.style[o]=n)}}function applyDestroyStyle(e){let t,n;const o=e.elm;e=e.data.style;if(e&&(t=e.destroy))for(n in t)o.style[n]=t[n]}function applyRemoveStyle(o,a){var r=o.data.style;if(r&&r.remove){reflowForced||(o.elm.offsetLeft,reflowForced=!0);let e;const d=o.elm;let t=0;var i=r.remove;let n=0;const s=[];for(e in i)s.push(e),d.style[e]=i[e];const c=getComputedStyle(d);for(var l=c["transition-property"].split(", ");t<l.length;++t)-1!==s.indexOf(l[t])&&n++;d.addEventListener("transitionend",function(e){e.target===d&&--n,0===n&&a()})}else a()}function forceReflow(){reflowForced=!1}const styleModule={pre:forceReflow,create:updateStyle,update:updateStyle,destroy:applyDestroyStyle,remove:applyRemoveStyle};function flattenAndFilter(e,t){for(const n of e)void 0!==n&&null!==n&&!1!==n&&""!==n&&(Array.isArray(n)?flattenAndFilter(n,t):"string"==typeof n||"number"==typeof n||"boolean"==typeof n?t.push(vnode(void 0,void 0,void 0,String(n),void 0)):t.push(n));return t}function jsx(e,t,...n){n=flattenAndFilter(n,[]);return"function"==typeof e?e(t,n):1===n.length&&!n[0].sel&&n[0].text?h(e,t,n[0].text):h(e,t,n)}jsx=jsx||{},snabbdom.array=array,snabbdom.attachTo=attachTo,snabbdom.attributesModule=attributesModule,snabbdom.classModule=classModule,snabbdom.datasetModule=datasetModule,snabbdom.eventListenersModule=eventListenersModule,snabbdom.h=h,snabbdom.htmlDomApi=htmlDomApi,snabbdom.init=init$1,snabbdom.jsx=jsx,snabbdom.primitive=primitive,snabbdom.propsModule=propsModule,snabbdom.styleModule=styleModule,snabbdom.thunk=thunk,snabbdom.toVNode=toVNode,snabbdom.vnode=vnode;
/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
            ;
var COMPILED = !0, goog = goog || {};
goog.global = this || self;
goog.exportPath_ = function(a, b, c, d) {
  a = a.split(".");
  d = d || goog.global;
  a[0] in d || "undefined" == typeof d.execScript || d.execScript("var " + a[0]);
  for (var e; a.length && (e = a.shift());) {
    if (a.length || void 0 === b) {
      d = d[e] && d[e] !== Object.prototype[e] ? d[e] : d[e] = {};
    } else {
      if (!c && goog.isObject(b) && goog.isObject(d[e])) {
        for (var f in b) {
          b.hasOwnProperty(f) && (d[e][f] = b[f]);
        }
      } else {
        d[e] = b;
      }
    }
  }
};
goog.define = function(a, b) {
  if (!COMPILED) {
    var c = goog.global.CLOSURE_UNCOMPILED_DEFINES, d = goog.global.CLOSURE_DEFINES;
    c && void 0 === c.nodeType && Object.prototype.hasOwnProperty.call(c, a) ? b = c[a] : d && void 0 === d.nodeType && Object.prototype.hasOwnProperty.call(d, a) && (b = d[a]);
  }
  return b;
};
goog.FEATURESET_YEAR = 2012;
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.getLocale = function() {
  return goog.LOCALE;
};
goog.TRUSTED_SITE = !0;
goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED && goog.isProvided_(a)) {
    throw Error('Namespace "' + a + '" already declared.');
  }
  goog.constructNamespace_(a);
};
goog.constructNamespace_ = function(a, b, c) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[a];
    for (var d = a; (d = d.substring(0, d.lastIndexOf("."))) && !goog.getObjectByName(d);) {
      goog.implicitNamespaces_[d] = !0;
    }
  }
  goog.exportPath_(a, b, c);
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_ = function(a) {
  a = (a || goog.global).document;
  return (a = a.querySelector && a.querySelector("script[nonce]")) && (a = a.nonce || a.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(a) ? a : "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(a) {
  if ("string" !== typeof a || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = a;
  if (!COMPILED) {
    if (goog.isProvided_(a)) {
      throw Error('Namespace "' + a + '" already declared.');
    }
    delete goog.implicitNamespaces_[a];
  }
};
goog.module.get = function(a) {
  return goog.module.getInternal_(a);
};
goog.module.getInternal_ = function(a) {
  if (!COMPILED) {
    if (a in goog.loadedModules_) {
      return goog.loadedModules_[a].exports;
    }
    if (!goog.implicitNamespaces_[a]) {
      return a = goog.getObjectByName(a), null != a ? a : null;
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6) {
    return !0;
  }
  var a = goog.global.$jscomp;
  return a ? "function" != typeof a.getCurrentModulePath ? !1 : !!a.getCurrentModulePath() : !1;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.declareModuleId = function(a) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw Error("goog.declareModuleId may only be called from within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw Error("goog.declareModuleId may only be called once per module.");
    }
    if (a in goog.loadedModules_) {
      throw Error('Module with namespace "' + a + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = a;
  } else {
    var b = goog.global.$jscomp;
    if (!b || "function" != typeof b.getCurrentModulePath) {
      throw Error('Module with namespace "' + a + '" has been loaded incorrectly.');
    }
    b = b.require(b.getCurrentModulePath());
    goog.loadedModules_[a] = {exports:b, type:goog.ModuleType.ES6, moduleId:a};
  }
};
goog.setTestOnly = function(a) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
  }
};
goog.forwardDeclare = function(a) {
};
COMPILED || (goog.isProvided_ = function(a) {
  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && null != goog.getObjectByName(a);
}, goog.implicitNamespaces_ = {"goog.module":!0});
goog.getObjectByName = function(a, b) {
  a = a.split(".");
  b = b || goog.global;
  for (var c = 0; c < a.length; c++) {
    if (b = b[a[c]], null == b) {
      return null;
    }
  }
  return b;
};
goog.addDependency = function(a, b, c, d) {
  !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a, b, c, d);
};
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(a) {
  goog.global.console && goog.global.console.error(a);
};
goog.require = function(a) {
  if (!COMPILED) {
    goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a);
    if (goog.isProvided_(a)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(a);
      }
    } else if (goog.ENABLE_DEBUG_LOADER) {
      var b = goog.moduleLoaderState_;
      goog.moduleLoaderState_ = null;
      try {
        goog.debugLoader_.load_(a);
      } finally {
        goog.moduleLoaderState_ = b;
      }
    }
    return null;
  }
};
goog.requireType = function(a) {
  return {};
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(a) {
  a.instance_ = void 0;
  a.getInstance = function() {
    if (a.instance_) {
      return a.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
    return a.instance_ = new a();
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = "detect";
goog.ASSUME_ES_MODULES_TRANSPILED = !1;
goog.TRANSPILE_TO_LANGUAGE = "";
goog.TRANSPILER = "transpile.js";
goog.TRUSTED_TYPES_POLICY_NAME = "goog";
goog.hasBadLetScoping = null;
goog.loadModule = function(a) {
  var b = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:!1, type:goog.ModuleType.GOOG};
    var c = {}, d = c;
    if ("function" === typeof a) {
      d = a.call(void 0, d);
    } else if ("string" === typeof a) {
      d = goog.loadModuleFromSource_.call(void 0, d, a);
    } else {
      throw Error("Invalid module definition");
    }
    var e = goog.moduleLoaderState_.moduleName;
    if ("string" === typeof e && e) {
      goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(e, d, c !== d) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof d && null != d && Object.seal(d), goog.loadedModules_[e] = {exports:d, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
    } else {
      throw Error('Invalid module name "' + e + '"');
    }
  } finally {
    goog.moduleLoaderState_ = b;
  }
};
goog.loadModuleFromSource_ = function(a, b) {
  eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));
  return a;
};
goog.normalizePath_ = function(a) {
  a = a.split("/");
  for (var b = 0; b < a.length;) {
    "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
  }
  return a.join("/");
};
goog.loadFileSync_ = function(a) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
  }
  try {
    var b = new goog.global.XMLHttpRequest();
    b.open("get", a, !1);
    b.send();
    return 0 == b.status || 200 == b.status ? b.responseText : null;
  } catch (c) {
    return null;
  }
};
goog.transpile_ = function(a, b, c) {
  var d = goog.global.$jscomp;
  d || (goog.global.$jscomp = d = {});
  var e = d.transpile;
  if (!e) {
    var f = goog.basePath + goog.TRANSPILER, g = goog.loadFileSync_(f);
    if (g) {
      (function() {
        (0,eval)(g + "\n//# sourceURL\x3d" + f);
      }).call(goog.global);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      d = goog.global.$jscomp;
      e = d.transpile;
    }
  }
  e || (e = d.transpile = function(h, k) {
    goog.logToConsole_(k + " requires transpilation but no transpiler was found.");
    return h;
  });
  return e(a, b, c);
};
goog.typeOf = function(a) {
  var b = typeof a;
  return "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null";
};
goog.isArrayLike = function(a) {
  var b = goog.typeOf(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
};
goog.isDateLike = function(a) {
  return goog.isObject(a) && "function" == typeof a.getFullYear;
};
goog.isObject = function(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
};
goog.getUid = function(a) {
  return Object.prototype.hasOwnProperty.call(a, goog.UID_PROPERTY_) && a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(a) {
  return !!a[goog.UID_PROPERTY_];
};
goog.removeUid = function(a) {
  null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete a[goog.UID_PROPERTY_];
  } catch (b) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.cloneObject = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if ("function" === typeof a.clone) {
      return a.clone();
    }
    if ("undefined" !== typeof Map && a instanceof Map) {
      return new Map(a);
    }
    if ("undefined" !== typeof Set && a instanceof Set) {
      return new Set(a);
    }
    b = "array" == b ? [] : {};
    for (var c in a) {
      b[c] = goog.cloneObject(a[c]);
    }
    return b;
  }
  return a;
};
goog.bindNative_ = function(a, b, c) {
  return a.call.apply(a.bind, arguments);
};
goog.bindJs_ = function(a, b, c) {
  if (!a) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var e = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(e, d);
      return a.apply(b, e);
    };
  }
  return function() {
    return a.apply(b, arguments);
  };
};
goog.bind = function(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var d = c.slice();
    d.push.apply(d, arguments);
    return a.apply(this, d);
  };
};
goog.mixin = function(a, b) {
  for (var c in b) {
    a[c] = b[c];
  }
};
goog.now = function() {
  return Date.now();
};
goog.globalEval = function(a) {
  (0,eval)(a);
};
goog.getCssName = function(a, b) {
  if ("." == String(a).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a);
  }
  var c = function(e) {
    return goog.cssNameMapping_[e] || e;
  }, d = function(e) {
    e = e.split("-");
    for (var f = [], g = 0; g < e.length; g++) {
      f.push(c(e[g]));
    }
    return f.join("-");
  };
  d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(e) {
    return e;
  };
  a = b ? a + "-" + d(b) : d(a);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a) : a;
};
goog.setCssNameMapping = function(a, b) {
  goog.cssNameMapping_ = a;
  goog.cssNameMappingStyle_ = b;
};
!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
goog.getMsg = function(a, b, c) {
  c && c.html && (a = a.replace(/</g, "\x26lt;"));
  c && c.unescapeHtmlEntities && (a = a.replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "\x26"));
  b && (a = a.replace(/\{\$([^}]+)}/g, function(d, e) {
    return null != b && e in b ? b[e] : d;
  }));
  return a;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(a, b, c) {
  goog.exportPath_(a, b, !0, c);
};
goog.exportProperty = function(a, b, c) {
  a[b] = c;
};
goog.inherits = function(a, b) {
  function c() {
  }
  c.prototype = b.prototype;
  a.superClass_ = b.prototype;
  a.prototype = new c();
  a.prototype.constructor = a;
  a.base = function(d, e, f) {
    for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++) {
      g[h - 2] = arguments[h];
    }
    return b.prototype[e].apply(d, g);
  };
};
goog.scope = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a module.");
  }
  a.call(goog.global);
};
COMPILED || (goog.global.COMPILED = COMPILED);
goog.defineClass = function(a, b) {
  var c = b.constructor, d = b.statics;
  c && c != Object.prototype.constructor || (c = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  c = goog.defineClass.createSealingConstructor_(c, a);
  a && goog.inherits(c, a);
  delete b.constructor;
  delete b.statics;
  goog.defineClass.applyProperties_(c.prototype, b);
  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
  return c;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(a, b) {
  return goog.defineClass.SEAL_CLASS_INSTANCES ? function() {
    var c = a.apply(this, arguments) || this;
    c[goog.UID_PROPERTY_] = c[goog.UID_PROPERTY_];
    return c;
  } : a;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(a, b) {
  for (var c in b) {
    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
  for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) {
    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
};
goog.identity_ = function(a) {
  return a;
};
goog.createTrustedTypesPolicy = function(a) {
  var b = null, c = goog.global.trustedTypes;
  if (!c || !c.createPolicy) {
    return b;
  }
  try {
    b = c.createPolicy(a, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_});
  } catch (d) {
    goog.logToConsole_(d.message);
  }
  return b;
};
!COMPILED && goog.DEPENDENCIES_ENABLED && (goog.isEdge_ = function() {
  return !!(goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "").match(/Edge\/(\d+)(\.\d)*/i);
}, goog.inHtmlDocument_ = function() {
  var a = goog.global.document;
  return null != a && "write" in a;
}, goog.isDocumentLoading_ = function() {
  var a = goog.global.document;
  return a.attachEvent ? "complete" != a.readyState : "loading" == a.readyState;
}, goog.findBasePath_ = function() {
  if (void 0 != goog.global.CLOSURE_BASE_PATH && "string" === typeof goog.global.CLOSURE_BASE_PATH) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else if (goog.inHtmlDocument_()) {
    var a = goog.global.document, b = a.currentScript;
    a = b ? [b] : a.getElementsByTagName("SCRIPT");
    for (b = a.length - 1; 0 <= b; --b) {
      var c = a[b].src, d = c.lastIndexOf("?");
      d = -1 == d ? c.length : d;
      if ("base.js" == c.substr(d - 7, 7)) {
        goog.basePath = c.substr(0, d - 7);
        break;
      }
    }
  }
}, goog.findBasePath_(), goog.Transpiler = function() {
  this.requiresTranspilation_ = null;
  this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
}, goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
  function a(f, g) {
    e ? d[f] = !0 : g() ? (c = f, d[f] = !1) : e = d[f] = !0;
  }
  function b(f) {
    try {
      return !!eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(f));
    } catch (g) {
      return !1;
    }
  }
  var c = "es3", d = {es3:!1}, e = !1;
  a("es5", function() {
    return b("[1,].length\x3d\x3d1");
  });
  a("es6", function() {
    return goog.isEdge_() ? !1 : b('(()\x3d\x3e{"use strict";class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()\x3d\x3d3}})()');
  });
  a("es7", function() {
    return b("2**3\x3d\x3d8");
  });
  a("es8", function() {
    return b("async()\x3d\x3e1,1");
  });
  a("es9", function() {
    return b("({...rest}\x3d{}),1");
  });
  a("es_2019", function() {
    return b('let r;try{r\x3d"\u2029"}catch{};r');
  });
  a("es_2020", function() {
    return b("null?.x??1");
  });
  a("es_next", function() {
    return !1;
  });
  return {target:c, map:d};
}, goog.Transpiler.prototype.needsTranspile = function(a, b) {
  if ("always" == goog.TRANSPILE) {
    return !0;
  }
  if ("never" == goog.TRANSPILE) {
    return !1;
  }
  if (!this.requiresTranspilation_) {
    var c = this.createRequiresTranspilation_();
    this.requiresTranspilation_ = c.map;
    this.transpilationTarget_ = this.transpilationTarget_ || c.target;
  }
  if (a in this.requiresTranspilation_) {
    return this.requiresTranspilation_[a] ? !0 : !goog.inHtmlDocument_() || "es6" != b || "noModule" in goog.global.document.createElement("script") ? !1 : !0;
  }
  throw Error("Unknown language mode: " + a);
}, goog.Transpiler.prototype.transpile = function(a, b) {
  return goog.transpile_(a, b, this.transpilationTarget_);
}, goog.transpiler_ = new goog.Transpiler(), goog.protectScriptTag_ = function(a) {
  return a.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
}, goog.DebugLoader_ = function() {
  this.dependencies_ = {};
  this.idToPath_ = {};
  this.written_ = {};
  this.loadingDeps_ = [];
  this.depsToLoad_ = [];
  this.paused_ = !1;
  this.factory_ = new goog.DependencyFactory(goog.transpiler_);
  this.deferredCallbacks_ = {};
  this.deferredQueue_ = [];
}, goog.DebugLoader_.prototype.bootstrap = function(a, b) {
  function c() {
    d && (goog.global.setTimeout(d, 0), d = null);
  }
  var d = b;
  if (a.length) {
    b = [];
    for (var e = 0; e < a.length; e++) {
      var f = this.getPathFromDeps_(a[e]);
      if (!f) {
        throw Error("Unregonized namespace: " + a[e]);
      }
      b.push(this.dependencies_[f]);
    }
    f = goog.require;
    var g = 0;
    for (e = 0; e < a.length; e++) {
      f(a[e]), b[e].onLoad(function() {
        ++g == a.length && c();
      });
    }
  } else {
    c();
  }
}, goog.DebugLoader_.prototype.loadClosureDeps = function() {
  this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + "deps.js"), "deps.js", [], [], {}, !1));
  this.loadDeps_();
}, goog.DebugLoader_.prototype.requested = function(a, b) {
  (a = this.getPathFromDeps_(a)) && (b || this.areDepsLoaded_(this.dependencies_[a].requires)) && (b = this.deferredCallbacks_[a]) && (delete this.deferredCallbacks_[a], b());
}, goog.DebugLoader_.prototype.setDependencyFactory = function(a) {
  this.factory_ = a;
}, goog.DebugLoader_.prototype.load_ = function(a) {
  if (this.getPathFromDeps_(a)) {
    var b = this, c = [], d = function(e) {
      var f = b.getPathFromDeps_(e);
      if (!f) {
        throw Error("Bad dependency path or symbol: " + e);
      }
      if (!b.written_[f]) {
        b.written_[f] = !0;
        e = b.dependencies_[f];
        for (f = 0; f < e.requires.length; f++) {
          goog.isProvided_(e.requires[f]) || d(e.requires[f]);
        }
        c.push(e);
      }
    };
    d(a);
    a = !!this.depsToLoad_.length;
    this.depsToLoad_ = this.depsToLoad_.concat(c);
    this.paused_ || a || this.loadDeps_();
  } else {
    goog.logToConsole_("goog.require could not find: " + a);
  }
}, goog.DebugLoader_.prototype.loadDeps_ = function() {
  for (var a = this, b = this.paused_; this.depsToLoad_.length && !b;) {
    (function() {
      var c = !1, d = a.depsToLoad_.shift(), e = !1;
      a.loading_(d);
      var f = {pause:function() {
        if (c) {
          throw Error("Cannot call pause after the call to load.");
        }
        b = !0;
      }, resume:function() {
        c ? a.resume_() : b = !1;
      }, loaded:function() {
        if (e) {
          throw Error("Double call to loaded.");
        }
        e = !0;
        a.loaded_(d);
      }, pending:function() {
        for (var g = [], h = 0; h < a.loadingDeps_.length; h++) {
          g.push(a.loadingDeps_[h]);
        }
        return g;
      }, setModuleState:function(g) {
        goog.moduleLoaderState_ = {type:g, moduleName:"", declareLegacyNamespace:!1};
      }, registerEs6ModuleExports:function(g, h, k) {
        k && (goog.loadedModules_[k] = {exports:h, type:goog.ModuleType.ES6, moduleId:k || ""});
      }, registerGoogModuleExports:function(g, h) {
        goog.loadedModules_[g] = {exports:h, type:goog.ModuleType.GOOG, moduleId:g};
      }, clearModuleState:function() {
        goog.moduleLoaderState_ = null;
      }, defer:function(g) {
        if (c) {
          throw Error("Cannot register with defer after the call to load.");
        }
        a.defer_(d, g);
      }, areDepsLoaded:function() {
        return a.areDepsLoaded_(d.requires);
      }};
      try {
        d.load(f);
      } finally {
        c = !0;
      }
    })();
  }
  b && this.pause_();
}, goog.DebugLoader_.prototype.pause_ = function() {
  this.paused_ = !0;
}, goog.DebugLoader_.prototype.resume_ = function() {
  this.paused_ && (this.paused_ = !1, this.loadDeps_());
}, goog.DebugLoader_.prototype.loading_ = function(a) {
  this.loadingDeps_.push(a);
}, goog.DebugLoader_.prototype.loaded_ = function(a) {
  for (var b = 0; b < this.loadingDeps_.length; b++) {
    if (this.loadingDeps_[b] == a) {
      this.loadingDeps_.splice(b, 1);
      break;
    }
  }
  for (b = 0; b < this.deferredQueue_.length; b++) {
    if (this.deferredQueue_[b] == a.path) {
      this.deferredQueue_.splice(b, 1);
      break;
    }
  }
  if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
    for (; this.deferredQueue_.length;) {
      this.requested(this.deferredQueue_.shift(), !0);
    }
  }
  a.loaded();
}, goog.DebugLoader_.prototype.areDepsLoaded_ = function(a) {
  for (var b = 0; b < a.length; b++) {
    var c = this.getPathFromDeps_(a[b]);
    if (!c || !(c in this.deferredCallbacks_ || goog.isProvided_(a[b]))) {
      return !1;
    }
  }
  return !0;
}, goog.DebugLoader_.prototype.getPathFromDeps_ = function(a) {
  return a in this.idToPath_ ? this.idToPath_[a] : a in this.dependencies_ ? a : null;
}, goog.DebugLoader_.prototype.defer_ = function(a, b) {
  this.deferredCallbacks_[a.path] = b;
  this.deferredQueue_.push(a.path);
}, goog.LoadController = function() {
}, goog.LoadController.prototype.pause = function() {
}, goog.LoadController.prototype.resume = function() {
}, goog.LoadController.prototype.loaded = function() {
}, goog.LoadController.prototype.pending = function() {
}, goog.LoadController.prototype.registerEs6ModuleExports = function(a, b, c) {
}, goog.LoadController.prototype.setModuleState = function(a) {
}, goog.LoadController.prototype.clearModuleState = function() {
}, goog.LoadController.prototype.defer = function(a) {
}, goog.LoadController.prototype.areDepsLoaded = function() {
}, goog.Dependency = function(a, b, c, d, e) {
  this.path = a;
  this.relativePath = b;
  this.provides = c;
  this.requires = d;
  this.loadFlags = e;
  this.loaded_ = !1;
  this.loadCallbacks_ = [];
}, goog.Dependency.prototype.getPathName = function() {
  var a = this.path, b = a.indexOf("://");
  0 <= b && (a = a.substring(b + 3), b = a.indexOf("/"), 0 <= b && (a = a.substring(b + 1)));
  return a;
}, goog.Dependency.prototype.onLoad = function(a) {
  this.loaded_ ? a() : this.loadCallbacks_.push(a);
}, goog.Dependency.prototype.loaded = function() {
  this.loaded_ = !0;
  var a = this.loadCallbacks_;
  this.loadCallbacks_ = [];
  for (var b = 0; b < a.length; b++) {
    a[b]();
  }
}, goog.Dependency.defer_ = !1, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function(a) {
  var b = Math.random().toString(32);
  goog.Dependency.callbackMap_[b] = a;
  return b;
}, goog.Dependency.unregisterCallback_ = function(a) {
  delete goog.Dependency.callbackMap_[a];
}, goog.Dependency.callback_ = function(a, b) {
  if (a in goog.Dependency.callbackMap_) {
    for (var c = goog.Dependency.callbackMap_[a], d = [], e = 1; e < arguments.length; e++) {
      d.push(arguments[e]);
    }
    c.apply(void 0, d);
  } else {
    throw Error("Callback key " + a + " does not exist (was base.js loaded more than once?).");
  }
}, goog.Dependency.prototype.load = function(a) {
  if (goog.global.CLOSURE_IMPORT_SCRIPT) {
    goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
  } else {
    if (goog.inHtmlDocument_()) {
      var b = goog.global.document;
      if ("complete" == b.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
        if (/\bdeps.js$/.test(this.path)) {
          a.loaded();
          return;
        }
        throw Error('Cannot write "' + this.path + '" after document load');
      }
      var c = goog.getScriptNonce_();
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
        var d = function(h) {
          h.readyState && "complete" != h.readyState ? h.onload = d : (goog.Dependency.unregisterCallback_(e), a.loaded());
        };
        var e = goog.Dependency.registerCallback_(d);
        c = c ? ' nonce\x3d"' + c + '"' : "";
        var f = '\x3cscript src\x3d"' + this.path + '"' + c + (goog.Dependency.defer_ ? " defer" : "") + ' id\x3d"script-' + e + '"\x3e\x3c/script\x3e';
        f += "\x3cscript" + c + "\x3e";
        f = goog.Dependency.defer_ ? f + ("document.getElementById('script-" + e + "').onload \x3d function() {\n  goog.Dependency.callback_('" + e + "', this);\n};\n") : f + ("goog.Dependency.callback_('" + e + "', document.getElementById('script-" + e + "'));");
        f += "\x3c/script\x3e";
        b.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(f) : f);
      } else {
        var g = b.createElement("script");
        g.defer = goog.Dependency.defer_;
        g.async = !1;
        c && (g.nonce = c);
        goog.DebugLoader_.IS_OLD_IE_ ? (a.pause(), g.onreadystatechange = function() {
          if ("loaded" == g.readyState || "complete" == g.readyState) {
            a.loaded(), a.resume();
          }
        }) : g.onload = function() {
          g.onload = null;
          a.loaded();
        };
        g.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
        b.head.appendChild(g);
      }
    } else {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), "deps.js" == this.relativePath ? (goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."), a.loaded()) : a.pause();
    }
  }
}, goog.Es6ModuleDependency = function(a, b, c, d, e) {
  goog.Dependency.call(this, a, b, c, d, e);
}, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function(a) {
  function b(l, m) {
    var n = "", p = goog.getScriptNonce_();
    p && (n = ' nonce\x3d"' + p + '"');
    l = m ? '\x3cscript type\x3d"module" crossorigin' + n + "\x3e" + m + "\x3c/script\x3e" : '\x3cscript type\x3d"module" crossorigin src\x3d"' + l + '"' + n + "\x3e\x3c/script\x3e";
    d.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(l) : l);
  }
  function c(l, m) {
    var n = d.createElement("script");
    n.defer = !0;
    n.async = !1;
    n.type = "module";
    n.setAttribute("crossorigin", !0);
    var p = goog.getScriptNonce_();
    p && (n.nonce = p);
    m ? n.text = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(m) : m : n.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(l) : l;
    d.head.appendChild(n);
  }
  if (goog.global.CLOSURE_IMPORT_SCRIPT) {
    goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
  } else {
    if (goog.inHtmlDocument_()) {
      var d = goog.global.document, e = this;
      if (goog.isDocumentLoading_()) {
        var f = b;
        goog.Dependency.defer_ = !0;
      } else {
        f = c;
      }
      var g = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(g);
        a.setModuleState(goog.ModuleType.ES6);
      });
      f(void 0, 'goog.Dependency.callback_("' + g + '")');
      f(this.path, void 0);
      var h = goog.Dependency.registerCallback_(function(l) {
        goog.Dependency.unregisterCallback_(h);
        a.registerEs6ModuleExports(e.path, l, goog.moduleLoaderState_.moduleName);
      });
      f(void 0, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + h + '", m)');
      var k = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(k);
        a.clearModuleState();
        a.loaded();
      });
      f(void 0, 'goog.Dependency.callback_("' + k + '")');
    } else {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), a.pause();
    }
  }
}, goog.TransformedDependency = function(a, b, c, d, e) {
  goog.Dependency.call(this, a, b, c, d, e);
  this.contents_ = null;
  this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
}, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function(a) {
  function b() {
    e.contents_ = goog.loadFileSync_(e.path);
    e.contents_ && (e.contents_ = e.transform(e.contents_), e.contents_ && (e.contents_ += "\n//# sourceURL\x3d" + e.path));
  }
  function c() {
    e.lazyFetch_ && b();
    if (e.contents_) {
      f && a.setModuleState(goog.ModuleType.ES6);
      try {
        var m = e.contents_;
        e.contents_ = null;
        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(m));
        if (f) {
          var n = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        f && a.clearModuleState();
      }
      f && goog.global.$jscomp.require.ensure([e.getPathName()], function() {
        a.registerEs6ModuleExports(e.path, goog.global.$jscomp.require(e.getPathName()), n);
      });
      a.loaded();
    }
  }
  function d() {
    var m = goog.global.document, n = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(n);
      c();
    }), p = goog.getScriptNonce_();
    p = "\x3cscript" + (p ? ' nonce\x3d"' + p + '"' : "") + "\x3e" + goog.protectScriptTag_('goog.Dependency.callback_("' + n + '");') + "\x3c/script\x3e";
    m.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(p) : p);
  }
  var e = this;
  if (goog.global.CLOSURE_IMPORT_SCRIPT) {
    b(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_) ? (this.contents_ = null, a.loaded()) : a.pause();
  } else {
    var f = this.loadFlags.module == goog.ModuleType.ES6;
    this.lazyFetch_ || b();
    var g = 1 < a.pending().length, h = g && goog.DebugLoader_.IS_OLD_IE_;
    g = goog.Dependency.defer_ && (g || goog.isDocumentLoading_());
    if (h || g) {
      a.defer(function() {
        c();
      });
    } else {
      var k = goog.global.document;
      h = goog.inHtmlDocument_() && ("ActiveXObject" in goog.global || goog.isEdge_());
      if (f && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !h) {
        goog.Dependency.defer_ = !0;
        a.pause();
        var l = k.onreadystatechange;
        k.onreadystatechange = function() {
          "interactive" == k.readyState && (k.onreadystatechange = l, c(), a.resume());
          "function" === typeof l && l.apply(void 0, arguments);
        };
      } else {
        !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? d() : c();
      }
    }
  }
}, goog.TransformedDependency.prototype.transform = function(a) {
}, goog.TranspiledDependency = function(a, b, c, d, e, f) {
  goog.TransformedDependency.call(this, a, b, c, d, e);
  this.transpiler = f;
}, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function(a) {
  return this.transpiler.transpile(a, this.getPathName());
}, goog.PreTranspiledEs6ModuleDependency = function(a, b, c, d, e) {
  goog.TransformedDependency.call(this, a, b, c, d, e);
}, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(a) {
  return a;
}, goog.GoogModuleDependency = function(a, b, c, d, e, f, g) {
  goog.TransformedDependency.call(this, a, b, c, d, e);
  this.needsTranspile_ = f;
  this.transpiler_ = g;
}, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function(a) {
  this.needsTranspile_ && (a = this.transpiler_.transpile(a, this.getPathName()));
  return goog.LOAD_MODULE_USING_EVAL && void 0 !== goog.global.JSON ? "goog.loadModule(" + goog.global.JSON.stringify(a + "\n//# sourceURL\x3d" + this.path + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + a + "\n;return exports});\n//# sourceURL\x3d" + this.path + "\n";
}, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function(a, b, c, d) {
  b = b || [];
  a = a.replace(/\\/g, "/");
  var e = goog.normalizePath_(goog.basePath + a);
  d && "boolean" !== typeof d || (d = d ? {module:goog.ModuleType.GOOG} : {});
  c = this.factory_.createDependency(e, a, b, c, d, goog.transpiler_.needsTranspile(d.lang || "es3", d.module));
  this.dependencies_[e] = c;
  for (c = 0; c < b.length; c++) {
    this.idToPath_[b[c]] = e;
  }
  this.idToPath_[a] = e;
}, goog.DependencyFactory = function(a) {
  this.transpiler = a;
}, goog.DependencyFactory.prototype.createDependency = function(a, b, c, d, e, f) {
  return e.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a, b, c, d, e, f, this.transpiler) : f ? new goog.TranspiledDependency(a, b, c, d, e, this.transpiler) : e.module == goog.ModuleType.ES6 ? "never" == goog.TRANSPILE && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(a, b, c, d, e) : new goog.Es6ModuleDependency(a, b, c, d, e) : new goog.Dependency(a, b, c, d, e);
}, goog.debugLoader_ = new goog.DebugLoader_(), goog.loadClosureDeps = function() {
  goog.debugLoader_.loadClosureDeps();
}, goog.setDependencyFactory = function(a) {
  goog.debugLoader_.setDependencyFactory(a);
}, goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function(a, b) {
  goog.debugLoader_.bootstrap(a, b);
});
if (!COMPILED) {
  var isChrome87 = !1;
  try {
    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !== goog.global.trustedTypes.emptyScript;
  } catch (a) {
  }
  goog.CLOSURE_EVAL_PREFILTER_ = goog.global.trustedTypes && isChrome87 && goog.createTrustedTypesPolicy("goog#base#devonly#eval") || {createScript:goog.identity_};
}
;goog.debug = {};
function module$contents$goog$debug$Error_DebugError(a, b) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, module$contents$goog$debug$Error_DebugError);
  } else {
    const c = Error().stack;
    c && (this.stack = c);
  }
  a && (this.message = String(a));
  void 0 !== b && (this.cause = b);
  this.reportErrorToServer = !0;
}
goog.inherits(module$contents$goog$debug$Error_DebugError, Error);
module$contents$goog$debug$Error_DebugError.prototype.name = "CustomError";
goog.debug.Error = module$contents$goog$debug$Error_DebugError;
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(a, b) {
  module$contents$goog$debug$Error_DebugError.call(this, goog.asserts.subs_(a, b));
  this.messagePattern = a;
};
goog.inherits(goog.asserts.AssertionError, module$contents$goog$debug$Error_DebugError);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(a) {
  throw a;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_ = function(a, b) {
  a = a.split("%s");
  for (var c = "", d = a.length - 1, e = 0; e < d; e++) {
    c += a[e] + (e < b.length ? b[e] : "%s");
  }
  return c + a[d];
};
goog.asserts.doAssertFailure_ = function(a, b, c, d) {
  var e = "Assertion failed";
  if (c) {
    e += ": " + c;
    var f = d;
  } else {
    a && (e += ": " + a, f = b);
  }
  a = new goog.asserts.AssertionError("" + e, f || []);
  goog.asserts.errorHandler_(a);
};
goog.asserts.setErrorHandler = function(a) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
};
goog.asserts.assert = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertExists = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && null == a && goog.asserts.doAssertFailure_("Expected to exist: %s.", [a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.fail = function(a, b) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && "number" !== typeof a && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertString = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && "string" !== typeof a && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertFunction = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && "function" !== typeof a && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertObject = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertArray = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !Array.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertBoolean = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && "boolean" !== typeof a && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertElement = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertInstanceof = function(a, b, c, d) {
  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
  return a;
};
goog.asserts.assertFinite = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || "number" == typeof a && isFinite(a) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.getType_ = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.dom.asserts = {};
goog.dom.asserts.assertIsLocation = function(a) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var b = goog.dom.asserts.getWindow_(a);
    b && (!a || !(a instanceof b.Location) && a instanceof b.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(a));
  }
  return a;
};
goog.dom.asserts.assertIsElementType_ = function(a, b) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var c = goog.dom.asserts.getWindow_(a);
    c && "undefined" != typeof c[b] && (a && (a instanceof c[b] || !(a instanceof c.Location || a instanceof c.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, goog.dom.asserts.debugStringForType_(a)));
  }
  return a;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLAudioElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLAudioElement");
};
goog.dom.asserts.assertIsHTMLVideoElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLVideoElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLTextAreaElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLTextAreaElement");
};
goog.dom.asserts.assertIsHTMLCanvasElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLCanvasElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(a) {
  return goog.dom.asserts.assertIsElementType_(a, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(a) {
  if (goog.isObject(a)) {
    try {
      return a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
    } catch (b) {
      return "\x3cobject could not be stringified\x3e";
    }
  } else {
    return void 0 === a ? "undefined" : null === a ? "null" : typeof a;
  }
};
goog.dom.asserts.getWindow_ = function(a) {
  try {
    var b = a && a.ownerDocument, c = b && (b.defaultView || b.parentWindow);
    c = c || goog.global;
    if (c.Element && c.Location) {
      return c;
    }
  } catch (d) {
  }
  return null;
};
goog.functions = {};
goog.functions.constant = function(a) {
  return function() {
    return a;
  };
};
goog.functions.FALSE = function() {
  return !1;
};
goog.functions.TRUE = function() {
  return !0;
};
goog.functions.NULL = function() {
  return null;
};
goog.functions.UNDEFINED = function() {
};
goog.functions.EMPTY = goog.functions.UNDEFINED;
goog.functions.identity = function(a, b) {
  return a;
};
goog.functions.error = function(a) {
  return function() {
    throw Error(a);
  };
};
goog.functions.fail = function(a) {
  return function() {
    throw a;
  };
};
goog.functions.lock = function(a, b) {
  b = b || 0;
  return function() {
    return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
  };
};
goog.functions.nth = function(a) {
  return function() {
    return arguments[a];
  };
};
goog.functions.partialRight = function(a, b) {
  const c = Array.prototype.slice.call(arguments, 1);
  return function() {
    let d = this;
    d === goog.global && (d = void 0);
    const e = Array.prototype.slice.call(arguments);
    e.push.apply(e, c);
    return a.apply(d, e);
  };
};
goog.functions.withReturnValue = function(a, b) {
  return goog.functions.sequence(a, goog.functions.constant(b));
};
goog.functions.equalTo = function(a, b) {
  return function(c) {
    return b ? a == c : a === c;
  };
};
goog.functions.compose = function(a, b) {
  const c = arguments, d = c.length;
  return function() {
    let e;
    d && (e = c[d - 1].apply(this, arguments));
    for (let f = d - 2; 0 <= f; f--) {
      e = c[f].call(this, e);
    }
    return e;
  };
};
goog.functions.sequence = function(a) {
  const b = arguments, c = b.length;
  return function() {
    let d;
    for (let e = 0; e < c; e++) {
      d = b[e].apply(this, arguments);
    }
    return d;
  };
};
goog.functions.and = function(a) {
  const b = arguments, c = b.length;
  return function() {
    for (let d = 0; d < c; d++) {
      if (!b[d].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(a) {
  const b = arguments, c = b.length;
  return function() {
    for (let d = 0; d < c; d++) {
      if (b[d].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(a) {
  return function() {
    return !a.apply(this, arguments);
  };
};
goog.functions.create = function(a, b) {
  var c = function() {
  };
  c.prototype = a.prototype;
  c = new c();
  a.apply(c, Array.prototype.slice.call(arguments, 1));
  return c;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(a) {
  let b = !1, c;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return a();
    }
    b || (c = a(), b = !0);
    return c;
  };
};
goog.functions.once = function(a) {
  let b = a;
  return function() {
    if (b) {
      const c = b;
      b = null;
      c();
    }
  };
};
goog.functions.debounce = function(a, b, c) {
  let d = 0;
  return function(e) {
    goog.global.clearTimeout(d);
    const f = arguments;
    d = goog.global.setTimeout(function() {
      a.apply(c, f);
    }, b);
  };
};
goog.functions.throttle = function(a, b, c) {
  let d = 0, e = !1, f = [];
  const g = function() {
    d = 0;
    e && (e = !1, h());
  }, h = function() {
    d = goog.global.setTimeout(g, b);
    let k = f;
    f = [];
    a.apply(c, k);
  };
  return function(k) {
    f = arguments;
    d ? e = !0 : h();
  };
};
goog.functions.rateLimit = function(a, b, c) {
  let d = 0;
  const e = function() {
    d = 0;
  };
  return function(f) {
    d || (d = goog.global.setTimeout(e, b), a.apply(c, arguments));
  };
};
goog.functions.isFunction = a => "function" === typeof a;
goog.string = {};
goog.string.TypedString = function() {
};
goog.string.Const = function(a, b) {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b || "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = !0;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.DEBUG && (goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
});
goog.string.Const.unwrap = function(a) {
  if (a instanceof goog.string.Const && a.constructor === goog.string.Const && a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  }
  goog.asserts.fail("expected object of type Const, got '" + a + "'");
  return "type_error:Const";
};
goog.string.Const.from = function(a) {
  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.i18n = {};
goog.i18n.bidi = {};
goog.i18n.bidi.FORCE_RTL = !1;
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 
2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 
7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || 
"nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase());
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(a, b) {
  return "number" == typeof a ? 0 < a ? goog.i18n.bidi.Dir.LTR : 0 > a ? goog.i18n.bidi.Dir.RTL : b ? null : goog.i18n.bidi.Dir.NEUTRAL : null == a ? null : a ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿‎Ⰰ-\ud801\ud804-\ud839\ud83c-\udbff豈-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-ࣿ‏\ud802-\ud803\ud83a-\ud83bיִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(a, b) {
  return b ? a.replace(goog.i18n.bidi.htmlSkipReg_, "") : a;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(a, b) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(a, b) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(a) {
  return goog.i18n.bidi.rtlRe_.test(a);
};
goog.i18n.bidi.isLtrChar = function(a) {
  return goog.i18n.bidi.ltrRe_.test(a);
};
goog.i18n.bidi.isNeutralChar = function(a) {
  return !goog.i18n.bidi.isLtrChar(a) && !goog.i18n.bidi.isRtlChar(a);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(a, b) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(a, b) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(a, b) {
  a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b);
  return goog.i18n.bidi.isRequiredLtrRe_.test(a) || !goog.i18n.bidi.hasAnyLtr(a) && !goog.i18n.bidi.hasAnyRtl(a);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(a, b) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(a, b) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(a) {
  return goog.i18n.bidi.rtlLocalesRe_.test(a);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(a, b) {
  b = (void 0 === b ? goog.i18n.bidi.hasAnyRtl(a) : b) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return a.replace(goog.i18n.bidi.bracketGuardTextRe_, b + "$\x26" + b);
};
goog.i18n.bidi.enforceRtlInHtml = function(a) {
  return "\x3c" == a.charAt(0) ? a.replace(/<\w+/, "$\x26 dir\x3drtl") : "\n\x3cspan dir\x3drtl\x3e" + a + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(a) {
  return goog.i18n.bidi.Format.RLE + a + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(a) {
  return "\x3c" == a.charAt(0) ? a.replace(/<\w+/, "$\x26 dir\x3dltr") : "\n\x3cspan dir\x3dltr\x3e" + a + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(a) {
  return goog.i18n.bidi.Format.LRE + a + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(a) {
  return a.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(a) {
  return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(a, b) {
  let c = 0, d = 0, e = !1;
  a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b).split(goog.i18n.bidi.wordSeparatorRe_);
  for (b = 0; b < a.length; b++) {
    const f = a[b];
    goog.i18n.bidi.startsWithRtl(f) ? (c++, d++) : goog.i18n.bidi.isRequiredLtrRe_.test(f) ? e = !0 : goog.i18n.bidi.hasAnyLtr(f) ? d++ : goog.i18n.bidi.hasNumeralsRe_.test(f) && (e = !0);
  }
  return 0 == d ? e ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c / d > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(a, b) {
  return goog.i18n.bidi.estimateDirection(a, b) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(a, b) {
  a && (b = goog.i18n.bidi.toDir(b)) && (a.style.textAlign = b == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a.dir = b == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(a, b) {
  switch(goog.i18n.bidi.estimateDirection(b)) {
    case goog.i18n.bidi.Dir.LTR:
      "ltr" !== a.dir && (a.dir = "ltr");
      break;
    case goog.i18n.bidi.Dir.RTL:
      "rtl" !== a.dir && (a.dir = "rtl");
      break;
    default:
      a.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.html = {};
goog.html.trustedtypes = {};
goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse = function() {
  if (!goog.TRUSTED_TYPES_POLICY_NAME) {
    return null;
  }
  void 0 === goog.html.trustedtypes.cachedPolicy_ && (goog.html.trustedtypes.cachedPolicy_ = goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html"));
  return goog.html.trustedtypes.cachedPolicy_;
};
const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE = {};
class module$contents$goog$html$SafeScript_SafeScript {
  constructor(a, b) {
    this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = b === module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE ? a : "";
    this.implementsGoogStringTypedString = !0;
  }
  static fromConstant(a) {
    a = goog.string.Const.unwrap(a);
    return 0 === a.length ? module$contents$goog$html$SafeScript_SafeScript.EMPTY : module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a);
  }
  static fromJson(a) {
    return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a));
  }
  getTypedStringValue() {
    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
  }
  static unwrap(a) {
    return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString();
  }
  static unwrapTrustedScript(a) {
    if (a instanceof module$contents$goog$html$SafeScript_SafeScript && a.constructor === module$contents$goog$html$SafeScript_SafeScript) {
      return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;
    }
    (0,goog.asserts.fail)("expected object of type SafeScript, got '" + a + "' of type " + goog.typeOf(a));
    return "type_error:SafeScript";
  }
  static stringify_(a) {
    return JSON.stringify(a).replace(/</g, "\\x3c");
  }
  static createSafeScriptSecurityPrivateDoNotAccessOrElse(a) {
    const b = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
    a = b ? b.createScript(a) : a;
    return new module$contents$goog$html$SafeScript_SafeScript(a, module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE);
  }
}
module$contents$goog$html$SafeScript_SafeScript.prototype.toString = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
};
module$contents$goog$html$SafeScript_SafeScript.EMPTY = function() {
  return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
}();
goog.html.SafeScript = module$contents$goog$html$SafeScript_SafeScript;
goog.fs = {};
goog.fs.url = {};
goog.fs.url.createObjectUrl = function(a) {
  return goog.fs.url.getUrlObject_().createObjectURL(a);
};
goog.fs.url.revokeObjectUrl = function(a) {
  goog.fs.url.getUrlObject_().revokeObjectURL(a);
};
goog.fs.url.UrlObject_ = function() {
};
goog.fs.url.UrlObject_.prototype.createObjectURL = function(a) {
};
goog.fs.url.UrlObject_.prototype.revokeObjectURL = function(a) {
};
goog.fs.url.getUrlObject_ = function() {
  const a = goog.fs.url.findUrlObject_();
  if (null != a) {
    return a;
  }
  throw Error("This browser doesn't seem to support blob URLs");
};
goog.fs.url.findUrlObject_ = function() {
  return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.createObjectURL ? goog.global : null;
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return null != goog.fs.url.findUrlObject_();
};
goog.fs.blob = {};
goog.fs.blob.getBlob = function(a) {
  var b = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
  if (void 0 !== b) {
    b = new b();
    for (let c = 0; c < arguments.length; c++) {
      b.append(arguments[c]);
    }
    return b.getBlob();
  }
  return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));
};
goog.fs.blob.getBlobWithProperties = function(a, b, c) {
  var d = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
  if (void 0 !== d) {
    d = new d();
    for (let e = 0; e < a.length; e++) {
      d.append(a[e], c);
    }
    return d.getBlob(b);
  }
  if (void 0 !== goog.global.Blob) {
    return d = {}, b && (d.type = b), c && (d.endings = c), new Blob(a, d);
  }
  throw Error("This browser doesn't seem to support creating Blobs");
};
goog.html.TrustedResourceUrl = class {
  constructor(a, b) {
    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = b === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? a : "";
  }
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(a, b) {
  var c = goog.html.TrustedResourceUrl.unwrap(this);
  c = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);
  var d = c[3] || "";
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", c[2] || "", a) + goog.html.TrustedResourceUrl.stringifyParams_("#", d, b));
};
goog.html.TrustedResourceUrl.prototype.toString = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "";
};
goog.html.TrustedResourceUrl.unwrap = function(a) {
  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString();
};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(a) {
  if (a instanceof goog.html.TrustedResourceUrl && a.constructor === goog.html.TrustedResourceUrl) {
    return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a + "' of type " + goog.typeOf(a));
  return "type_error:TrustedResourceUrl";
};
goog.html.TrustedResourceUrl.format = function(a, b) {
  var c = goog.string.Const.unwrap(a);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(c)) {
    throw Error("Invalid TrustedResourceUrl format: " + c);
  }
  a = c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(d, e) {
    if (!Object.prototype.hasOwnProperty.call(b, e)) {
      throw Error('Found marker, "' + e + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));
    }
    d = b[e];
    return d instanceof goog.string.Const ? goog.string.Const.unwrap(d) : encodeURIComponent(String(d));
  });
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = RegExp("^((https:)?//[0-9a-z.:[\\]-]+/|/[^/\\\\]|[^:/\\\\%]+/|[^:/\\\\%]*[?#]|about:blank#)", "i");
goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams = function(a, b, c, d) {
  return goog.html.TrustedResourceUrl.format(a, b).cloneWithParams(c, d);
};
goog.html.TrustedResourceUrl.fromConstant = function(a) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
};
goog.html.TrustedResourceUrl.fromConstants = function(a) {
  for (var b = "", c = 0; c < a.length; c++) {
    b += goog.string.Const.unwrap(a[c]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.TrustedResourceUrl.fromSafeScript = function(a) {
  a = goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)], "text/javascript");
  a = goog.fs.url.createObjectUrl(a);
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(a) {
  const b = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
  a = b ? b.createScriptURL(a) : a;
  return new goog.html.TrustedResourceUrl(a, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
};
goog.html.TrustedResourceUrl.stringifyParams_ = function(a, b, c) {
  if (null == c) {
    return b;
  }
  if ("string" === typeof c) {
    return c ? a + encodeURIComponent(c) : "";
  }
  for (var d in c) {
    if (Object.prototype.hasOwnProperty.call(c, d)) {
      var e = c[d];
      e = Array.isArray(e) ? e : [e];
      for (var f = 0; f < e.length; f++) {
        var g = e[f];
        null != g && (b || (b = a), b += (b.length > a.length ? "\x26" : "") + encodeURIComponent(d) + "\x3d" + encodeURIComponent(String(g)));
      }
    }
  }
  return b;
};
goog.string.internal = {};
goog.string.internal.startsWith = function(a, b) {
  return 0 == a.lastIndexOf(b, 0);
};
goog.string.internal.endsWith = function(a, b) {
  const c = a.length - b.length;
  return 0 <= c && a.indexOf(b, c) == c;
};
goog.string.internal.caseInsensitiveStartsWith = function(a, b) {
  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(0, b.length));
};
goog.string.internal.caseInsensitiveEndsWith = function(a, b) {
  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
};
goog.string.internal.caseInsensitiveEquals = function(a, b) {
  return a.toLowerCase() == b.toLowerCase();
};
goog.string.internal.isEmptyOrWhitespace = function(a) {
  return /^[\s\xa0]*$/.test(a);
};
goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {
  return a.trim();
} : function(a) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};
goog.string.internal.caseInsensitiveCompare = function(a, b) {
  a = String(a).toLowerCase();
  b = String(b).toLowerCase();
  return a < b ? -1 : a == b ? 0 : 1;
};
goog.string.internal.newLineToBr = function(a, b) {
  return a.replace(/(\r\n|\r|\n)/g, b ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.internal.htmlEscape = function(a, b) {
  if (b) {
    a = a.replace(goog.string.internal.AMP_RE_, "\x26amp;").replace(goog.string.internal.LT_RE_, "\x26lt;").replace(goog.string.internal.GT_RE_, "\x26gt;").replace(goog.string.internal.QUOT_RE_, "\x26quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.internal.NULL_RE_, "\x26#0;");
  } else {
    if (!goog.string.internal.ALL_RE_.test(a)) {
      return a;
    }
    -1 != a.indexOf("\x26") && (a = a.replace(goog.string.internal.AMP_RE_, "\x26amp;"));
    -1 != a.indexOf("\x3c") && (a = a.replace(goog.string.internal.LT_RE_, "\x26lt;"));
    -1 != a.indexOf("\x3e") && (a = a.replace(goog.string.internal.GT_RE_, "\x26gt;"));
    -1 != a.indexOf('"') && (a = a.replace(goog.string.internal.QUOT_RE_, "\x26quot;"));
    -1 != a.indexOf("'") && (a = a.replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;"));
    -1 != a.indexOf("\x00") && (a = a.replace(goog.string.internal.NULL_RE_, "\x26#0;"));
  }
  return a;
};
goog.string.internal.AMP_RE_ = /&/g;
goog.string.internal.LT_RE_ = /</g;
goog.string.internal.GT_RE_ = />/g;
goog.string.internal.QUOT_RE_ = /"/g;
goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
goog.string.internal.NULL_RE_ = /\x00/g;
goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
goog.string.internal.whitespaceEscape = function(a, b) {
  return goog.string.internal.newLineToBr(a.replace(/  /g, " \x26#160;"), b);
};
goog.string.internal.contains = function(a, b) {
  return -1 != a.indexOf(b);
};
goog.string.internal.caseInsensitiveContains = function(a, b) {
  return goog.string.internal.contains(a.toLowerCase(), b.toLowerCase());
};
goog.string.internal.compareVersions = function(a, b) {
  var c = 0;
  a = goog.string.internal.trim(String(a)).split(".");
  b = goog.string.internal.trim(String(b)).split(".");
  const d = Math.max(a.length, b.length);
  for (let g = 0; 0 == c && g < d; g++) {
    var e = a[g] || "", f = b[g] || "";
    do {
      e = /(\d*)(\D*)(.*)/.exec(e) || ["", "", "", ""];
      f = /(\d*)(\D*)(.*)/.exec(f) || ["", "", "", ""];
      if (0 == e[0].length && 0 == f[0].length) {
        break;
      }
      c = 0 == e[1].length ? 0 : parseInt(e[1], 10);
      const h = 0 == f[1].length ? 0 : parseInt(f[1], 10);
      c = goog.string.internal.compareElements_(c, h) || goog.string.internal.compareElements_(0 == e[2].length, 0 == f[2].length) || goog.string.internal.compareElements_(e[2], f[2]);
      e = e[3];
      f = f[3];
    } while (0 == c);
  }
  return c;
};
goog.string.internal.compareElements_ = function(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
};
goog.html.SafeUrl = class {
  constructor(a, b) {
    this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = b === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? a : "";
  }
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.SafeUrl.prototype.toString = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.unwrap = function(a) {
  if (a instanceof goog.html.SafeUrl && a.constructor === goog.html.SafeUrl) {
    return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeUrl, got '" + a + "' of type " + goog.typeOf(a));
  return "type_error:SafeUrl";
};
goog.html.SafeUrl.fromConstant = function(a) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = RegExp('^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font/\\w+|image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\\w+\x3d(?:\\w+|"[\\w;,\x3d ]+"))*$', "i");
goog.html.SafeUrl.isSafeMimeType = function(a) {
  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a);
};
goog.html.SafeUrl.fromBlob = function(a) {
  a = goog.html.SafeUrl.isSafeMimeType(a.type) ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.revokeObjectUrl = function(a) {
  a = a.getTypedStringValue();
  a !== goog.html.SafeUrl.INNOCUOUS_STRING && goog.fs.url.revokeObjectUrl(a);
};
goog.html.SafeUrl.fromMediaSource = function(a) {
  goog.asserts.assert("MediaSource" in goog.global, "No support for MediaSource");
  a = a instanceof MediaSource ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.tryFromDataUrl = function(a) {
  a = String(a);
  a = a.replace(/(%0A|%0D)/g, "");
  var b = a.match(goog.html.DATA_URL_PATTERN_);
  return b && goog.html.SafeUrl.isSafeMimeType(b[1]) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a) : null;
};
goog.html.SafeUrl.fromDataUrl = function(a) {
  return goog.html.SafeUrl.tryFromDataUrl(a) || goog.html.SafeUrl.INNOCUOUS_URL;
};
goog.html.SafeUrl.fromTelUrl = function(a) {
  goog.string.internal.caseInsensitiveStartsWith(a, "tel:") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SIP_URL_PATTERN_ = RegExp("^sip[s]?:[+a-z0-9_.!$%\x26'*\\/\x3d^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$", "i");
goog.html.SafeUrl.fromSipUrl = function(a) {
  goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a)) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.fromFacebookMessengerUrl = function(a) {
  goog.string.internal.caseInsensitiveStartsWith(a, "fb-messenger://share") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.fromWhatsAppUrl = function(a) {
  goog.string.internal.caseInsensitiveStartsWith(a, "whatsapp://send") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.fromSmsUrl = function(a) {
  goog.string.internal.caseInsensitiveStartsWith(a, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.isSmsUrlBodyValid_ = function(a) {
  var b = a.indexOf("#");
  0 < b && (a = a.substring(0, b));
  b = a.match(/[?&]body=/gi);
  if (!b) {
    return !0;
  }
  if (1 < b.length) {
    return !1;
  }
  a = a.match(/[?&]body=([^&]*)/)[1];
  if (!a) {
    return !0;
  }
  try {
    decodeURIComponent(a);
  } catch (c) {
    return !1;
  }
  return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a);
};
goog.html.SafeUrl.fromSshUrl = function(a) {
  goog.string.internal.caseInsensitiveStartsWith(a, "ssh://") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(a, b) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, a, b);
};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(a, b) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, a, b);
};
goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(a, b) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, a, b);
};
goog.html.SafeUrl.sanitizeExtensionUrl_ = function(a, b, c) {
  (a = a.exec(b)) ? (a = a[1], -1 == (c instanceof goog.string.Const ? [goog.string.Const.unwrap(c)] : c.map(function(d) {
    return goog.string.Const.unwrap(d);
  })).indexOf(a) && (b = goog.html.SafeUrl.INNOCUOUS_STRING)) : b = goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(a) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
goog.html.SafeUrl.trySanitize = function(a) {
  if (a instanceof goog.html.SafeUrl) {
    return a;
  }
  a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
  return goog.html.SAFE_URL_PATTERN_.test(a) ? goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a) : goog.html.SafeUrl.tryFromDataUrl(a);
};
goog.html.SafeUrl.sanitize = function(a) {
  return goog.html.SafeUrl.trySanitize(a) || goog.html.SafeUrl.INNOCUOUS_URL;
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(a, b) {
  if (a instanceof goog.html.SafeUrl) {
    return a;
  }
  a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
  if (b && /^data:/i.test(a) && (b = goog.html.SafeUrl.fromDataUrl(a), b.getTypedStringValue() == a)) {
    return b;
  }
  goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a), "%s does not match the safe URL pattern", a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
};
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(a) {
  return new goog.html.SafeUrl(a, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);
};
goog.html.SafeUrl.INNOCUOUS_URL = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
const module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE = {};
class module$contents$goog$html$SafeStyle_SafeStyle {
  constructor(a, b) {
    this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = b === module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE ? a : "";
    this.implementsGoogStringTypedString = !0;
  }
  static fromConstant(a) {
    a = goog.string.Const.unwrap(a);
    if (0 === a.length) {
      return module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
    }
    (0,goog.asserts.assert)((0,goog.string.internal.endsWith)(a, ";"), `Last character of style string is not ';': ${a}`);
    (0,goog.asserts.assert)((0,goog.string.internal.contains)(a, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + a);
    return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a);
  }
  getTypedStringValue() {
    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  }
  toString() {
    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();
  }
  static unwrap(a) {
    if (a instanceof module$contents$goog$html$SafeStyle_SafeStyle && a.constructor === module$contents$goog$html$SafeStyle_SafeStyle) {
      return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;
    }
    (0,goog.asserts.fail)(`expected object of type SafeStyle, got '${a}` + "' of type " + goog.typeOf(a));
    return "type_error:SafeStyle";
  }
  static createSafeStyleSecurityPrivateDoNotAccessOrElse(a) {
    return new module$contents$goog$html$SafeStyle_SafeStyle(a, module$contents$goog$html$SafeStyle_CONSTRUCTOR_TOKEN_PRIVATE);
  }
  static create(a) {
    let b = "";
    for (let c in a) {
      if (Object.prototype.hasOwnProperty.call(a, c)) {
        if (!/^[-_a-zA-Z0-9]+$/.test(c)) {
          throw Error(`Name allows only [-_a-zA-Z0-9], got: ${c}`);
        }
        let d = a[c];
        null != d && (d = Array.isArray(d) ? d.map(module$contents$goog$html$SafeStyle_sanitizePropertyValue).join(" ") : module$contents$goog$html$SafeStyle_sanitizePropertyValue(d), b += `${c}:${d};`);
      }
    }
    return b ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
  }
  static concat(a) {
    let b = "";
    const c = d => {
      Array.isArray(d) ? d.forEach(c) : b += module$contents$goog$html$SafeStyle_SafeStyle.unwrap(d);
    };
    Array.prototype.forEach.call(arguments, c);
    return b ? module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : module$contents$goog$html$SafeStyle_SafeStyle.EMPTY;
  }
}
module$contents$goog$html$SafeStyle_SafeStyle.EMPTY = module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING = "zClosurez";
function module$contents$goog$html$SafeStyle_sanitizePropertyValue(a) {
  if (a instanceof goog.html.SafeUrl) {
    return 'url("' + goog.html.SafeUrl.unwrap(a).replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
  }
  a = a instanceof goog.string.Const ? goog.string.Const.unwrap(a) : module$contents$goog$html$SafeStyle_sanitizePropertyValueString(String(a));
  if (/[{;}]/.test(a)) {
    throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [a]);
  }
  return a;
}
function module$contents$goog$html$SafeStyle_sanitizePropertyValueString(a) {
  const b = a.replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, "$1").replace(module$contents$goog$html$SafeStyle_FUNCTIONS_RE, "$1").replace(module$contents$goog$html$SafeStyle_URL_RE, "url");
  if (module$contents$goog$html$SafeStyle_VALUE_RE.test(b)) {
    if (module$contents$goog$html$SafeStyle_COMMENT_RE.test(a)) {
      return (0,goog.asserts.fail)(`String value disallows comments, got: ${a}`), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
    }
    if (!module$contents$goog$html$SafeStyle_hasBalancedQuotes(a)) {
      return (0,goog.asserts.fail)(`String value requires balanced quotes, got: ${a}`), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
    }
    if (!module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a)) {
      return (0,goog.asserts.fail)("String value requires balanced square brackets and one identifier per pair of brackets, got: " + a), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
    }
  } else {
    return (0,goog.asserts.fail)(`String value allows only ${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}` + " and simple functions, got: " + a), module$contents$goog$html$SafeStyle_SafeStyle.INNOCUOUS_STRING;
  }
  return module$contents$goog$html$SafeStyle_sanitizeUrl(a);
}
function module$contents$goog$html$SafeStyle_hasBalancedQuotes(a) {
  let b = !0, c = !0;
  for (let d = 0; d < a.length; d++) {
    const e = a.charAt(d);
    "'" == e && c ? b = !b : '"' == e && b && (c = !c);
  }
  return b && c;
}
function module$contents$goog$html$SafeStyle_hasBalancedSquareBrackets(a) {
  let b = !0;
  const c = /^[-_a-zA-Z0-9]$/;
  for (let d = 0; d < a.length; d++) {
    const e = a.charAt(d);
    if ("]" == e) {
      if (b) {
        return !1;
      }
      b = !0;
    } else if ("[" == e) {
      if (!b) {
        return !1;
      }
      b = !1;
    } else if (!b && !c.test(e)) {
      return !1;
    }
  }
  return b;
}
const module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]", module$contents$goog$html$SafeStyle_VALUE_RE = new RegExp(`^${module$contents$goog$html$SafeStyle_VALUE_ALLOWED_CHARS}+\$`), module$contents$goog$html$SafeStyle_URL_RE = RegExp("\\b(url\\([ \t\n]*)('[ -\x26(-\\[\\]-~]*'|\"[ !#-\\[\\]-~]*\"|[!#-\x26*-\\[\\]-~]*)([ \t\n]*\\))", "g"), module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS = "calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)? var".split(" "), 
module$contents$goog$html$SafeStyle_FUNCTIONS_RE = new RegExp("\\b(" + module$contents$goog$html$SafeStyle_ALLOWED_FUNCTIONS.join("|") + ")\\([-+*/0-9a-z.%#\\[\\], ]+\\)", "g"), module$contents$goog$html$SafeStyle_COMMENT_RE = /\/\*/;
function module$contents$goog$html$SafeStyle_sanitizeUrl(a) {
  return a.replace(module$contents$goog$html$SafeStyle_URL_RE, (b, c, d, e) => {
    let f = "";
    d = d.replace(/^(['"])(.*)\1$/, (g, h, k) => {
      f = h;
      return k;
    });
    b = goog.html.SafeUrl.sanitize(d).getTypedStringValue();
    return c + f + b + f + e;
  });
}
goog.html.SafeStyle = module$contents$goog$html$SafeStyle_SafeStyle;
goog.object = {};
function module$contents$goog$object_forEach(a, b, c) {
  for (const d in a) {
    b.call(c, a[d], d, a);
  }
}
function module$contents$goog$object_filter(a, b, c) {
  const d = {};
  for (const e in a) {
    b.call(c, a[e], e, a) && (d[e] = a[e]);
  }
  return d;
}
function module$contents$goog$object_map(a, b, c) {
  const d = {};
  for (const e in a) {
    d[e] = b.call(c, a[e], e, a);
  }
  return d;
}
function module$contents$goog$object_some(a, b, c) {
  for (const d in a) {
    if (b.call(c, a[d], d, a)) {
      return !0;
    }
  }
  return !1;
}
function module$contents$goog$object_every(a, b, c) {
  for (const d in a) {
    if (!b.call(c, a[d], d, a)) {
      return !1;
    }
  }
  return !0;
}
function module$contents$goog$object_getCount(a) {
  let b = 0;
  for (const c in a) {
    b++;
  }
  return b;
}
function module$contents$goog$object_getAnyKey(a) {
  for (const b in a) {
    return b;
  }
}
function module$contents$goog$object_getAnyValue(a) {
  for (const b in a) {
    return a[b];
  }
}
function module$contents$goog$object_contains(a, b) {
  return module$contents$goog$object_containsValue(a, b);
}
function module$contents$goog$object_getValues(a) {
  const b = [];
  let c = 0;
  for (const d in a) {
    b[c++] = a[d];
  }
  return b;
}
function module$contents$goog$object_getKeys(a) {
  const b = [];
  let c = 0;
  for (const d in a) {
    b[c++] = d;
  }
  return b;
}
function module$contents$goog$object_getValueByKeys(a, b) {
  var c = goog.isArrayLike(b);
  const d = c ? b : arguments;
  for (c = c ? 0 : 1; c < d.length; c++) {
    if (null == a) {
      return;
    }
    a = a[d[c]];
  }
  return a;
}
function module$contents$goog$object_containsKey(a, b) {
  return null !== a && b in a;
}
function module$contents$goog$object_containsValue(a, b) {
  for (const c in a) {
    if (a[c] == b) {
      return !0;
    }
  }
  return !1;
}
function module$contents$goog$object_findKey(a, b, c) {
  for (const d in a) {
    if (b.call(c, a[d], d, a)) {
      return d;
    }
  }
}
function module$contents$goog$object_findValue(a, b, c) {
  return (b = module$contents$goog$object_findKey(a, b, c)) && a[b];
}
function module$contents$goog$object_isEmpty(a) {
  for (const b in a) {
    return !1;
  }
  return !0;
}
function module$contents$goog$object_clear(a) {
  for (const b in a) {
    delete a[b];
  }
}
function module$contents$goog$object_remove(a, b) {
  let c;
  (c = b in a) && delete a[b];
  return c;
}
function module$contents$goog$object_add(a, b, c) {
  if (null !== a && b in a) {
    throw Error(`The object already contains the key "${b}"`);
  }
  module$contents$goog$object_set(a, b, c);
}
function module$contents$goog$object_get(a, b, c) {
  return null !== a && b in a ? a[b] : c;
}
function module$contents$goog$object_set(a, b, c) {
  a[b] = c;
}
function module$contents$goog$object_setIfUndefined(a, b, c) {
  return b in a ? a[b] : a[b] = c;
}
function module$contents$goog$object_setWithReturnValueIfNotSet(a, b, c) {
  if (b in a) {
    return a[b];
  }
  c = c();
  return a[b] = c;
}
function module$contents$goog$object_equals(a, b) {
  for (const c in a) {
    if (!(c in b) || a[c] !== b[c]) {
      return !1;
    }
  }
  for (const c in b) {
    if (!(c in a)) {
      return !1;
    }
  }
  return !0;
}
function module$contents$goog$object_clone(a) {
  const b = {};
  for (const c in a) {
    b[c] = a[c];
  }
  return b;
}
function module$contents$goog$object_unsafeClone(a) {
  if (!a || "object" !== typeof a) {
    return a;
  }
  if ("function" === typeof a.clone) {
    return a.clone();
  }
  if ("undefined" !== typeof Map && a instanceof Map) {
    return new Map(a);
  }
  if ("undefined" !== typeof Set && a instanceof Set) {
    return new Set(a);
  }
  const b = Array.isArray(a) ? [] : "function" !== typeof ArrayBuffer || "function" !== typeof ArrayBuffer.isView || !ArrayBuffer.isView(a) || a instanceof DataView ? {} : new a.constructor(a.length);
  for (const c in a) {
    b[c] = module$contents$goog$object_unsafeClone(a[c]);
  }
  return b;
}
function module$contents$goog$object_transpose(a) {
  const b = {};
  for (const c in a) {
    b[a[c]] = c;
  }
  return b;
}
const module$contents$goog$object_PROTOTYPE_FIELDS = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function module$contents$goog$object_extend(a, b) {
  let c, d;
  for (let e = 1; e < arguments.length; e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (let f = 0; f < module$contents$goog$object_PROTOTYPE_FIELDS.length; f++) {
      c = module$contents$goog$object_PROTOTYPE_FIELDS[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
}
function module$contents$goog$object_create(a) {
  const b = arguments.length;
  if (1 == b && Array.isArray(arguments[0])) {
    return module$contents$goog$object_create.apply(null, arguments[0]);
  }
  if (b % 2) {
    throw Error("Uneven number of arguments");
  }
  const c = {};
  for (let d = 0; d < b; d += 2) {
    c[arguments[d]] = arguments[d + 1];
  }
  return c;
}
function module$contents$goog$object_createSet(a) {
  const b = arguments.length;
  if (1 == b && Array.isArray(arguments[0])) {
    return module$contents$goog$object_createSet.apply(null, arguments[0]);
  }
  const c = {};
  for (let d = 0; d < b; d++) {
    c[arguments[d]] = !0;
  }
  return c;
}
function module$contents$goog$object_createImmutableView(a) {
  let b = a;
  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
  return b;
}
function module$contents$goog$object_isImmutableView(a) {
  return !!Object.isFrozen && Object.isFrozen(a);
}
function module$contents$goog$object_getAllPropertyNames(a, b, c) {
  if (!a) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return module$contents$goog$object_getKeys(a);
  }
  const d = {};
  for (; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {
    const e = Object.getOwnPropertyNames(a);
    for (let f = 0; f < e.length; f++) {
      d[e[f]] = !0;
    }
    a = Object.getPrototypeOf(a);
  }
  return module$contents$goog$object_getKeys(d);
}
function module$contents$goog$object_getSuperClass(a) {
  return (a = Object.getPrototypeOf(a.prototype)) && a.constructor;
}
goog.object.add = module$contents$goog$object_add;
goog.object.clear = module$contents$goog$object_clear;
goog.object.clone = module$contents$goog$object_clone;
goog.object.contains = module$contents$goog$object_contains;
goog.object.containsKey = module$contents$goog$object_containsKey;
goog.object.containsValue = module$contents$goog$object_containsValue;
goog.object.create = module$contents$goog$object_create;
goog.object.createImmutableView = module$contents$goog$object_createImmutableView;
goog.object.createSet = module$contents$goog$object_createSet;
goog.object.equals = module$contents$goog$object_equals;
goog.object.every = module$contents$goog$object_every;
goog.object.extend = module$contents$goog$object_extend;
goog.object.filter = module$contents$goog$object_filter;
goog.object.findKey = module$contents$goog$object_findKey;
goog.object.findValue = module$contents$goog$object_findValue;
goog.object.forEach = module$contents$goog$object_forEach;
goog.object.get = module$contents$goog$object_get;
goog.object.getAllPropertyNames = module$contents$goog$object_getAllPropertyNames;
goog.object.getAnyKey = module$contents$goog$object_getAnyKey;
goog.object.getAnyValue = module$contents$goog$object_getAnyValue;
goog.object.getCount = module$contents$goog$object_getCount;
goog.object.getKeys = module$contents$goog$object_getKeys;
goog.object.getSuperClass = module$contents$goog$object_getSuperClass;
goog.object.getValueByKeys = module$contents$goog$object_getValueByKeys;
goog.object.getValues = module$contents$goog$object_getValues;
goog.object.isEmpty = module$contents$goog$object_isEmpty;
goog.object.isImmutableView = module$contents$goog$object_isImmutableView;
goog.object.map = module$contents$goog$object_map;
goog.object.remove = module$contents$goog$object_remove;
goog.object.set = module$contents$goog$object_set;
goog.object.setIfUndefined = module$contents$goog$object_setIfUndefined;
goog.object.setWithReturnValueIfNotSet = module$contents$goog$object_setWithReturnValueIfNotSet;
goog.object.some = module$contents$goog$object_some;
goog.object.transpose = module$contents$goog$object_transpose;
goog.object.unsafeClone = module$contents$goog$object_unsafeClone;
const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE = {};
class module$contents$goog$html$SafeStyleSheet_SafeStyleSheet {
  constructor(a, b) {
    this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = b === module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE ? a : "";
    this.implementsGoogStringTypedString = !0;
  }
  static createRule(a, b) {
    if ((0,goog.string.internal.contains)(a, "\x3c")) {
      throw Error(`Selector does not allow '<', got: ${a}`);
    }
    const c = a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
    if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c)) {
      throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and strings, got: " + a);
    }
    if (!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c)) {
      throw Error("() and [] in selector must be balanced, got: " + a);
    }
    b instanceof module$contents$goog$html$SafeStyle_SafeStyle || (b = module$contents$goog$html$SafeStyle_SafeStyle.create(b));
    a = `${a}{` + module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b).replace(/</g, "\\3C ") + "}";
    return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a);
  }
  static hasBalancedBrackets_(a) {
    const b = {"(":")", "[":"]"}, c = [];
    for (let d = 0; d < a.length; d++) {
      const e = a[d];
      if (b[e]) {
        c.push(b[e]);
      } else if (goog.object.contains(b, e) && c.pop() != e) {
        return !1;
      }
    }
    return 0 == c.length;
  }
  static concat(a) {
    let b = "";
    const c = d => {
      Array.isArray(d) ? d.forEach(c) : b += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d);
    };
    Array.prototype.forEach.call(arguments, c);
    return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
  }
  static fromConstant(a) {
    a = goog.string.Const.unwrap(a);
    if (0 === a.length) {
      return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;
    }
    (0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a, "\x3c"), `Forbidden '<' character in style sheet string: ${a}`);
    return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a);
  }
  getTypedStringValue() {
    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  }
  static unwrap(a) {
    if (a instanceof module$contents$goog$html$SafeStyleSheet_SafeStyleSheet && a.constructor === module$contents$goog$html$SafeStyleSheet_SafeStyleSheet) {
      return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
    }
    (0,goog.asserts.fail)("expected object of type SafeStyleSheet, got '" + a + "' of type " + goog.typeOf(a));
    return "type_error:SafeStyleSheet";
  }
  static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a) {
    return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a, module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE);
  }
}
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.toString = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();
};
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyleSheet = module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;
goog.dom.HtmlElement = function() {
};
goog.dom.TagName = class {
  static cast(a, b) {
    return a;
  }
  constructor() {
  }
  toString() {
  }
};
goog.dom.TagName.A = "A";
goog.dom.TagName.ABBR = "ABBR";
goog.dom.TagName.ACRONYM = "ACRONYM";
goog.dom.TagName.ADDRESS = "ADDRESS";
goog.dom.TagName.APPLET = "APPLET";
goog.dom.TagName.AREA = "AREA";
goog.dom.TagName.ARTICLE = "ARTICLE";
goog.dom.TagName.ASIDE = "ASIDE";
goog.dom.TagName.AUDIO = "AUDIO";
goog.dom.TagName.B = "B";
goog.dom.TagName.BASE = "BASE";
goog.dom.TagName.BASEFONT = "BASEFONT";
goog.dom.TagName.BDI = "BDI";
goog.dom.TagName.BDO = "BDO";
goog.dom.TagName.BIG = "BIG";
goog.dom.TagName.BLOCKQUOTE = "BLOCKQUOTE";
goog.dom.TagName.BODY = "BODY";
goog.dom.TagName.BR = "BR";
goog.dom.TagName.BUTTON = "BUTTON";
goog.dom.TagName.CANVAS = "CANVAS";
goog.dom.TagName.CAPTION = "CAPTION";
goog.dom.TagName.CENTER = "CENTER";
goog.dom.TagName.CITE = "CITE";
goog.dom.TagName.CODE = "CODE";
goog.dom.TagName.COL = "COL";
goog.dom.TagName.COLGROUP = "COLGROUP";
goog.dom.TagName.COMMAND = "COMMAND";
goog.dom.TagName.DATA = "DATA";
goog.dom.TagName.DATALIST = "DATALIST";
goog.dom.TagName.DD = "DD";
goog.dom.TagName.DEL = "DEL";
goog.dom.TagName.DETAILS = "DETAILS";
goog.dom.TagName.DFN = "DFN";
goog.dom.TagName.DIALOG = "DIALOG";
goog.dom.TagName.DIR = "DIR";
goog.dom.TagName.DIV = "DIV";
goog.dom.TagName.DL = "DL";
goog.dom.TagName.DT = "DT";
goog.dom.TagName.EM = "EM";
goog.dom.TagName.EMBED = "EMBED";
goog.dom.TagName.FIELDSET = "FIELDSET";
goog.dom.TagName.FIGCAPTION = "FIGCAPTION";
goog.dom.TagName.FIGURE = "FIGURE";
goog.dom.TagName.FONT = "FONT";
goog.dom.TagName.FOOTER = "FOOTER";
goog.dom.TagName.FORM = "FORM";
goog.dom.TagName.FRAME = "FRAME";
goog.dom.TagName.FRAMESET = "FRAMESET";
goog.dom.TagName.H1 = "H1";
goog.dom.TagName.H2 = "H2";
goog.dom.TagName.H3 = "H3";
goog.dom.TagName.H4 = "H4";
goog.dom.TagName.H5 = "H5";
goog.dom.TagName.H6 = "H6";
goog.dom.TagName.HEAD = "HEAD";
goog.dom.TagName.HEADER = "HEADER";
goog.dom.TagName.HGROUP = "HGROUP";
goog.dom.TagName.HR = "HR";
goog.dom.TagName.HTML = "HTML";
goog.dom.TagName.I = "I";
goog.dom.TagName.IFRAME = "IFRAME";
goog.dom.TagName.IMG = "IMG";
goog.dom.TagName.INPUT = "INPUT";
goog.dom.TagName.INS = "INS";
goog.dom.TagName.ISINDEX = "ISINDEX";
goog.dom.TagName.KBD = "KBD";
goog.dom.TagName.KEYGEN = "KEYGEN";
goog.dom.TagName.LABEL = "LABEL";
goog.dom.TagName.LEGEND = "LEGEND";
goog.dom.TagName.LI = "LI";
goog.dom.TagName.LINK = "LINK";
goog.dom.TagName.MAIN = "MAIN";
goog.dom.TagName.MAP = "MAP";
goog.dom.TagName.MARK = "MARK";
goog.dom.TagName.MATH = "MATH";
goog.dom.TagName.MENU = "MENU";
goog.dom.TagName.MENUITEM = "MENUITEM";
goog.dom.TagName.META = "META";
goog.dom.TagName.METER = "METER";
goog.dom.TagName.NAV = "NAV";
goog.dom.TagName.NOFRAMES = "NOFRAMES";
goog.dom.TagName.NOSCRIPT = "NOSCRIPT";
goog.dom.TagName.OBJECT = "OBJECT";
goog.dom.TagName.OL = "OL";
goog.dom.TagName.OPTGROUP = "OPTGROUP";
goog.dom.TagName.OPTION = "OPTION";
goog.dom.TagName.OUTPUT = "OUTPUT";
goog.dom.TagName.P = "P";
goog.dom.TagName.PARAM = "PARAM";
goog.dom.TagName.PICTURE = "PICTURE";
goog.dom.TagName.PRE = "PRE";
goog.dom.TagName.PROGRESS = "PROGRESS";
goog.dom.TagName.Q = "Q";
goog.dom.TagName.RP = "RP";
goog.dom.TagName.RT = "RT";
goog.dom.TagName.RTC = "RTC";
goog.dom.TagName.RUBY = "RUBY";
goog.dom.TagName.S = "S";
goog.dom.TagName.SAMP = "SAMP";
goog.dom.TagName.SCRIPT = "SCRIPT";
goog.dom.TagName.SECTION = "SECTION";
goog.dom.TagName.SELECT = "SELECT";
goog.dom.TagName.SMALL = "SMALL";
goog.dom.TagName.SOURCE = "SOURCE";
goog.dom.TagName.SPAN = "SPAN";
goog.dom.TagName.STRIKE = "STRIKE";
goog.dom.TagName.STRONG = "STRONG";
goog.dom.TagName.STYLE = "STYLE";
goog.dom.TagName.SUB = "SUB";
goog.dom.TagName.SUMMARY = "SUMMARY";
goog.dom.TagName.SUP = "SUP";
goog.dom.TagName.SVG = "SVG";
goog.dom.TagName.TABLE = "TABLE";
goog.dom.TagName.TBODY = "TBODY";
goog.dom.TagName.TD = "TD";
goog.dom.TagName.TEMPLATE = "TEMPLATE";
goog.dom.TagName.TEXTAREA = "TEXTAREA";
goog.dom.TagName.TFOOT = "TFOOT";
goog.dom.TagName.TH = "TH";
goog.dom.TagName.THEAD = "THEAD";
goog.dom.TagName.TIME = "TIME";
goog.dom.TagName.TITLE = "TITLE";
goog.dom.TagName.TR = "TR";
goog.dom.TagName.TRACK = "TRACK";
goog.dom.TagName.TT = "TT";
goog.dom.TagName.U = "U";
goog.dom.TagName.UL = "UL";
goog.dom.TagName.VAR = "VAR";
goog.dom.TagName.VIDEO = "VIDEO";
goog.dom.TagName.WBR = "WBR";
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;
goog.array.ASSUME_NATIVE_FUNCTIONS = module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;
function module$contents$goog$array_peek(a) {
  return a[a.length - 1];
}
goog.array.peek = module$contents$goog$array_peek;
goog.array.last = module$contents$goog$array_peek;
const module$contents$goog$array_indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.indexOf.call(a, b, c);
} : function(a, b, c) {
  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;
  if ("string" === typeof a) {
    return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, c);
  }
  for (; c < a.length; c++) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.indexOf = module$contents$goog$array_indexOf;
const module$contents$goog$array_lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
} : function(a, b, c) {
  c = null == c ? a.length - 1 : c;
  0 > c && (c = Math.max(0, a.length + c));
  if ("string" === typeof a) {
    return "string" !== typeof b || 1 != b.length ? -1 : a.lastIndexOf(b, c);
  }
  for (; 0 <= c; c--) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.lastIndexOf = module$contents$goog$array_lastIndexOf;
const module$contents$goog$array_forEach = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  Array.prototype.forEach.call(a, b, c);
} : function(a, b, c) {
  const d = a.length, e = "string" === typeof a ? a.split("") : a;
  for (let f = 0; f < d; f++) {
    f in e && b.call(c, e[f], f, a);
  }
};
goog.array.forEach = module$contents$goog$array_forEach;
function module$contents$goog$array_forEachRight(a, b, c) {
  var d = a.length;
  const e = "string" === typeof a ? a.split("") : a;
  for (--d; 0 <= d; --d) {
    d in e && b.call(c, e[d], d, a);
  }
}
goog.array.forEachRight = module$contents$goog$array_forEachRight;
const module$contents$goog$array_filter = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.filter.call(a, b, c);
} : function(a, b, c) {
  const d = a.length, e = [];
  let f = 0;
  const g = "string" === typeof a ? a.split("") : a;
  for (let h = 0; h < d; h++) {
    if (h in g) {
      const k = g[h];
      b.call(c, k, h, a) && (e[f++] = k);
    }
  }
  return e;
};
goog.array.filter = module$contents$goog$array_filter;
const module$contents$goog$array_map = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.map.call(a, b, c);
} : function(a, b, c) {
  const d = a.length, e = Array(d), f = "string" === typeof a ? a.split("") : a;
  for (let g = 0; g < d; g++) {
    g in f && (e[g] = b.call(c, f[g], g, a));
  }
  return e;
};
goog.array.map = module$contents$goog$array_map;
const module$contents$goog$array_reduce = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduce.call(a, b, c);
} : function(a, b, c, d) {
  let e = c;
  module$contents$goog$array_forEach(a, function(f, g) {
    e = b.call(d, e, f, g, a);
  });
  return e;
};
goog.array.reduce = module$contents$goog$array_reduce;
const module$contents$goog$array_reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  goog.asserts.assert(null != b);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduceRight.call(a, b, c);
} : function(a, b, c, d) {
  let e = c;
  module$contents$goog$array_forEachRight(a, function(f, g) {
    e = b.call(d, e, f, g, a);
  });
  return e;
};
goog.array.reduceRight = module$contents$goog$array_reduceRight;
const module$contents$goog$array_some = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.some.call(a, b, c);
} : function(a, b, c) {
  const d = a.length, e = "string" === typeof a ? a.split("") : a;
  for (let f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return !0;
    }
  }
  return !1;
};
goog.array.some = module$contents$goog$array_some;
const module$contents$goog$array_every = goog.NATIVE_ARRAY_PROTOTYPES && (module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.every.call(a, b, c);
} : function(a, b, c) {
  const d = a.length, e = "string" === typeof a ? a.split("") : a;
  for (let f = 0; f < d; f++) {
    if (f in e && !b.call(c, e[f], f, a)) {
      return !1;
    }
  }
  return !0;
};
goog.array.every = module$contents$goog$array_every;
function module$contents$goog$array_count(a, b, c) {
  let d = 0;
  module$contents$goog$array_forEach(a, function(e, f, g) {
    b.call(c, e, f, g) && ++d;
  }, c);
  return d;
}
goog.array.count = module$contents$goog$array_count;
function module$contents$goog$array_find(a, b, c) {
  b = module$contents$goog$array_findIndex(a, b, c);
  return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
}
goog.array.find = module$contents$goog$array_find;
function module$contents$goog$array_findIndex(a, b, c) {
  const d = a.length, e = "string" === typeof a ? a.split("") : a;
  for (let f = 0; f < d; f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return f;
    }
  }
  return -1;
}
goog.array.findIndex = module$contents$goog$array_findIndex;
function module$contents$goog$array_findRight(a, b, c) {
  b = module$contents$goog$array_findIndexRight(a, b, c);
  return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
}
goog.array.findRight = module$contents$goog$array_findRight;
function module$contents$goog$array_findIndexRight(a, b, c) {
  var d = a.length;
  const e = "string" === typeof a ? a.split("") : a;
  for (--d; 0 <= d; d--) {
    if (d in e && b.call(c, e[d], d, a)) {
      return d;
    }
  }
  return -1;
}
goog.array.findIndexRight = module$contents$goog$array_findIndexRight;
function module$contents$goog$array_contains(a, b) {
  return 0 <= module$contents$goog$array_indexOf(a, b);
}
goog.array.contains = module$contents$goog$array_contains;
function module$contents$goog$array_isEmpty(a) {
  return 0 == a.length;
}
goog.array.isEmpty = module$contents$goog$array_isEmpty;
function module$contents$goog$array_clear(a) {
  if (!Array.isArray(a)) {
    for (let b = a.length - 1; 0 <= b; b--) {
      delete a[b];
    }
  }
  a.length = 0;
}
goog.array.clear = module$contents$goog$array_clear;
function module$contents$goog$array_insert(a, b) {
  module$contents$goog$array_contains(a, b) || a.push(b);
}
goog.array.insert = module$contents$goog$array_insert;
function module$contents$goog$array_insertAt(a, b, c) {
  module$contents$goog$array_splice(a, c, 0, b);
}
goog.array.insertAt = module$contents$goog$array_insertAt;
function module$contents$goog$array_insertArrayAt(a, b, c) {
  goog.partial(module$contents$goog$array_splice, a, c, 0).apply(null, b);
}
goog.array.insertArrayAt = module$contents$goog$array_insertArrayAt;
function module$contents$goog$array_insertBefore(a, b, c) {
  let d;
  2 == arguments.length || 0 > (d = module$contents$goog$array_indexOf(a, c)) ? a.push(b) : module$contents$goog$array_insertAt(a, b, d);
}
goog.array.insertBefore = module$contents$goog$array_insertBefore;
function module$contents$goog$array_remove(a, b) {
  b = module$contents$goog$array_indexOf(a, b);
  let c;
  (c = 0 <= b) && module$contents$goog$array_removeAt(a, b);
  return c;
}
goog.array.remove = module$contents$goog$array_remove;
function module$contents$goog$array_removeLast(a, b) {
  b = module$contents$goog$array_lastIndexOf(a, b);
  return 0 <= b ? (module$contents$goog$array_removeAt(a, b), !0) : !1;
}
goog.array.removeLast = module$contents$goog$array_removeLast;
function module$contents$goog$array_removeAt(a, b) {
  goog.asserts.assert(null != a.length);
  return 1 == Array.prototype.splice.call(a, b, 1).length;
}
goog.array.removeAt = module$contents$goog$array_removeAt;
function module$contents$goog$array_removeIf(a, b, c) {
  b = module$contents$goog$array_findIndex(a, b, c);
  return 0 <= b ? (module$contents$goog$array_removeAt(a, b), !0) : !1;
}
goog.array.removeIf = module$contents$goog$array_removeIf;
function module$contents$goog$array_removeAllIf(a, b, c) {
  let d = 0;
  module$contents$goog$array_forEachRight(a, function(e, f) {
    b.call(c, e, f, a) && module$contents$goog$array_removeAt(a, f) && d++;
  });
  return d;
}
goog.array.removeAllIf = module$contents$goog$array_removeAllIf;
function module$contents$goog$array_concat(a) {
  return Array.prototype.concat.apply([], arguments);
}
goog.array.concat = module$contents$goog$array_concat;
function module$contents$goog$array_join(a) {
  return Array.prototype.concat.apply([], arguments);
}
goog.array.join = module$contents$goog$array_join;
function module$contents$goog$array_toArray(a) {
  const b = a.length;
  if (0 < b) {
    const c = Array(b);
    for (let d = 0; d < b; d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
}
const module$contents$goog$array_clone = goog.array.toArray = module$contents$goog$array_toArray;
goog.array.clone = module$contents$goog$array_toArray;
function module$contents$goog$array_extend(a, b) {
  for (let c = 1; c < arguments.length; c++) {
    const d = arguments[c];
    if (goog.isArrayLike(d)) {
      const e = a.length || 0, f = d.length || 0;
      a.length = e + f;
      for (let g = 0; g < f; g++) {
        a[e + g] = d[g];
      }
    } else {
      a.push(d);
    }
  }
}
goog.array.extend = module$contents$goog$array_extend;
function module$contents$goog$array_splice(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.splice.apply(a, module$contents$goog$array_slice(arguments, 1));
}
goog.array.splice = module$contents$goog$array_splice;
function module$contents$goog$array_slice(a, b, c) {
  goog.asserts.assert(null != a.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
}
goog.array.slice = module$contents$goog$array_slice;
function module$contents$goog$array_removeDuplicates(a, b, c) {
  b = b || a;
  var d = function(g) {
    return goog.isObject(g) ? "o" + goog.getUid(g) : (typeof g).charAt(0) + g;
  };
  c = c || d;
  let e = d = 0;
  const f = {};
  for (; e < a.length;) {
    const g = a[e++], h = c(g);
    Object.prototype.hasOwnProperty.call(f, h) || (f[h] = !0, b[d++] = g);
  }
  b.length = d;
}
goog.array.removeDuplicates = module$contents$goog$array_removeDuplicates;
function module$contents$goog$array_binarySearch(a, b, c) {
  return module$contents$goog$array_binarySearch_(a, c || module$contents$goog$array_defaultCompare, !1, b);
}
goog.array.binarySearch = module$contents$goog$array_binarySearch;
function module$contents$goog$array_binarySelect(a, b, c) {
  return module$contents$goog$array_binarySearch_(a, b, !0, void 0, c);
}
goog.array.binarySelect = module$contents$goog$array_binarySelect;
function module$contents$goog$array_binarySearch_(a, b, c, d, e) {
  let f = 0, g = a.length, h;
  for (; f < g;) {
    const k = f + (g - f >>> 1);
    let l;
    l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
    0 < l ? f = k + 1 : (g = k, h = !l);
  }
  return h ? f : -f - 1;
}
function module$contents$goog$array_sort(a, b) {
  a.sort(b || module$contents$goog$array_defaultCompare);
}
goog.array.sort = module$contents$goog$array_sort;
function module$contents$goog$array_stableSort(a, b) {
  const c = Array(a.length);
  for (let e = 0; e < a.length; e++) {
    c[e] = {index:e, value:a[e]};
  }
  const d = b || module$contents$goog$array_defaultCompare;
  module$contents$goog$array_sort(c, function(e, f) {
    return d(e.value, f.value) || e.index - f.index;
  });
  for (b = 0; b < a.length; b++) {
    a[b] = c[b].value;
  }
}
goog.array.stableSort = module$contents$goog$array_stableSort;
function module$contents$goog$array_sortByKey(a, b, c) {
  const d = c || module$contents$goog$array_defaultCompare;
  module$contents$goog$array_sort(a, function(e, f) {
    return d(b(e), b(f));
  });
}
goog.array.sortByKey = module$contents$goog$array_sortByKey;
function module$contents$goog$array_sortObjectsByKey(a, b, c) {
  module$contents$goog$array_sortByKey(a, function(d) {
    return d[b];
  }, c);
}
goog.array.sortObjectsByKey = module$contents$goog$array_sortObjectsByKey;
function module$contents$goog$array_isSorted(a, b, c) {
  b = b || module$contents$goog$array_defaultCompare;
  for (let d = 1; d < a.length; d++) {
    const e = b(a[d - 1], a[d]);
    if (0 < e || 0 == e && c) {
      return !1;
    }
  }
  return !0;
}
goog.array.isSorted = module$contents$goog$array_isSorted;
function module$contents$goog$array_equals(a, b, c) {
  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
    return !1;
  }
  const d = a.length;
  c = c || module$contents$goog$array_defaultCompareEquality;
  for (let e = 0; e < d; e++) {
    if (!c(a[e], b[e])) {
      return !1;
    }
  }
  return !0;
}
goog.array.equals = module$contents$goog$array_equals;
function module$contents$goog$array_compare3(a, b, c) {
  c = c || module$contents$goog$array_defaultCompare;
  const d = Math.min(a.length, b.length);
  for (let e = 0; e < d; e++) {
    const f = c(a[e], b[e]);
    if (0 != f) {
      return f;
    }
  }
  return module$contents$goog$array_defaultCompare(a.length, b.length);
}
goog.array.compare3 = module$contents$goog$array_compare3;
function module$contents$goog$array_defaultCompare(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
}
goog.array.defaultCompare = module$contents$goog$array_defaultCompare;
function module$contents$goog$array_inverseDefaultCompare(a, b) {
  return -module$contents$goog$array_defaultCompare(a, b);
}
goog.array.inverseDefaultCompare = module$contents$goog$array_inverseDefaultCompare;
function module$contents$goog$array_defaultCompareEquality(a, b) {
  return a === b;
}
goog.array.defaultCompareEquality = module$contents$goog$array_defaultCompareEquality;
function module$contents$goog$array_binaryInsert(a, b, c) {
  c = module$contents$goog$array_binarySearch(a, b, c);
  return 0 > c ? (module$contents$goog$array_insertAt(a, b, -(c + 1)), !0) : !1;
}
goog.array.binaryInsert = module$contents$goog$array_binaryInsert;
function module$contents$goog$array_binaryRemove(a, b, c) {
  b = module$contents$goog$array_binarySearch(a, b, c);
  return 0 <= b ? module$contents$goog$array_removeAt(a, b) : !1;
}
goog.array.binaryRemove = module$contents$goog$array_binaryRemove;
function module$contents$goog$array_bucket(a, b, c) {
  const d = {};
  for (let e = 0; e < a.length; e++) {
    const f = a[e], g = b.call(c, f, e, a);
    void 0 !== g && (d[g] || (d[g] = [])).push(f);
  }
  return d;
}
goog.array.bucket = module$contents$goog$array_bucket;
function module$contents$goog$array_bucketToMap(a, b) {
  const c = new Map();
  for (let d = 0; d < a.length; d++) {
    const e = a[d], f = b(e, d, a);
    if (void 0 !== f) {
      let g = c.get(f);
      g || (g = [], c.set(f, g));
      g.push(e);
    }
  }
  return c;
}
goog.array.bucketToMap = module$contents$goog$array_bucketToMap;
function module$contents$goog$array_toObject(a, b, c) {
  const d = {};
  module$contents$goog$array_forEach(a, function(e, f) {
    d[b.call(c, e, f, a)] = e;
  });
  return d;
}
goog.array.toObject = module$contents$goog$array_toObject;
function module$contents$goog$array_toMap(a, b) {
  const c = new Map();
  for (let d = 0; d < a.length; d++) {
    const e = a[d];
    c.set(b(e, d, a), e);
  }
  return c;
}
goog.array.toMap = module$contents$goog$array_toMap;
function module$contents$goog$array_range(a, b, c) {
  const d = [];
  let e = 0, f = a;
  c = c || 1;
  void 0 !== b && (e = a, f = b);
  if (0 > c * (f - e)) {
    return [];
  }
  if (0 < c) {
    for (a = e; a < f; a += c) {
      d.push(a);
    }
  } else {
    for (a = e; a > f; a += c) {
      d.push(a);
    }
  }
  return d;
}
goog.array.range = module$contents$goog$array_range;
function module$contents$goog$array_repeat(a, b) {
  const c = [];
  for (let d = 0; d < b; d++) {
    c[d] = a;
  }
  return c;
}
goog.array.repeat = module$contents$goog$array_repeat;
function module$contents$goog$array_flatten(a) {
  const b = [];
  for (let d = 0; d < arguments.length; d++) {
    const e = arguments[d];
    if (Array.isArray(e)) {
      for (let f = 0; f < e.length; f += 8192) {
        var c = module$contents$goog$array_slice(e, f, f + 8192);
        c = module$contents$goog$array_flatten.apply(null, c);
        for (let g = 0; g < c.length; g++) {
          b.push(c[g]);
        }
      }
    } else {
      b.push(e);
    }
  }
  return b;
}
goog.array.flatten = module$contents$goog$array_flatten;
function module$contents$goog$array_rotate(a, b) {
  goog.asserts.assert(null != a.length);
  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));
  return a;
}
goog.array.rotate = module$contents$goog$array_rotate;
function module$contents$goog$array_moveItem(a, b, c) {
  goog.asserts.assert(0 <= b && b < a.length);
  goog.asserts.assert(0 <= c && c < a.length);
  b = Array.prototype.splice.call(a, b, 1);
  Array.prototype.splice.call(a, c, 0, b[0]);
}
goog.array.moveItem = module$contents$goog$array_moveItem;
function module$contents$goog$array_zip(a) {
  if (!arguments.length) {
    return [];
  }
  const b = [];
  let c = arguments[0].length;
  for (var d = 1; d < arguments.length; d++) {
    arguments[d].length < c && (c = arguments[d].length);
  }
  for (d = 0; d < c; d++) {
    const e = [];
    for (let f = 0; f < arguments.length; f++) {
      e.push(arguments[f][d]);
    }
    b.push(e);
  }
  return b;
}
goog.array.zip = module$contents$goog$array_zip;
function module$contents$goog$array_shuffle(a, b) {
  b = b || Math.random;
  for (let c = a.length - 1; 0 < c; c--) {
    const d = Math.floor(b() * (c + 1)), e = a[c];
    a[c] = a[d];
    a[d] = e;
  }
}
goog.array.shuffle = module$contents$goog$array_shuffle;
function module$contents$goog$array_copyByIndex(a, b) {
  const c = [];
  module$contents$goog$array_forEach(b, function(d) {
    c.push(a[d]);
  });
  return c;
}
goog.array.copyByIndex = module$contents$goog$array_copyByIndex;
function module$contents$goog$array_concatMap(a, b, c) {
  return module$contents$goog$array_concat.apply([], module$contents$goog$array_map(a, b, c));
}
goog.array.concatMap = module$contents$goog$array_concatMap;
var module$exports$goog$labs$userAgent = {};
const module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE = "", module$contents$goog$labs$userAgent_USE_CLIENT_HINTS = !1;
module$exports$goog$labs$userAgent.USE_CLIENT_HINTS = (() => {
  const a = module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE ? goog.getObjectByName(module$contents$goog$labs$userAgent_USE_CLIENT_HINTS_OVERRIDE) : null;
  return null != a ? a : module$contents$goog$labs$userAgent_USE_CLIENT_HINTS;
})();
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
const module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT = !1;
function module$contents$goog$labs$userAgent$util_getNativeUserAgentString() {
  var a = module$contents$goog$labs$userAgent$util_getNavigator();
  return a && (a = a.userAgent) ? a : "";
}
function module$contents$goog$labs$userAgent$util_getNativeUserAgentData() {
  if (!module$exports$goog$labs$userAgent.USE_CLIENT_HINTS) {
    return null;
  }
  const a = module$contents$goog$labs$userAgent$util_getNavigator();
  return a ? a.userAgentData || null : null;
}
function module$contents$goog$labs$userAgent$util_getNavigator() {
  return goog.global.navigator;
}
let module$contents$goog$labs$userAgent$util_userAgentInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentString(), module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
function module$contents$goog$labs$userAgent$util_setUserAgent(a) {
  module$contents$goog$labs$userAgent$util_userAgentInternal = "string" === typeof a ? a : module$contents$goog$labs$userAgent$util_getNativeUserAgentString();
}
function module$contents$goog$labs$userAgent$util_getUserAgent() {
  return module$contents$goog$labs$userAgent$util_userAgentInternal;
}
function module$contents$goog$labs$userAgent$util_setUserAgentData(a) {
  module$contents$goog$labs$userAgent$util_userAgentDataInternal = a;
}
function module$contents$goog$labs$userAgent$util_resetUserAgentData() {
  module$contents$goog$labs$userAgent$util_userAgentDataInternal = module$contents$goog$labs$userAgent$util_getNativeUserAgentData();
}
function module$contents$goog$labs$userAgent$util_getUserAgentData() {
  return module$contents$goog$labs$userAgent$util_userAgentDataInternal;
}
function module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand(a) {
  const b = module$contents$goog$labs$userAgent$util_getUserAgentData();
  return b ? b.brands.some(({brand:c}) => c && (0,goog.string.internal.contains)(c, a)) : !1;
}
function module$contents$goog$labs$userAgent$util_matchUserAgent(a) {
  const b = module$contents$goog$labs$userAgent$util_getUserAgent();
  return (0,goog.string.internal.contains)(b, a);
}
function module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase(a) {
  const b = module$contents$goog$labs$userAgent$util_getUserAgent();
  return (0,goog.string.internal.caseInsensitiveContains)(b, a);
}
function module$contents$goog$labs$userAgent$util_extractVersionTuples(a) {
  const b = RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [];
  let d;
  for (; d = b.exec(a);) {
    c.push([d[1], d[2], d[3] || void 0]);
  }
  return c;
}
goog.labs.userAgent.util.ASSUME_CLIENT_HINTS_SUPPORT = module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT;
goog.labs.userAgent.util.extractVersionTuples = module$contents$goog$labs$userAgent$util_extractVersionTuples;
goog.labs.userAgent.util.getNativeUserAgentString = module$contents$goog$labs$userAgent$util_getNativeUserAgentString;
goog.labs.userAgent.util.getUserAgent = module$contents$goog$labs$userAgent$util_getUserAgent;
goog.labs.userAgent.util.getUserAgentData = module$contents$goog$labs$userAgent$util_getUserAgentData;
goog.labs.userAgent.util.matchUserAgent = module$contents$goog$labs$userAgent$util_matchUserAgent;
goog.labs.userAgent.util.matchUserAgentDataBrand = module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand;
goog.labs.userAgent.util.matchUserAgentIgnoreCase = module$contents$goog$labs$userAgent$util_matchUserAgentIgnoreCase;
goog.labs.userAgent.util.resetUserAgentData = module$contents$goog$labs$userAgent$util_resetUserAgentData;
goog.labs.userAgent.util.setUserAgent = module$contents$goog$labs$userAgent$util_setUserAgent;
goog.labs.userAgent.util.setUserAgentData = module$contents$goog$labs$userAgent$util_setUserAgentData;
goog.labs.userAgent.browser = {};
function module$contents$goog$labs$userAgent$browser_useUserAgentBrand() {
  const a = module$contents$goog$labs$userAgent$util_getUserAgentData();
  return !!a && 0 < a.brands.length;
}
function module$contents$goog$labs$userAgent$browser_matchOpera() {
  return module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT || module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent("Opera");
}
function module$contents$goog$labs$userAgent$browser_matchIE() {
  return module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT || module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent("Trident") || module$contents$goog$labs$userAgent$util_matchUserAgent("MSIE");
}
function module$contents$goog$labs$userAgent$browser_matchEdgeHtml() {
  return module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT || module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent("Edge");
}
function module$contents$goog$labs$userAgent$browser_matchEdgeChromium() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Edge") : module$contents$goog$labs$userAgent$util_matchUserAgent("Edg/");
}
function module$contents$goog$labs$userAgent$browser_matchOperaChromium() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Opera") : module$contents$goog$labs$userAgent$util_matchUserAgent("OPR");
}
function module$contents$goog$labs$userAgent$browser_matchFirefox() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Firefox") : module$contents$goog$labs$userAgent$util_matchUserAgent("Firefox") || module$contents$goog$labs$userAgent$util_matchUserAgent("FxiOS");
}
function module$contents$goog$labs$userAgent$browser_matchSafari() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Safari") : module$contents$goog$labs$userAgent$util_matchUserAgent("Safari") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchCoast() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml() || module$contents$goog$labs$userAgent$browser_matchEdgeChromium() || 
  module$contents$goog$labs$userAgent$browser_matchOperaChromium() || module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_isSilk() || module$contents$goog$labs$userAgent$util_matchUserAgent("Android"));
}
function module$contents$goog$labs$userAgent$browser_matchCoast() {
  return module$contents$goog$labs$userAgent$util_ASSUME_CLIENT_HINTS_SUPPORT || module$contents$goog$labs$userAgent$util_getUserAgentData() ? !1 : module$contents$goog$labs$userAgent$util_matchUserAgent("Coast");
}
function module$contents$goog$labs$userAgent$browser_matchIosWebview() {
  return (module$contents$goog$labs$userAgent$util_matchUserAgent("iPad") || module$contents$goog$labs$userAgent$util_matchUserAgent("iPhone")) && !module$contents$goog$labs$userAgent$browser_matchSafari() && !module$contents$goog$labs$userAgent$browser_matchChrome() && !module$contents$goog$labs$userAgent$browser_matchCoast() && !module$contents$goog$labs$userAgent$browser_matchFirefox() && module$contents$goog$labs$userAgent$util_matchUserAgent("AppleWebKit");
}
function module$contents$goog$labs$userAgent$browser_matchChrome() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Chromium") : (module$contents$goog$labs$userAgent$util_matchUserAgent("Chrome") || module$contents$goog$labs$userAgent$util_matchUserAgent("CriOS")) && !module$contents$goog$labs$userAgent$browser_matchEdgeHtml();
}
function module$contents$goog$labs$userAgent$browser_matchAndroidBrowser() {
  return module$contents$goog$labs$userAgent$util_matchUserAgent("Android") && !(module$contents$goog$labs$userAgent$browser_matchChrome() || module$contents$goog$labs$userAgent$browser_matchFirefox() || module$contents$goog$labs$userAgent$browser_matchOpera() || module$contents$goog$labs$userAgent$browser_isSilk());
}
const module$contents$goog$labs$userAgent$browser_isOpera = module$contents$goog$labs$userAgent$browser_matchOpera, module$contents$goog$labs$userAgent$browser_isIE = module$contents$goog$labs$userAgent$browser_matchIE, module$contents$goog$labs$userAgent$browser_isEdge = module$contents$goog$labs$userAgent$browser_matchEdgeHtml, module$contents$goog$labs$userAgent$browser_isEdgeChromium = module$contents$goog$labs$userAgent$browser_matchEdgeChromium, module$contents$goog$labs$userAgent$browser_isOperaChromium = 
module$contents$goog$labs$userAgent$browser_matchOperaChromium, module$contents$goog$labs$userAgent$browser_isFirefox = module$contents$goog$labs$userAgent$browser_matchFirefox, module$contents$goog$labs$userAgent$browser_isSafari = module$contents$goog$labs$userAgent$browser_matchSafari, module$contents$goog$labs$userAgent$browser_isCoast = module$contents$goog$labs$userAgent$browser_matchCoast, module$contents$goog$labs$userAgent$browser_isIosWebview = module$contents$goog$labs$userAgent$browser_matchIosWebview, 
module$contents$goog$labs$userAgent$browser_isChrome = module$contents$goog$labs$userAgent$browser_matchChrome, module$contents$goog$labs$userAgent$browser_isAndroidBrowser = module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;
function module$contents$goog$labs$userAgent$browser_isSilk() {
  return module$contents$goog$labs$userAgent$browser_useUserAgentBrand() ? module$contents$goog$labs$userAgent$util_matchUserAgentDataBrand("Silk") : module$contents$goog$labs$userAgent$util_matchUserAgent("Silk");
}
function module$contents$goog$labs$userAgent$browser_getVersion() {
  function a(e) {
    e = goog.array.find(e, d);
    return c[e] || "";
  }
  var b = module$contents$goog$labs$userAgent$util_getUserAgent();
  if (module$contents$goog$labs$userAgent$browser_matchIE()) {
    return module$contents$goog$labs$userAgent$browser_getIEVersion(b);
  }
  b = module$contents$goog$labs$userAgent$util_extractVersionTuples(b);
  const c = {};
  b.forEach(e => {
    c[e[0]] = e[1];
  });
  const d = goog.partial(goog.object.containsKey, c);
  return module$contents$goog$labs$userAgent$browser_matchOpera() ? a(["Version", "Opera"]) : module$contents$goog$labs$userAgent$browser_matchEdgeHtml() ? a(["Edge"]) : module$contents$goog$labs$userAgent$browser_matchEdgeChromium() ? a(["Edg"]) : module$contents$goog$labs$userAgent$browser_matchChrome() ? a(["Chrome", "CriOS", "HeadlessChrome"]) : (b = b[2]) && b[1] || "";
}
function module$contents$goog$labs$userAgent$browser_isVersionOrHigher(a) {
  return 0 <= (0,goog.string.internal.compareVersions)(module$contents$goog$labs$userAgent$browser_getVersion(), a);
}
function module$contents$goog$labs$userAgent$browser_getIEVersion(a) {
  var b = /rv: *([\d\.]*)/.exec(a);
  if (b && b[1]) {
    return b[1];
  }
  b = "";
  const c = /MSIE +([\d\.]+)/.exec(a);
  if (c && c[1]) {
    if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
      if (a && a[1]) {
        switch(a[1]) {
          case "4.0":
            b = "8.0";
            break;
          case "5.0":
            b = "9.0";
            break;
          case "6.0":
            b = "10.0";
            break;
          case "7.0":
            b = "11.0";
        }
      } else {
        b = "7.0";
      }
    } else {
      b = c[1];
    }
  }
  return b;
}
goog.labs.userAgent.browser.getVersion = module$contents$goog$labs$userAgent$browser_getVersion;
goog.labs.userAgent.browser.isAndroidBrowser = module$contents$goog$labs$userAgent$browser_matchAndroidBrowser;
goog.labs.userAgent.browser.isChrome = module$contents$goog$labs$userAgent$browser_matchChrome;
goog.labs.userAgent.browser.isCoast = module$contents$goog$labs$userAgent$browser_matchCoast;
goog.labs.userAgent.browser.isEdge = module$contents$goog$labs$userAgent$browser_matchEdgeHtml;
goog.labs.userAgent.browser.isEdgeChromium = module$contents$goog$labs$userAgent$browser_matchEdgeChromium;
goog.labs.userAgent.browser.isFirefox = module$contents$goog$labs$userAgent$browser_matchFirefox;
goog.labs.userAgent.browser.isIE = module$contents$goog$labs$userAgent$browser_matchIE;
goog.labs.userAgent.browser.isIosWebview = module$contents$goog$labs$userAgent$browser_matchIosWebview;
goog.labs.userAgent.browser.isOpera = module$contents$goog$labs$userAgent$browser_matchOpera;
goog.labs.userAgent.browser.isOperaChromium = module$contents$goog$labs$userAgent$browser_matchOperaChromium;
goog.labs.userAgent.browser.isSafari = module$contents$goog$labs$userAgent$browser_matchSafari;
goog.labs.userAgent.browser.isSilk = module$contents$goog$labs$userAgent$browser_isSilk;
goog.labs.userAgent.browser.isVersionOrHigher = module$contents$goog$labs$userAgent$browser_isVersionOrHigher;
goog.dom.tags = {};
goog.dom.tags.VOID_TAGS_ = {area:!0, base:!0, br:!0, col:!0, command:!0, embed:!0, hr:!0, img:!0, input:!0, keygen:!0, link:!0, meta:!0, param:!0, source:!0, track:!0, wbr:!0};
goog.dom.tags.isVoidTag = function(a) {
  return !0 === goog.dom.tags.VOID_TAGS_[a];
};
const module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE = {};
class module$contents$goog$html$SafeHtml_SafeHtml {
  constructor(a, b, c) {
    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = c === module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE ? a : "";
    this.dir_ = b;
    this.implementsGoogStringTypedString = this.implementsGoogI18nBidiDirectionalString = !0;
  }
  getDirection() {
    return this.dir_;
  }
  getTypedStringValue() {
    return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
  }
  toString() {
    return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
  }
  static unwrap(a) {
    return module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(a).toString();
  }
  static unwrapTrustedHTML(a) {
    if (a instanceof module$contents$goog$html$SafeHtml_SafeHtml && a.constructor === module$contents$goog$html$SafeHtml_SafeHtml) {
      return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
    }
    goog.asserts.fail(`expected object of type SafeHtml, got '${a}' of type ` + goog.typeOf(a));
    return "type_error:SafeHtml";
  }
  static htmlEscape(a) {
    if (a instanceof module$contents$goog$html$SafeHtml_SafeHtml) {
      return a;
    }
    const b = "object" == typeof a;
    let c = null;
    b && a.implementsGoogI18nBidiDirectionalString && (c = a.getDirection());
    a = b && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a), c);
  }
  static htmlEscapePreservingNewlines(a) {
    if (a instanceof module$contents$goog$html$SafeHtml_SafeHtml) {
      return a;
    }
    a = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)), a.getDirection());
  }
  static htmlEscapePreservingNewlinesAndSpaces(a) {
    if (a instanceof module$contents$goog$html$SafeHtml_SafeHtml) {
      return a;
    }
    a = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)), a.getDirection());
  }
  static comment(a) {
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!--" + goog.string.internal.htmlEscape(a) + "--\x3e", null);
  }
  static create(a, b, c) {
    module$contents$goog$html$SafeHtml_SafeHtml.verifyTagName(String(a));
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a), b, c);
  }
  static verifyTagName(a) {
    if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(a)) {
      throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid tag name <${a}>.` : "");
    }
    if (a.toUpperCase() in module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES) {
      throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Tag name <${a}> is not allowed for SafeHtml.` : "");
    }
  }
  static createIframe(a, b, c, d) {
    a && goog.html.TrustedResourceUrl.unwrap(a);
    const e = {};
    e.src = a || null;
    e.srcdoc = b && module$contents$goog$html$SafeHtml_SafeHtml.unwrap(b);
    a = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e, {sandbox:""}, c);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d);
  }
  static createSandboxIframe(a, b, c, d) {
    if (!module$contents$goog$html$SafeHtml_SafeHtml.canUseSandboxIframe()) {
      throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
    }
    const e = {};
    e.src = a ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)) : null;
    e.srcdoc = b || null;
    e.sandbox = "";
    a = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes(e, {}, c);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d);
  }
  static canUseSandboxIframe() {
    return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
  }
  static createScriptSrc(a, b) {
    goog.html.TrustedResourceUrl.unwrap(a);
    a = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({src:a}, {}, b);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", a);
  }
  static createScript(a, b) {
    for (var c in b) {
      if (Object.prototype.hasOwnProperty.call(b, c)) {
        var d = c.toLowerCase();
        if ("language" == d || "src" == d || "text" == d || "type" == d) {
          throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot set "${d}" attribute` : "");
        }
      }
    }
    c = "";
    a = goog.array.concat(a);
    for (d = 0; d < a.length; d++) {
      c += module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);
    }
    a = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", b, a);
  }
  static createStyle(a, b) {
    b = module$contents$goog$html$SafeHtml_SafeHtml.combineAttributes({type:"text/css"}, {}, b);
    let c = "";
    a = goog.array.concat(a);
    for (let d = 0; d < a.length; d++) {
      c += module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);
    }
    a = module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", b, a);
  }
  static createMetaRefresh(a, b) {
    a = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));
    (module$contents$goog$labs$userAgent$browser_matchIE() || module$contents$goog$labs$userAgent$browser_matchEdgeHtml()) && goog.string.internal.contains(a, ";") && (a = "'" + a.replace(/'/g, "%27") + "'");
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", {"http-equiv":"refresh", content:(b || 0) + "; url\x3d" + a,});
  }
  static createWithDir(a, b, c, d) {
    b = module$contents$goog$html$SafeHtml_SafeHtml.create(b, c, d);
    b.dir_ = a;
    return b;
  }
  static join(a, b) {
    a = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(a);
    let c = a.getDirection();
    const d = [], e = f => {
      Array.isArray(f) ? f.forEach(e) : (f = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape(f), d.push(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(f)), f = f.getDirection(), c == goog.i18n.bidi.Dir.NEUTRAL ? c = f : f != goog.i18n.bidi.Dir.NEUTRAL && c != f && (c = null));
    };
    b.forEach(e);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(module$contents$goog$html$SafeHtml_SafeHtml.unwrap(a)), c);
  }
  static concat(a) {
    return module$contents$goog$html$SafeHtml_SafeHtml.join(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
  }
  static concatWithDir(a, b) {
    const c = module$contents$goog$html$SafeHtml_SafeHtml.concat(Array.prototype.slice.call(arguments, 1));
    c.dir_ = a;
    return c;
  }
  static createSafeHtmlSecurityPrivateDoNotAccessOrElse(a, b) {
    const c = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();
    a = c ? c.createHTML(a) : a;
    return new module$contents$goog$html$SafeHtml_SafeHtml(a, b, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);
  }
  static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(a, b, c) {
    var d = null;
    let e;
    e = `<${a}` + module$contents$goog$html$SafeHtml_SafeHtml.stringifyAttributes(a, b);
    null == c ? c = [] : Array.isArray(c) || (c = [c]);
    goog.dom.tags.isVoidTag(a.toLowerCase()) ? (goog.asserts.assert(!c.length, `Void tag <${a}> does not allow content.`), e += "\x3e") : (d = module$contents$goog$html$SafeHtml_SafeHtml.concat(c), e += "\x3e" + module$contents$goog$html$SafeHtml_SafeHtml.unwrap(d) + "\x3c/" + a + "\x3e", d = d.getDirection());
    (a = b && b.dir) && (d = /^(ltr|rtl|auto)$/i.test(a) ? goog.i18n.bidi.Dir.NEUTRAL : null);
    return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e, d);
  }
  static stringifyAttributes(a, b) {
    let c = "";
    if (b) {
      for (let d in b) {
        if (Object.prototype.hasOwnProperty.call(b, d)) {
          if (!module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG.test(d)) {
            throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid attribute name "${d}".` : "");
          }
          const e = b[d];
          null != e && (c += " " + module$contents$goog$html$SafeHtml_getAttrNameAndValue(a, d, e));
        }
      }
    }
    return c;
  }
  static combineAttributes(a, b, c) {
    const d = {};
    for (var e in a) {
      Object.prototype.hasOwnProperty.call(a, e) && (goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = a[e]);
    }
    for (const f in b) {
      Object.prototype.hasOwnProperty.call(b, f) && (goog.asserts.assert(f.toLowerCase() == f, "Must be lower case"), d[f] = b[f]);
    }
    if (c) {
      for (const f in c) {
        if (Object.prototype.hasOwnProperty.call(c, f)) {
          e = f.toLowerCase();
          if (e in a) {
            throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot override "${e}" attribute, got "` + f + '" with value "' + c[f] + '"' : "");
          }
          e in b && delete d[e];
          d[f] = c[f];
        }
      }
    }
    return d;
  }
}
module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;
module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE = !0;
module$contents$goog$html$SafeHtml_SafeHtml.from = module$contents$goog$html$SafeHtml_SafeHtml.htmlEscape;
const module$contents$goog$html$SafeHtml_VALID_NAMES_IN_TAG = /^[a-zA-Z0-9-]+$/, module$contents$goog$html$SafeHtml_URL_ATTRIBUTES = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, manifest:!0, poster:!0, src:!0}, module$contents$goog$html$SafeHtml_NOT_ALLOWED_TAG_NAMES = {[goog.dom.TagName.APPLET]:!0, [goog.dom.TagName.BASE]:!0, [goog.dom.TagName.EMBED]:!0, [goog.dom.TagName.IFRAME]:!0, [goog.dom.TagName.LINK]:!0, [goog.dom.TagName.MATH]:!0, [goog.dom.TagName.META]:!0, [goog.dom.TagName.OBJECT]:!0, 
[goog.dom.TagName.SCRIPT]:!0, [goog.dom.TagName.STYLE]:!0, [goog.dom.TagName.SVG]:!0, [goog.dom.TagName.TEMPLATE]:!0};
function module$contents$goog$html$SafeHtml_getAttrNameAndValue(a, b, c) {
  if (c instanceof goog.string.Const) {
    c = goog.string.Const.unwrap(c);
  } else if ("style" == b.toLowerCase()) {
    if (module$contents$goog$html$SafeHtml_SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
      c = module$contents$goog$html$SafeHtml_getStyleValue(c);
    } else {
      throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
    }
  } else {
    if (/^on/i.test(b)) {
      throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute "${b}` + '" requires goog.string.Const value, "' + c + '" given.' : "");
    }
    if (b.toLowerCase() in module$contents$goog$html$SafeHtml_URL_ATTRIBUTES) {
      if (c instanceof goog.html.TrustedResourceUrl) {
        c = goog.html.TrustedResourceUrl.unwrap(c);
      } else if (c instanceof goog.html.SafeUrl) {
        c = goog.html.SafeUrl.unwrap(c);
      } else if ("string" === typeof c) {
        c = goog.html.SafeUrl.sanitize(c).getTypedStringValue();
      } else {
        throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute "${b}" on tag "${a}` + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + c + '" given.' : "");
      }
    }
  }
  c.implementsGoogStringTypedString && (c = c.getTypedStringValue());
  goog.asserts.assert("string" === typeof c || "number" === typeof c, "String or number value expected, got " + typeof c + " with value: " + c);
  return `${b}="` + goog.string.internal.htmlEscape(String(c)) + '"';
}
function module$contents$goog$html$SafeHtml_getStyleValue(a) {
  if (!goog.isObject(a)) {
    throw Error(module$contents$goog$html$SafeHtml_SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof a + " given: " + a : "");
  }
  a instanceof module$contents$goog$html$SafeStyle_SafeStyle || (a = module$contents$goog$html$SafeStyle_SafeStyle.create(a));
  return module$contents$goog$html$SafeStyle_SafeStyle.unwrap(a);
}
module$contents$goog$html$SafeHtml_SafeHtml.DOCTYPE_HTML = function() {
  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
}();
module$contents$goog$html$SafeHtml_SafeHtml.EMPTY = new module$contents$goog$html$SafeHtml_SafeHtml(goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML || "", goog.i18n.bidi.Dir.NEUTRAL, module$contents$goog$html$SafeHtml_CONSTRUCTOR_TOKEN_PRIVATE);
module$contents$goog$html$SafeHtml_SafeHtml.BR = function() {
  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
}();
goog.html.SafeHtml = module$contents$goog$html$SafeHtml_SafeHtml;
goog.html.uncheckedconversions = {};
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(a, b, c) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return module$contents$goog$html$SafeHtml_SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b, c || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return module$contents$goog$html$SafeStyle_SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(a, b) {
  goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b);
};
goog.dom.safe = {};
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(a, b, c) {
  a.insertAdjacentHTML(b, module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(c));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {MATH:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
  if (goog.DEBUG && "undefined" === typeof document) {
    return !1;
  }
  var a = document.createElement("div"), b = document.createElement("div");
  b.appendChild(document.createElement("div"));
  a.appendChild(b);
  if (goog.DEBUG && !a.firstChild) {
    return !1;
  }
  b = a.firstChild.firstChild;
  a.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(module$contents$goog$html$SafeHtml_SafeHtml.EMPTY);
  return !b.parentElement;
});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(a, b) {
  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
    for (; a.lastChild;) {
      a.removeChild(a.lastChild);
    }
  }
  a.innerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b);
};
goog.dom.safe.setInnerHtml = function(a, b) {
  if (goog.asserts.ENABLE_ASSERTS && a.tagName) {
    var c = a.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c]) {
      throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + a.tagName + ".");
    }
  }
  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a, b);
};
goog.dom.safe.setInnerHtmlFromConstant = function(a, b) {
  goog.dom.safe.setInnerHtml(a, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."), goog.string.Const.unwrap(b)));
};
goog.dom.safe.setOuterHtml = function(a, b) {
  a.outerHTML = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b);
};
goog.dom.safe.setFormElementAction = function(a, b) {
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  goog.dom.asserts.assertIsHTMLFormElement(a).action = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setButtonFormAction = function(a, b) {
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  goog.dom.asserts.assertIsHTMLButtonElement(a).formAction = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setInputFormAction = function(a, b) {
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  goog.dom.asserts.assertIsHTMLInputElement(a).formAction = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setStyle = function(a, b) {
  a.style.cssText = module$contents$goog$html$SafeStyle_SafeStyle.unwrap(b);
};
goog.dom.safe.documentWrite = function(a, b) {
  a.write(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b));
};
goog.dom.safe.setAnchorHref = function(a, b) {
  goog.dom.asserts.assertIsHTMLAnchorElement(a);
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  a.href = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setImageSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLImageElement(a);
  if (!(b instanceof goog.html.SafeUrl)) {
    var c = /^data:image\//i.test(b);
    b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
  }
  a.src = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setAudioSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLAudioElement(a);
  if (!(b instanceof goog.html.SafeUrl)) {
    var c = /^data:audio\//i.test(b);
    b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
  }
  a.src = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setVideoSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLVideoElement(a);
  if (!(b instanceof goog.html.SafeUrl)) {
    var c = /^data:video\//i.test(b);
    b = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
  }
  a.src = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.setEmbedSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLEmbedElement(a);
  a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
};
goog.dom.safe.setFrameSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLFrameElement(a);
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setIframeSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLIFrameElement(a);
  a.src = goog.html.TrustedResourceUrl.unwrap(b);
};
goog.dom.safe.setIframeSrcdoc = function(a, b) {
  goog.dom.asserts.assertIsHTMLIFrameElement(a);
  a.srcdoc = module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b);
};
goog.dom.safe.setLinkHrefAndRel = function(a, b, c) {
  goog.dom.asserts.assertIsHTMLLinkElement(a);
  a.rel = c;
  goog.string.internal.caseInsensitiveContains(c, "stylesheet") ? (goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a.href = goog.html.TrustedResourceUrl.unwrap(b), (b = goog.dom.safe.getStyleNonce(a.ownerDocument && a.ownerDocument.defaultView)) && a.setAttribute("nonce", b)) : a.href = b instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(b) : b instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(b) : 
  goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b));
};
goog.dom.safe.setObjectData = function(a, b) {
  goog.dom.asserts.assertIsHTMLObjectElement(a);
  a.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
};
goog.dom.safe.setScriptSrc = function(a, b) {
  goog.dom.asserts.assertIsHTMLScriptElement(a);
  a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
  goog.dom.safe.setNonceForScriptElement_(a);
};
goog.dom.safe.setScriptContent = function(a, b) {
  goog.dom.asserts.assertIsHTMLScriptElement(a);
  a.textContent = module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b);
  goog.dom.safe.setNonceForScriptElement_(a);
};
goog.dom.safe.setNonceForScriptElement_ = function(a) {
  const b = goog.dom.safe.getScriptNonce(a.ownerDocument && a.ownerDocument.defaultView);
  b && a.setAttribute("nonce", b);
};
goog.dom.safe.setLocationHref = function(a, b) {
  goog.dom.asserts.assertIsLocation(a);
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  a.href = goog.html.SafeUrl.unwrap(b);
};
goog.dom.safe.assignLocation = function(a, b) {
  goog.dom.asserts.assertIsLocation(a);
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  a.assign(goog.html.SafeUrl.unwrap(b));
};
goog.dom.safe.replaceLocation = function(a, b) {
  b = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
  a.replace(goog.html.SafeUrl.unwrap(b));
};
goog.dom.safe.openInWindow = function(a, b, c, d) {
  a = a instanceof goog.html.SafeUrl ? a : goog.html.SafeUrl.sanitizeAssertUnchanged(a);
  b = b || goog.global;
  c = c instanceof goog.string.Const ? goog.string.Const.unwrap(c) : c || "";
  return void 0 !== d ? b.open(goog.html.SafeUrl.unwrap(a), c, d) : b.open(goog.html.SafeUrl.unwrap(a), c);
};
goog.dom.safe.parseFromStringHtml = function(a, b) {
  return goog.dom.safe.parseFromString(a, b, "text/html");
};
goog.dom.safe.parseFromString = function(a, b, c) {
  return a.parseFromString(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b), c);
};
goog.dom.safe.createImageFromBlob = function(a) {
  if (!/^image\/.*/g.test(a.type)) {
    throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
  }
  var b = goog.global.URL.createObjectURL(a);
  a = new goog.global.Image();
  a.onload = function() {
    goog.global.URL.revokeObjectURL(b);
  };
  goog.dom.safe.setImageSrc(a, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), b));
  return a;
};
goog.dom.safe.createContextualFragment = function(a, b) {
  return a.createContextualFragment(module$contents$goog$html$SafeHtml_SafeHtml.unwrapTrustedHTML(b));
};
goog.dom.safe.getScriptNonce = function(a) {
  return goog.dom.safe.getNonce_("script[nonce]", a);
};
goog.dom.safe.getStyleNonce = function(a) {
  return goog.dom.safe.getNonce_('style[nonce],link[rel\x3d"stylesheet"][nonce]', a);
};
goog.dom.safe.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.dom.safe.getNonce_ = function(a, b) {
  b = (b || goog.global).document;
  return b.querySelector ? (a = b.querySelector(a)) && (a = a.nonce || a.getAttribute("nonce")) && goog.dom.safe.NONCE_PATTERN_.test(a) ? a : "" : "";
};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = goog.string.internal.startsWith;
goog.string.endsWith = goog.string.internal.endsWith;
goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
goog.string.subs = function(a, b) {
  const c = a.split("%s");
  let d = "";
  const e = Array.prototype.slice.call(arguments, 1);
  for (; e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
};
goog.string.collapseWhitespace = function(a) {
  return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
goog.string.isEmptyString = function(a) {
  return 0 == a.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(a) {
  return !/[^\t\n\r ]/.test(a);
};
goog.string.isAlpha = function(a) {
  return !/[^a-zA-Z]/.test(a);
};
goog.string.isNumeric = function(a) {
  return !/[^0-9]/.test(a);
};
goog.string.isAlphaNumeric = function(a) {
  return !/[^a-zA-Z0-9]/.test(a);
};
goog.string.isSpace = function(a) {
  return " " == a;
};
goog.string.isUnicodeChar = function(a) {
  return 1 == a.length && " " <= a && "~" >= a || "" <= a && "�" >= a;
};
goog.string.stripNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(a) {
  return a.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(a) {
  return a.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(a) {
  return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.string.internal.trim;
goog.string.trimLeft = function(a) {
  return a.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(a) {
  return a.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_ = function(a, b, c) {
  if (a == b) {
    return 0;
  }
  if (!a) {
    return -1;
  }
  if (!b) {
    return 1;
  }
  const d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length);
  for (let g = 0; g < f; g++) {
    c = d[g];
    const h = e[g];
    if (c != h) {
      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    }
  }
  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
};
goog.string.intAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(a) {
  return encodeURIComponent(String(a));
};
goog.string.urlDecode = function(a) {
  return decodeURIComponent(a.replace(/\+/g, " "));
};
goog.string.newLineToBr = goog.string.internal.newLineToBr;
goog.string.htmlEscape = function(a, b) {
  a = goog.string.internal.htmlEscape(a, b);
  goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "\x26#101;"));
  return a;
};
goog.string.E_RE_ = /e/g;
goog.string.unescapeEntities = function(a) {
  return goog.string.contains(a, "\x26") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
};
goog.string.unescapeEntitiesWithDocument = function(a, b) {
  return goog.string.contains(a, "\x26") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
};
goog.string.unescapeEntitiesUsingDom_ = function(a, b) {
  const c = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  let d;
  d = b ? b.createElement("div") : goog.global.document.createElement("div");
  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(e, f) {
    let g = c[e];
    if (g) {
      return g;
    }
    "#" == f.charAt(0) && (f = Number("0" + f.substr(1)), isNaN(f) || (g = String.fromCharCode(f)));
    g || (goog.dom.safe.setInnerHtml(d, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), e + " ")), g = d.firstChild.nodeValue.slice(0, -1));
    return c[e] = g;
  });
};
goog.string.unescapePureXmlEntities_ = function(a) {
  return a.replace(/&([^;]+);/g, function(b, c) {
    switch(c) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        return "#" != c.charAt(0) || (c = Number("0" + c.substr(1)), isNaN(c)) ? b : String.fromCharCode(c);
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(a, b) {
  return goog.string.newLineToBr(a.replace(/  /g, " \x26#160;"), b);
};
goog.string.preserveSpaces = function(a) {
  return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(a, b) {
  const c = b.length;
  for (let d = 0; d < c; d++) {
    const e = 1 == c ? b : b.charAt(d);
    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
      return a.substring(1, a.length - 1);
    }
  }
  return a;
};
goog.string.truncate = function(a, b, c) {
  c && (a = goog.string.unescapeEntities(a));
  a.length > b && (a = a.substring(0, b - 3) + "...");
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.truncateMiddle = function(a, b, c, d) {
  c && (a = goog.string.unescapeEntities(a));
  if (d && a.length > b) {
    d > b && (d = b);
    var e = a.length - d;
    a = a.substring(0, b - d) + "..." + a.substring(e);
  } else {
    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
  }
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\v":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\\u003C"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(a) {
  a = String(a);
  const b = ['"'];
  for (let c = 0; c < a.length; c++) {
    const d = a.charAt(c), e = d.charCodeAt(0);
    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
  }
  b.push('"');
  return b.join("");
};
goog.string.escapeString = function(a) {
  const b = [];
  for (let c = 0; c < a.length; c++) {
    b[c] = goog.string.escapeChar(a.charAt(c));
  }
  return b.join("");
};
goog.string.escapeChar = function(a) {
  if (a in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[a];
  }
  if (a in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
  }
  let b;
  const c = a.charCodeAt(0);
  if (31 < c && 127 > c) {
    b = a;
  } else {
    if (256 > c) {
      if (b = "\\x", 16 > c || 256 < c) {
        b += "0";
      }
    } else {
      b = "\\u", 4096 > c && (b += "0");
    }
    b += c.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[a] = b;
};
goog.string.contains = goog.string.internal.contains;
goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
goog.string.countOf = function(a, b) {
  return a && b ? a.split(b).length - 1 : 0;
};
goog.string.removeAt = function(a, b, c) {
  let d = a;
  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
  return d;
};
goog.string.remove = function(a, b) {
  return a.replace(b, "");
};
goog.string.removeAll = function(a, b) {
  b = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(b, "");
};
goog.string.replaceAll = function(a, b, c) {
  b = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(b, c.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(a) {
  return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(a, b) {
  return a.repeat(b);
} : function(a, b) {
  return Array(b + 1).join(a);
};
goog.string.padNumber = function(a, b, c) {
  a = void 0 !== c ? a.toFixed(c) : String(a);
  c = a.indexOf(".");
  -1 === c && (c = a.length);
  const d = "-" === a[0] ? "-" : "";
  d && (a = a.substring(1));
  return d + goog.string.repeat("0", Math.max(0, b - c)) + a;
};
goog.string.makeSafe = function(a) {
  return null == a ? "" : String(a);
};
goog.string.buildString = function(a) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = goog.string.internal.compareVersions;
goog.string.hashCode = function(a) {
  let b = 0;
  for (let c = 0; c < a.length; ++c) {
    b = 31 * b + a.charCodeAt(c) >>> 0;
  }
  return b;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(a) {
  const b = Number(a);
  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
};
goog.string.isLowerCamelCase = function(a) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
};
goog.string.isUpperCamelCase = function(a) {
  return /^([A-Z][a-z]*)+$/.test(a);
};
goog.string.toCamelCase = function(a) {
  return String(a).replace(/\-([a-z])/g, function(b, c) {
    return c.toUpperCase();
  });
};
goog.string.toSelectorCase = function(a) {
  return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(a, b) {
  b = "string" === typeof b ? goog.string.regExpEscape(b) : "\\s";
  return a.replace(new RegExp("(^" + (b ? "|[" + b + "]+" : "") + ")([a-z])", "g"), function(c, d, e) {
    return d + e.toUpperCase();
  });
};
goog.string.capitalize = function(a) {
  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
};
goog.string.parseInt = function(a) {
  isFinite(a) && (a = String(a));
  return "string" === typeof a ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
};
goog.string.splitLimit = function(a, b, c) {
  a = a.split(b);
  const d = [];
  for (; 0 < c && a.length;) {
    d.push(a.shift()), c--;
  }
  a.length && d.push(a.join(b));
  return d;
};
goog.string.lastComponent = function(a, b) {
  if (b) {
    "string" == typeof b && (b = [b]);
  } else {
    return a;
  }
  let c = -1;
  for (let d = 0; d < b.length; d++) {
    if ("" == b[d]) {
      continue;
    }
    const e = a.lastIndexOf(b[d]);
    e > c && (c = e);
  }
  return -1 == c ? a : a.slice(c + 1);
};
goog.string.editDistance = function(a, b) {
  const c = [], d = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var e = 0; e < b.length + 1; e++) {
    c[e] = e;
  }
  for (e = 0; e < a.length; e++) {
    d[0] = e + 1;
    for (var f = 0; f < b.length; f++) {
      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
    }
    for (f = 0; f < c.length; f++) {
      c[f] = d[f];
    }
  }
  return d[b.length];
};
goog.collections = {};
goog.collections.maps = {};
class module$contents$goog$collections$maps_MapLike {
  constructor() {
  }
  set(a, b) {
  }
  get(a) {
  }
  keys() {
  }
  values() {
  }
  has(a) {
  }
}
goog.collections.maps.MapLike = module$contents$goog$collections$maps_MapLike;
function module$contents$goog$collections$maps_setAll(a, b) {
  if (b) {
    for (const [c, d] of b) {
      a.set(c, d);
    }
  }
}
goog.collections.maps.setAll = module$contents$goog$collections$maps_setAll;
function module$contents$goog$collections$maps_hasValue(a, b, c = module$contents$goog$collections$maps_defaultEqualityFn) {
  for (const d of a.values()) {
    if (c(d, b)) {
      return !0;
    }
  }
  return !1;
}
goog.collections.maps.hasValue = module$contents$goog$collections$maps_hasValue;
const module$contents$goog$collections$maps_defaultEqualityFn = (a, b) => a === b;
function module$contents$goog$collections$maps_equals(a, b, c = module$contents$goog$collections$maps_defaultEqualityFn) {
  if (a === b) {
    return !0;
  }
  if (a.size !== b.size) {
    return !1;
  }
  for (const d of a.keys()) {
    if (!b.has(d) || !c(a.get(d), b.get(d))) {
      return !1;
    }
  }
  return !0;
}
goog.collections.maps.equals = module$contents$goog$collections$maps_equals;
function module$contents$goog$collections$maps_transpose(a) {
  const b = new Map();
  for (const c of a.keys()) {
    const d = a.get(c);
    b.set(d, c);
  }
  return b;
}
goog.collections.maps.transpose = module$contents$goog$collections$maps_transpose;
function module$contents$goog$collections$maps_toObject(a) {
  const b = {};
  for (const c of a.keys()) {
    b[c] = a.get(c);
  }
  return b;
}
goog.collections.maps.toObject = module$contents$goog$collections$maps_toObject;
goog.structs = {};
goog.structs.getCount = function(a) {
  return a.getCount && "function" == typeof a.getCount ? a.getCount() : goog.isArrayLike(a) || "string" === typeof a ? a.length : goog.object.getCount(a);
};
goog.structs.getValues = function(a) {
  if (a.getValues && "function" == typeof a.getValues) {
    return a.getValues();
  }
  if ("undefined" !== typeof Map && a instanceof Map || "undefined" !== typeof Set && a instanceof Set) {
    return Array.from(a.values());
  }
  if ("string" === typeof a) {
    return a.split("");
  }
  if (goog.isArrayLike(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) {
      b.push(a[d]);
    }
    return b;
  }
  return goog.object.getValues(a);
};
goog.structs.getKeys = function(a) {
  if (a.getKeys && "function" == typeof a.getKeys) {
    return a.getKeys();
  }
  if (!a.getValues || "function" != typeof a.getValues) {
    if ("undefined" !== typeof Map && a instanceof Map) {
      return Array.from(a.keys());
    }
    if (!("undefined" !== typeof Set && a instanceof Set)) {
      if (goog.isArrayLike(a) || "string" === typeof a) {
        var b = [];
        a = a.length;
        for (var c = 0; c < a; c++) {
          b.push(c);
        }
        return b;
      }
      return goog.object.getKeys(a);
    }
  }
};
goog.structs.contains = function(a, b) {
  return a.contains && "function" == typeof a.contains ? a.contains(b) : a.containsValue && "function" == typeof a.containsValue ? a.containsValue(b) : goog.isArrayLike(a) || "string" === typeof a ? goog.array.contains(a, b) : goog.object.containsValue(a, b);
};
goog.structs.isEmpty = function(a) {
  return a.isEmpty && "function" == typeof a.isEmpty ? a.isEmpty() : goog.isArrayLike(a) || "string" === typeof a ? 0 === a.length : goog.object.isEmpty(a);
};
goog.structs.clear = function(a) {
  a.clear && "function" == typeof a.clear ? a.clear() : goog.isArrayLike(a) ? goog.array.clear(a) : goog.object.clear(a);
};
goog.structs.forEach = function(a, b, c) {
  if (a.forEach && "function" == typeof a.forEach) {
    a.forEach(b, c);
  } else if (goog.isArrayLike(a) || "string" === typeof a) {
    Array.prototype.forEach.call(a, b, c);
  } else {
    for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
      b.call(c, e[g], d && d[g], a);
    }
  }
};
goog.structs.filter = function(a, b, c) {
  if ("function" == typeof a.filter) {
    return a.filter(b, c);
  }
  if (goog.isArrayLike(a) || "string" === typeof a) {
    return Array.prototype.filter.call(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      b.call(c, e[h], d[h], a) && (g[d[h]] = e[h]);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      b.call(c, e[h], void 0, a) && g.push(e[h]);
    }
  }
  return g;
};
goog.structs.map = function(a, b, c) {
  if ("function" == typeof a.map) {
    return a.map(b, c);
  }
  if (goog.isArrayLike(a) || "string" === typeof a) {
    return Array.prototype.map.call(a, b, c);
  }
  var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length;
  if (d) {
    var g = {};
    for (var h = 0; h < f; h++) {
      g[d[h]] = b.call(c, e[h], d[h], a);
    }
  } else {
    for (g = [], h = 0; h < f; h++) {
      g[h] = b.call(c, e[h], void 0, a);
    }
  }
  return g;
};
goog.structs.some = function(a, b, c) {
  if ("function" == typeof a.some) {
    return a.some(b, c);
  }
  if (goog.isArrayLike(a) || "string" === typeof a) {
    return Array.prototype.some.call(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (b.call(c, e[g], d && d[g], a)) {
      return !0;
    }
  }
  return !1;
};
goog.structs.every = function(a, b, c) {
  if ("function" == typeof a.every) {
    return a.every(b, c);
  }
  if (goog.isArrayLike(a) || "string" === typeof a) {
    return Array.prototype.every.call(a, b, c);
  }
  for (var d = goog.structs.getKeys(a), e = goog.structs.getValues(a), f = e.length, g = 0; g < f; g++) {
    if (!b.call(c, e[g], d && d[g], a)) {
      return !1;
    }
  }
  return !0;
};
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.QueryArray = {};
goog.uri.utils.QueryValue = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(a, b, c, d, e, f, g) {
  var h = "";
  a && (h += a + ":");
  c && (h += "//", b && (h += b + "@"), h += c, d && (h += ":" + d));
  e && (h += e);
  f && (h += "?" + f);
  g && (h += "#" + g);
  return h;
};
goog.uri.utils.splitRe_ = RegExp("^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?\x3d[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.urlPackageSupportLoggingHandler_ = null;
goog.uri.utils.setUrlPackageSupportLoggingHandler = function(a) {
  goog.uri.utils.urlPackageSupportLoggingHandler_ = a;
};
goog.uri.utils.split = function(a) {
  var b = a.match(goog.uri.utils.splitRe_);
  goog.uri.utils.urlPackageSupportLoggingHandler_ && 0 <= ["http", "https", "ws", "wss", "ftp"].indexOf(b[goog.uri.utils.ComponentIndex.SCHEME]) && goog.uri.utils.urlPackageSupportLoggingHandler_(a);
  return b;
};
goog.uri.utils.decodeIfPossible_ = function(a, b) {
  return a ? b ? decodeURI(a) : decodeURIComponent(a) : a;
};
goog.uri.utils.getComponentByIndex_ = function(a, b) {
  return goog.uri.utils.split(b)[a] || null;
};
goog.uri.utils.getScheme = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, a);
};
goog.uri.utils.getEffectiveScheme = function(a) {
  a = goog.uri.utils.getScheme(a);
  !a && goog.global.self && goog.global.self.location && (a = goog.global.self.location.protocol, a = a.substr(0, a.length - 1));
  return a ? a.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, a);
};
goog.uri.utils.getUserInfo = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(a));
};
goog.uri.utils.getDomainEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, a);
};
goog.uri.utils.getDomain = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(a), !0);
};
goog.uri.utils.getPort = function(a) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, a)) || null;
};
goog.uri.utils.getPathEncoded = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, a);
};
goog.uri.utils.getPath = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(a), !0);
};
goog.uri.utils.getQueryData = function(a) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, a);
};
goog.uri.utils.getFragmentEncoded = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? null : a.substr(b + 1);
};
goog.uri.utils.setFragmentEncoded = function(a, b) {
  return goog.uri.utils.removeFragment(a) + (b ? "#" + b : "");
};
goog.uri.utils.getFragment = function(a) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(a));
};
goog.uri.utils.getHost = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], null, a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(a) {
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, a[goog.uri.utils.ComponentIndex.PATH], a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(a) {
  var b = a.indexOf("#");
  return 0 > b ? a : a.substr(0, b);
};
goog.uri.utils.haveSameDomain = function(a, b) {
  a = goog.uri.utils.split(a);
  b = goog.uri.utils.split(b);
  return a[goog.uri.utils.ComponentIndex.DOMAIN] == b[goog.uri.utils.ComponentIndex.DOMAIN] && a[goog.uri.utils.ComponentIndex.SCHEME] == b[goog.uri.utils.ComponentIndex.SCHEME] && a[goog.uri.utils.ComponentIndex.PORT] == b[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(a) {
  goog.asserts.assert(0 > a.indexOf("#") && 0 > a.indexOf("?"), "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", a);
};
goog.uri.utils.parseQueryData = function(a, b) {
  if (a) {
    a = a.split("\x26");
    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("\x3d"), e = null;
      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else {
        f = a[c];
      }
      b(f, e ? goog.string.urlDecode(e) : "");
    }
  }
};
goog.uri.utils.splitQueryData_ = function(a) {
  var b = a.indexOf("#");
  0 > b && (b = a.length);
  var c = a.indexOf("?");
  if (0 > c || c > b) {
    c = b;
    var d = "";
  } else {
    d = a.substring(c + 1, b);
  }
  return [a.substr(0, c), d, a.substr(b)];
};
goog.uri.utils.joinQueryData_ = function(a) {
  return a[0] + (a[1] ? "?" + a[1] : "") + a[2];
};
goog.uri.utils.appendQueryData_ = function(a, b) {
  return b ? a ? a + "\x26" + b : b : a;
};
goog.uri.utils.appendQueryDataToUri_ = function(a, b) {
  if (!b) {
    return a;
  }
  a = goog.uri.utils.splitQueryData_(a);
  a[1] = goog.uri.utils.appendQueryData_(a[1], b);
  return goog.uri.utils.joinQueryData_(a);
};
goog.uri.utils.appendKeyValuePairs_ = function(a, b, c) {
  goog.asserts.assertString(a);
  if (Array.isArray(b)) {
    goog.asserts.assertArray(b);
    for (var d = 0; d < b.length; d++) {
      goog.uri.utils.appendKeyValuePairs_(a, String(b[d]), c);
    }
  } else {
    null != b && c.push(a + ("" === b ? "" : "\x3d" + goog.string.urlEncode(b)));
  }
};
goog.uri.utils.buildQueryData = function(a, b) {
  goog.asserts.assert(0 == Math.max(a.length - (b || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  var c = [];
  for (b = b || 0; b < a.length; b += 2) {
    goog.uri.utils.appendKeyValuePairs_(a[b], a[b + 1], c);
  }
  return c.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(a) {
  var b = [], c;
  for (c in a) {
    goog.uri.utils.appendKeyValuePairs_(c, a[c], b);
  }
  return b.join("\x26");
};
goog.uri.utils.appendParams = function(a, b) {
  var c = 2 == arguments.length ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(a, c);
};
goog.uri.utils.appendParamsFromMap = function(a, b) {
  b = goog.uri.utils.buildQueryDataFromMap(b);
  return goog.uri.utils.appendQueryDataToUri_(a, b);
};
goog.uri.utils.appendParam = function(a, b, c) {
  c = null != c ? "\x3d" + goog.string.urlEncode(c) : "";
  return goog.uri.utils.appendQueryDataToUri_(a, b + c);
};
goog.uri.utils.findParam_ = function(a, b, c, d) {
  for (var e = c.length; 0 <= (b = a.indexOf(c, b)) && b < d;) {
    var f = a.charCodeAt(b - 1);
    if (f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.QUESTION) {
      if (f = a.charCodeAt(b + e), !f || f == goog.uri.utils.CharCode_.EQUAL || f == goog.uri.utils.CharCode_.AMPERSAND || f == goog.uri.utils.CharCode_.HASH) {
        return b;
      }
    }
    b += e + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(a, b) {
  return 0 <= goog.uri.utils.findParam_(a, 0, b, a.search(goog.uri.utils.hashOrEndRe_));
};
goog.uri.utils.getParamValue = function(a, b) {
  var c = a.search(goog.uri.utils.hashOrEndRe_), d = goog.uri.utils.findParam_(a, 0, b, c);
  if (0 > d) {
    return null;
  }
  var e = a.indexOf("\x26", d);
  if (0 > e || e > c) {
    e = c;
  }
  d += b.length + 1;
  return goog.string.urlDecode(a.substr(d, e - d));
};
goog.uri.utils.getParamValues = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    d = a.indexOf("\x26", e);
    if (0 > d || d > c) {
      d = c;
    }
    e += b.length + 1;
    f.push(goog.string.urlDecode(a.substr(e, d - e)));
  }
  return f;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(a, b) {
  for (var c = a.search(goog.uri.utils.hashOrEndRe_), d = 0, e, f = []; 0 <= (e = goog.uri.utils.findParam_(a, d, b, c));) {
    f.push(a.substring(d, e)), d = Math.min(a.indexOf("\x26", e) + 1 || c, c);
  }
  f.push(a.substr(d));
  return f.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(a, b, c) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(a, b), b, c);
};
goog.uri.utils.setParamsFromMap = function(a, b) {
  a = goog.uri.utils.splitQueryData_(a);
  var c = a[1], d = [];
  c && c.split("\x26").forEach(function(e) {
    var f = e.indexOf("\x3d");
    f = 0 <= f ? e.substr(0, f) : e;
    b.hasOwnProperty(f) || d.push(e);
  });
  a[1] = goog.uri.utils.appendQueryData_(d.join("\x26"), goog.uri.utils.buildQueryDataFromMap(b));
  return goog.uri.utils.joinQueryData_(a);
};
goog.uri.utils.appendPath = function(a, b) {
  goog.uri.utils.assertNoFragmentsOrQueries_(a);
  goog.string.endsWith(a, "/") && (a = a.substr(0, a.length - 1));
  goog.string.startsWith(b, "/") && (b = b.substr(1));
  return "" + a + "/" + b;
};
goog.uri.utils.setPath = function(a, b) {
  goog.string.startsWith(b, "/") || (b = "/" + b);
  a = goog.uri.utils.split(a);
  return goog.uri.utils.buildFromEncodedParts(a[goog.uri.utils.ComponentIndex.SCHEME], a[goog.uri.utils.ComponentIndex.USER_INFO], a[goog.uri.utils.ComponentIndex.DOMAIN], a[goog.uri.utils.ComponentIndex.PORT], b, a[goog.uri.utils.ComponentIndex.QUERY_DATA], a[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(a) {
  return goog.uri.utils.setParam(a, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.Uri = function(a, b) {
  this.domain_ = this.userInfo_ = this.scheme_ = "";
  this.port_ = null;
  this.fragment_ = this.path_ = "";
  this.ignoreCase_ = this.isReadOnly_ = !1;
  var c;
  a instanceof goog.Uri ? (this.ignoreCase_ = void 0 !== b ? b : a.getIgnoreCase(), this.setScheme(a.getScheme()), this.setUserInfo(a.getUserInfo()), this.setDomain(a.getDomain()), this.setPort(a.getPort()), this.setPath(a.getPath()), this.setQueryData(a.getQueryData().clone()), this.setFragment(a.getFragment())) : a && (c = goog.uri.utils.split(String(a))) ? (this.ignoreCase_ = !!b, this.setScheme(c[goog.uri.utils.ComponentIndex.SCHEME] || "", !0), this.setUserInfo(c[goog.uri.utils.ComponentIndex.USER_INFO] || 
  "", !0), this.setDomain(c[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(c[goog.uri.utils.ComponentIndex.PORT]), this.setPath(c[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(c[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(c[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!b, this.queryData_ = new goog.Uri.QueryData(null, this.ignoreCase_));
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var a = [], b = this.getScheme();
  b && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), ":");
  var c = this.getDomain();
  if (c || "file" == b) {
    a.push("//"), (b = this.getUserInfo()) && a.push(goog.Uri.encodeSpecialChars_(b, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), "@"), a.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(c))), c = this.getPort(), null != c && a.push(":", String(c));
  }
  if (c = this.getPath()) {
    this.hasDomain() && "/" != c.charAt(0) && a.push("/"), a.push(goog.Uri.encodeSpecialChars_(c, "/" == c.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0));
  }
  (c = this.getEncodedQuery()) && a.push("?", c);
  (c = this.getFragment()) && a.push("#", goog.Uri.encodeSpecialChars_(c, goog.Uri.reDisallowedInFragment_));
  return a.join("");
};
goog.Uri.prototype.resolve = function(a) {
  var b = this.clone(), c = a.hasScheme();
  c ? b.setScheme(a.getScheme()) : c = a.hasUserInfo();
  c ? b.setUserInfo(a.getUserInfo()) : c = a.hasDomain();
  c ? b.setDomain(a.getDomain()) : c = a.hasPort();
  var d = a.getPath();
  if (c) {
    b.setPort(a.getPort());
  } else {
    if (c = a.hasPath()) {
      if ("/" != d.charAt(0)) {
        if (this.hasDomain() && !this.hasPath()) {
          d = "/" + d;
        } else {
          var e = b.getPath().lastIndexOf("/");
          -1 != e && (d = b.getPath().substr(0, e + 1) + d);
        }
      }
      d = goog.Uri.removeDotSegments(d);
    }
  }
  c ? b.setPath(d) : c = a.hasQuery();
  c ? b.setQueryData(a.getQueryData().clone()) : c = a.hasFragment();
  c && b.setFragment(a.getFragment());
  return b;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(a, b) {
  this.enforceReadOnly();
  if (this.scheme_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(a, b) {
  this.enforceReadOnly();
  this.userInfo_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(a, b) {
  this.enforceReadOnly();
  this.domain_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(a) {
  this.enforceReadOnly();
  if (a) {
    a = Number(a);
    if (isNaN(a) || 0 > a) {
      throw Error("Bad port number " + a);
    }
    this.port_ = a;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(a, b) {
  this.enforceReadOnly();
  this.path_ = b ? goog.Uri.decodeOrEmpty_(a, !0) : a;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return "" !== this.queryData_.toString();
};
goog.Uri.prototype.setQueryData = function(a, b) {
  this.enforceReadOnly();
  a instanceof goog.Uri.QueryData ? (this.queryData_ = a, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (b || (a = goog.Uri.encodeSpecialChars_(a, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(a, this.ignoreCase_));
  return this;
};
goog.Uri.prototype.setQuery = function(a, b) {
  return this.setQueryData(a, b);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(a, b) {
  this.enforceReadOnly();
  this.queryData_.set(a, b);
  return this;
};
goog.Uri.prototype.setParameterValues = function(a, b) {
  this.enforceReadOnly();
  Array.isArray(b) || (b = [String(b)]);
  this.queryData_.setValues(a, b);
  return this;
};
goog.Uri.prototype.getParameterValues = function(a) {
  return this.queryData_.getValues(a);
};
goog.Uri.prototype.getParameterValue = function(a) {
  return this.queryData_.get(a);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(a, b) {
  this.enforceReadOnly();
  this.fragment_ = b ? goog.Uri.decodeOrEmpty_(a) : a;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(a) {
  return (!this.hasDomain() && !a.hasDomain() || this.getDomain() == a.getDomain()) && (!this.hasPort() && !a.hasPort() || this.getPort() == a.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(a) {
  this.enforceReadOnly();
  this.queryData_.remove(a);
  return this;
};
goog.Uri.prototype.setReadOnly = function(a) {
  this.isReadOnly_ = a;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(a) {
  this.ignoreCase_ = a;
  this.queryData_ && this.queryData_.setIgnoreCase(a);
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(a, b) {
  return a instanceof goog.Uri ? a.clone() : new goog.Uri(a, b);
};
goog.Uri.create = function(a, b, c, d, e, f, g, h) {
  h = new goog.Uri(null, h);
  a && h.setScheme(a);
  b && h.setUserInfo(b);
  c && h.setDomain(c);
  d && h.setPort(d);
  e && h.setPath(e);
  f && h.setQueryData(f);
  g && h.setFragment(g);
  return h;
};
goog.Uri.resolve = function(a, b) {
  a instanceof goog.Uri || (a = goog.Uri.parse(a));
  b instanceof goog.Uri || (b = goog.Uri.parse(b));
  return a.resolve(b);
};
goog.Uri.removeDotSegments = function(a) {
  if (".." == a || "." == a) {
    return "";
  }
  if (goog.string.contains(a, "./") || goog.string.contains(a, "/.")) {
    var b = goog.string.startsWith(a, "/");
    a = a.split("/");
    for (var c = [], d = 0; d < a.length;) {
      var e = a[d++];
      "." == e ? b && d == a.length && c.push("") : ".." == e ? ((1 < c.length || 1 == c.length && "" != c[0]) && c.pop(), b && d == a.length && c.push("")) : (c.push(e), b = !0);
    }
    return c.join("/");
  }
  return a;
};
goog.Uri.decodeOrEmpty_ = function(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
};
goog.Uri.encodeSpecialChars_ = function(a, b, c) {
  return "string" === typeof a ? (a = encodeURI(a).replace(b, goog.Uri.encodeChar_), c && (a = goog.Uri.removeDoubleEncoding_(a)), a) : null;
};
goog.Uri.encodeChar_ = function(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(a) {
  return a.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(a, b) {
  a = goog.uri.utils.split(a);
  b = goog.uri.utils.split(b);
  return a[goog.uri.utils.ComponentIndex.DOMAIN] == b[goog.uri.utils.ComponentIndex.DOMAIN] && a[goog.uri.utils.ComponentIndex.PORT] == b[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(a, b) {
  this.count_ = this.keyMap_ = null;
  this.encodedQuery_ = a || null;
  this.ignoreCase_ = !!b;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_ && (this.keyMap_ = new Map(), this.count_ = 0, this.encodedQuery_)) {
    var a = this;
    goog.uri.utils.parseQueryData(this.encodedQuery_, function(b, c) {
      a.add(goog.string.urlDecode(b), c);
    });
  }
};
goog.Uri.QueryData.createFromMap = function(a, b) {
  var c = goog.structs.getKeys(a);
  if ("undefined" == typeof c) {
    throw Error("Keys are undefined");
  }
  b = new goog.Uri.QueryData(null, b);
  a = goog.structs.getValues(a);
  for (var d = 0; d < c.length; d++) {
    var e = c[d], f = a[d];
    Array.isArray(f) ? b.setValues(e, f) : b.add(e, f);
  }
  return b;
};
goog.Uri.QueryData.createFromKeysValues = function(a, b, c) {
  if (a.length != b.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  c = new goog.Uri.QueryData(null, c);
  for (var d = 0; d < a.length; d++) {
    c.add(a[d], b[d]);
  }
  return c;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  var c = this.keyMap_.get(a);
  c || this.keyMap_.set(a, c = []);
  c.push(b);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.has(a) ? (this.invalidateCache_(), this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length, this.keyMap_.delete(a)) : !1;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_;
};
goog.Uri.QueryData.prototype.containsKey = function(a) {
  this.ensureKeyMapInitialized_();
  a = this.getKeyName_(a);
  return this.keyMap_.has(a);
};
goog.Uri.QueryData.prototype.containsValue = function(a) {
  var b = this.getValues();
  return goog.array.contains(b, a);
};
goog.Uri.QueryData.prototype.forEach = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(c, d) {
    c.forEach(function(e) {
      a.call(b, e, d, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  const a = Array.from(this.keyMap_.values()), b = Array.from(this.keyMap_.keys()), c = [];
  for (let d = 0; d < b.length; d++) {
    const e = a[d];
    for (let f = 0; f < e.length; f++) {
      c.push(b[d]);
    }
  }
  return c;
};
goog.Uri.QueryData.prototype.getValues = function(a) {
  this.ensureKeyMapInitialized_();
  let b = [];
  if ("string" === typeof a) {
    this.containsKey(a) && (b = b.concat(this.keyMap_.get(this.getKeyName_(a))));
  } else {
    a = Array.from(this.keyMap_.values());
    for (let c = 0; c < a.length; c++) {
      b = b.concat(a[c]);
    }
  }
  return b;
};
goog.Uri.QueryData.prototype.set = function(a, b) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  a = this.getKeyName_(a);
  this.containsKey(a) && (this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(a).length);
  this.keyMap_.set(a, [b]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(a, b) {
  if (!a) {
    return b;
  }
  a = this.getValues(a);
  return 0 < a.length ? String(a[0]) : b;
};
goog.Uri.QueryData.prototype.setValues = function(a, b) {
  this.remove(a);
  0 < b.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(a), goog.array.clone(b)), this.count_ = goog.asserts.assertNumber(this.count_) + b.length);
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  const a = [], b = Array.from(this.keyMap_.keys());
  for (var c = 0; c < b.length; c++) {
    var d = b[c];
    const f = goog.string.urlEncode(d), g = this.getValues(d);
    for (d = 0; d < g.length; d++) {
      var e = f;
      "" !== g[d] && (e += "\x3d" + goog.string.urlEncode(g[d]));
      a.push(e);
    }
  }
  return this.encodedQuery_ = a.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(a) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(b, c) {
    goog.array.contains(a, c) || this.remove(c);
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var a = new goog.Uri.QueryData();
  a.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (a.keyMap_ = new Map(this.keyMap_), a.count_ = this.count_);
  return a;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(a) {
  a = String(a);
  this.ignoreCase_ && (a = a.toLowerCase());
  return a;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(a) {
  a && !this.ignoreCase_ && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(b, c) {
    var d = c.toLowerCase();
    c != d && (this.remove(c), this.setValues(d, b));
  }, this));
  this.ignoreCase_ = a;
};
goog.Uri.QueryData.prototype.extend = function(a) {
  for (var b = 0; b < arguments.length; b++) {
    goog.structs.forEach(arguments[b], function(c, d) {
      this.add(d, c);
    }, this);
  }
};
goog.reflect = {};
goog.reflect.object = function(a, b) {
  return b;
};
goog.reflect.objectProperty = function(a, b) {
  return a;
};
goog.reflect.sinkValue = function(a) {
  goog.reflect.sinkValue[" "](a);
  return a;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(a, b) {
  try {
    return goog.reflect.sinkValue(a[b]), !0;
  } catch (c) {
  }
  return !1;
};
goog.reflect.cache = function(a, b, c, d) {
  d = d ? d(b) : b;
  return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b);
};
goog.math = {};
goog.math.Integer = function(a, b) {
  this.sign_ = b;
  for (var c = [], d = !0, e = a.length - 1; 0 <= e; e--) {
    var f = a[e] | 0;
    d && f == b || (c[e] = f, d = !1);
  }
  this.bits_ = c;
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(a) {
  return -128 <= a && 128 > a ? goog.reflect.cache(goog.math.Integer.IntCache_, a, function(b) {
    return new goog.math.Integer([b | 0], 0 > b ? -1 : 0);
  }) : new goog.math.Integer([a | 0], 0 > a ? -1 : 0);
};
goog.math.Integer.fromNumber = function(a) {
  if (isNaN(a) || !isFinite(a)) {
    return goog.math.Integer.ZERO;
  }
  if (0 > a) {
    return goog.math.Integer.fromNumber(-a).negate();
  }
  for (var b = [], c = 1, d = 0; a >= c; d++) {
    b[d] = a / c | 0, c *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return new goog.math.Integer(b, 0);
};
goog.math.Integer.fromBits = function(a) {
  return new goog.math.Integer(a, a[a.length - 1] & -2147483648 ? -1 : 0);
};
goog.math.Integer.fromString = function(a, b) {
  if (0 == a.length) {
    throw Error("number format error: empty string");
  }
  b = b || 10;
  if (2 > b || 36 < b) {
    throw Error("radix out of range: " + b);
  }
  if ("-" == a.charAt(0)) {
    return goog.math.Integer.fromString(a.substring(1), b).negate();
  }
  if (0 <= a.indexOf("-")) {
    throw Error('number format error: interior "-" character');
  }
  for (var c = goog.math.Integer.fromNumber(Math.pow(b, 8)), d = goog.math.Integer.ZERO, e = 0; e < a.length; e += 8) {
    var f = Math.min(8, a.length - e), g = parseInt(a.substring(e, e + f), b);
    8 > f ? (f = goog.math.Integer.fromNumber(Math.pow(b, f)), d = d.multiply(f).add(goog.math.Integer.fromNumber(g))) : (d = d.multiply(c), d = d.add(goog.math.Integer.fromNumber(g)));
  }
  return d;
};
goog.math.Integer.TWO_PWR_32_DBL_ = 4294967296;
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(16777216);
goog.math.Integer.prototype.toInt = function() {
  return 0 < this.bits_.length ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  }
  for (var a = 0, b = 1, c = 0; c < this.bits_.length; c++) {
    a += this.getBitsUnsigned(c) * b, b *= goog.math.Integer.TWO_PWR_32_DBL_;
  }
  return a;
};
goog.math.Integer.prototype.toString = function(a) {
  a = a || 10;
  if (2 > a || 36 < a) {
    throw Error("radix out of range: " + a);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    return "-" + this.negate().toString(a);
  }
  for (var b = goog.math.Integer.fromNumber(Math.pow(a, 6)), c = this, d = "";;) {
    var e = c.divide(b), f = (c.subtract(e.multiply(b)).toInt() >>> 0).toString(a);
    c = e;
    if (c.isZero()) {
      return f + d;
    }
    for (; 6 > f.length;) {
      f = "0" + f;
    }
    d = "" + f + d;
  }
};
goog.math.Integer.prototype.getBits = function(a) {
  return 0 > a ? 0 : a < this.bits_.length ? this.bits_[a] : this.sign_;
};
goog.math.Integer.prototype.getBitsUnsigned = function(a) {
  a = this.getBits(a);
  return 0 <= a ? a : goog.math.Integer.TWO_PWR_32_DBL_ + a;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (0 != this.sign_) {
    return !1;
  }
  for (var a = 0; a < this.bits_.length; a++) {
    if (0 != this.bits_[a]) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.isNegative = function() {
  return -1 == this.sign_;
};
goog.math.Integer.prototype.isOdd = function() {
  return 0 == this.bits_.length && -1 == this.sign_ || 0 < this.bits_.length && 0 != (this.bits_[0] & 1);
};
goog.math.Integer.prototype.equals = function(a) {
  if (this.sign_ != a.sign_) {
    return !1;
  }
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = 0; c < b; c++) {
    if (this.getBits(c) != a.getBits(c)) {
      return !1;
    }
  }
  return !0;
};
goog.math.Integer.prototype.notEquals = function(a) {
  return !this.equals(a);
};
goog.math.Integer.prototype.greaterThan = function(a) {
  return 0 < this.compare(a);
};
goog.math.Integer.prototype.greaterThanOrEqual = function(a) {
  return 0 <= this.compare(a);
};
goog.math.Integer.prototype.lessThan = function(a) {
  return 0 > this.compare(a);
};
goog.math.Integer.prototype.lessThanOrEqual = function(a) {
  return 0 >= this.compare(a);
};
goog.math.Integer.prototype.compare = function(a) {
  a = this.subtract(a);
  return a.isNegative() ? -1 : a.isZero() ? 0 : 1;
};
goog.math.Integer.prototype.shorten = function(a) {
  var b = a - 1 >> 5;
  a = (a - 1) % 32;
  for (var c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d);
  }
  d = 31 == a ? 4294967295 : (1 << a + 1) - 1;
  var e = this.getBits(b) & d;
  if (e & 1 << a) {
    return c[b] = e | 4294967295 - d, new goog.math.Integer(c, -1);
  }
  c[b] = e;
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.abs = function() {
  return this.isNegative() ? this.negate() : this;
};
goog.math.Integer.prototype.add = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0, e = 0; e <= b; e++) {
    var f = this.getBits(e) >>> 16, g = this.getBits(e) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
    g = d + g + k;
    f = (g >>> 16) + f + h;
    d = f >>> 16;
    g &= 65535;
    f &= 65535;
    c[e] = f << 16 | g;
  }
  return goog.math.Integer.fromBits(c);
};
goog.math.Integer.prototype.subtract = function(a) {
  return this.add(a.negate());
};
goog.math.Integer.prototype.multiply = function(a) {
  if (this.isZero() || a.isZero()) {
    return goog.math.Integer.ZERO;
  }
  if (this.isNegative()) {
    return a.isNegative() ? this.negate().multiply(a.negate()) : this.negate().multiply(a).negate();
  }
  if (a.isNegative()) {
    return this.multiply(a.negate()).negate();
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && a.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * a.toNumber());
  }
  for (var b = this.bits_.length + a.bits_.length, c = [], d = 0; d < 2 * b; d++) {
    c[d] = 0;
  }
  for (d = 0; d < this.bits_.length; d++) {
    for (var e = 0; e < a.bits_.length; e++) {
      var f = this.getBits(d) >>> 16, g = this.getBits(d) & 65535, h = a.getBits(e) >>> 16, k = a.getBits(e) & 65535;
      c[2 * d + 2 * e] += g * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e);
      c[2 * d + 2 * e + 1] += f * k;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 1] += g * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 1);
      c[2 * d + 2 * e + 2] += f * h;
      goog.math.Integer.carry16_(c, 2 * d + 2 * e + 2);
    }
  }
  for (d = 0; d < b; d++) {
    c[d] = c[2 * d + 1] << 16 | c[2 * d];
  }
  for (d = b; d < 2 * b; d++) {
    c[d] = 0;
  }
  return new goog.math.Integer(c, 0);
};
goog.math.Integer.carry16_ = function(a, b) {
  for (; (a[b] & 65535) != a[b];) {
    a[b + 1] += a[b] >>> 16, a[b] &= 65535, b++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(a) {
  if (this.isNegative() || a.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  for (var b = goog.math.Integer.ONE, c = a; c.lessThanOrEqual(this);) {
    b = b.shiftLeft(1), c = c.shiftLeft(1);
  }
  var d = b.shiftRight(1), e = c.shiftRight(1);
  c = c.shiftRight(2);
  for (b = b.shiftRight(2); !c.isZero();) {
    var f = e.add(c);
    f.lessThanOrEqual(this) && (d = d.add(b), e = f);
    c = c.shiftRight(1);
    b = b.shiftRight(1);
  }
  a = this.subtract(d.multiply(a));
  return new goog.math.Integer.DivisionResult(d, a);
};
goog.math.Integer.prototype.divide = function(a) {
  return this.divideAndRemainder(a).quotient;
};
goog.math.Integer.DivisionResult = function(a, b) {
  this.quotient = a;
  this.remainder = b;
};
goog.math.Integer.prototype.divideAndRemainder = function(a) {
  if (a.isZero()) {
    throw Error("division by zero");
  }
  if (this.isZero()) {
    return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);
  }
  if (this.isNegative()) {
    return a = this.negate().divideAndRemainder(a), new goog.math.Integer.DivisionResult(a.quotient.negate(), a.remainder.negate());
  }
  if (a.isNegative()) {
    return a = this.divideAndRemainder(a.negate()), new goog.math.Integer.DivisionResult(a.quotient.negate(), a.remainder);
  }
  if (30 < this.bits_.length) {
    return this.slowDivide_(a);
  }
  for (var b = goog.math.Integer.ZERO, c = this; c.greaterThanOrEqual(a);) {
    var d = Math.max(1, Math.floor(c.toNumber() / a.toNumber())), e = Math.ceil(Math.log(d) / Math.LN2);
    e = 48 >= e ? 1 : Math.pow(2, e - 48);
    for (var f = goog.math.Integer.fromNumber(d), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
      d -= e, f = goog.math.Integer.fromNumber(d), g = f.multiply(a);
    }
    f.isZero() && (f = goog.math.Integer.ONE);
    b = b.add(f);
    c = c.subtract(g);
  }
  return new goog.math.Integer.DivisionResult(b, c);
};
goog.math.Integer.prototype.modulo = function(a) {
  return this.divideAndRemainder(a).remainder;
};
goog.math.Integer.prototype.not = function() {
  for (var a = this.bits_.length, b = [], c = 0; c < a; c++) {
    b[c] = ~this.bits_[c];
  }
  return new goog.math.Integer(b, ~this.sign_);
};
goog.math.Integer.prototype.and = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) & a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ & a.sign_);
};
goog.math.Integer.prototype.or = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) | a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ | a.sign_);
};
goog.math.Integer.prototype.xor = function(a) {
  for (var b = Math.max(this.bits_.length, a.bits_.length), c = [], d = 0; d < b; d++) {
    c[d] = this.getBits(d) ^ a.getBits(d);
  }
  return new goog.math.Integer(c, this.sign_ ^ a.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length + b + (0 < a ? 1 : 0), d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e - b) << a | this.getBits(e - b - 1) >>> 32 - a : this.getBits(e - b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(a) {
  var b = a >> 5;
  a %= 32;
  for (var c = this.bits_.length - b, d = [], e = 0; e < c; e++) {
    d[e] = 0 < a ? this.getBits(e + b) >>> a | this.getBits(e + b + 1) << 32 - a : this.getBits(e + b);
  }
  return new goog.math.Integer(d, this.sign_);
};
goog.string.StringBuffer = function(a, b) {
  null != a && this.append.apply(this, arguments);
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(a) {
  this.buffer_ = "" + a;
};
goog.string.StringBuffer.prototype.append = function(a, b, c) {
  this.buffer_ += String(a);
  if (null != b) {
    for (let d = 1; d < arguments.length; d++) {
      this.buffer_ += arguments[d];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
class module$contents$goog$math$Long_Long {
  constructor(a, b) {
    this.low_ = a | 0;
    this.high_ = b | 0;
  }
  toInt() {
    return this.low_;
  }
  toNumber() {
    return this.high_ * module$contents$goog$math$Long_TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
  }
  isSafeInteger() {
    var a = this.high_ >> 21;
    return 0 == a || -1 == a && !(0 == this.low_ && -2097152 == this.high_);
  }
  toString(a) {
    a = a || 10;
    if (2 > a || 36 < a) {
      throw Error("radix out of range: " + a);
    }
    if (this.isSafeInteger()) {
      var b = this.toNumber();
      return 10 == a ? "" + b : b.toString(a);
    }
    b = 14 - (a >> 2);
    var c = Math.pow(a, b), d = module$contents$goog$math$Long_Long.fromBits(c, c / module$contents$goog$math$Long_TWO_PWR_32_DBL_);
    c = this.div(d);
    d = Math.abs(this.subtract(c.multiply(d)).toNumber());
    var e = 10 == a ? "" + d : d.toString(a);
    e.length < b && (e = "0000000000000".substr(e.length - b) + e);
    d = c.toNumber();
    return (10 == a ? d : d.toString(a)) + e;
  }
  getHighBits() {
    return this.high_;
  }
  getLowBits() {
    return this.low_;
  }
  getLowBitsUnsigned() {
    return this.low_ >>> 0;
  }
  getNumBitsAbs() {
    if (this.isNegative()) {
      return this.equals(module$contents$goog$math$Long_Long.getMinValue()) ? 64 : this.negate().getNumBitsAbs();
    }
    for (var a = 0 != this.high_ ? this.high_ : this.low_, b = 31; 0 < b && 0 == (a & 1 << b); b--) {
    }
    return 0 != this.high_ ? b + 33 : b + 1;
  }
  isZero() {
    return 0 == this.low_ && 0 == this.high_;
  }
  isNegative() {
    return 0 > this.high_;
  }
  isOdd() {
    return 1 == (this.low_ & 1);
  }
  hashCode() {
    return this.getLowBits() ^ this.getHighBits();
  }
  equals(a) {
    return this.low_ == a.low_ && this.high_ == a.high_;
  }
  notEquals(a) {
    return !this.equals(a);
  }
  lessThan(a) {
    return 0 > this.compare(a);
  }
  lessThanOrEqual(a) {
    return 0 >= this.compare(a);
  }
  greaterThan(a) {
    return 0 < this.compare(a);
  }
  greaterThanOrEqual(a) {
    return 0 <= this.compare(a);
  }
  compare(a) {
    return this.high_ == a.high_ ? this.low_ == a.low_ ? 0 : this.getLowBitsUnsigned() > a.getLowBitsUnsigned() ? 1 : -1 : this.high_ > a.high_ ? 1 : -1;
  }
  negate() {
    var a = ~this.low_ + 1 | 0;
    return module$contents$goog$math$Long_Long.fromBits(a, ~this.high_ + !a | 0);
  }
  add(a) {
    var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = a.high_ >>> 16, f = a.high_ & 65535, g = a.low_ >>> 16;
    a = (this.low_ & 65535) + (a.low_ & 65535);
    g = (a >>> 16) + (d + g);
    d = g >>> 16;
    d += c + f;
    b = (d >>> 16) + (b + e) & 65535;
    return module$contents$goog$math$Long_Long.fromBits((g & 65535) << 16 | a & 65535, b << 16 | d & 65535);
  }
  subtract(a) {
    return this.add(a.negate());
  }
  multiply(a) {
    if (this.isZero()) {
      return this;
    }
    if (a.isZero()) {
      return a;
    }
    var b = this.high_ >>> 16, c = this.high_ & 65535, d = this.low_ >>> 16, e = this.low_ & 65535, f = a.high_ >>> 16, g = a.high_ & 65535, h = a.low_ >>> 16;
    a = a.low_ & 65535;
    var k = e * a;
    var l = (k >>> 16) + d * a;
    var m = l >>> 16;
    l = (l & 65535) + e * h;
    m += l >>> 16;
    m += c * a;
    var n = m >>> 16;
    m = (m & 65535) + d * h;
    n += m >>> 16;
    m = (m & 65535) + e * g;
    n = n + (m >>> 16) + (b * a + c * h + d * g + e * f) & 65535;
    return module$contents$goog$math$Long_Long.fromBits((l & 65535) << 16 | k & 65535, n << 16 | m & 65535);
  }
  div(a) {
    if (a.isZero()) {
      throw Error("division by zero");
    }
    if (this.isNegative()) {
      if (this.equals(module$contents$goog$math$Long_Long.getMinValue())) {
        if (a.equals(module$contents$goog$math$Long_Long.getOne()) || a.equals(module$contents$goog$math$Long_Long.getNegOne())) {
          return module$contents$goog$math$Long_Long.getMinValue();
        }
        if (a.equals(module$contents$goog$math$Long_Long.getMinValue())) {
          return module$contents$goog$math$Long_Long.getOne();
        }
        var b = this.shiftRight(1).div(a).shiftLeft(1);
        if (b.equals(module$contents$goog$math$Long_Long.getZero())) {
          return a.isNegative() ? module$contents$goog$math$Long_Long.getOne() : module$contents$goog$math$Long_Long.getNegOne();
        }
        var c = this.subtract(a.multiply(b));
        return b.add(c.div(a));
      }
      return a.isNegative() ? this.negate().div(a.negate()) : this.negate().div(a).negate();
    }
    if (this.isZero()) {
      return module$contents$goog$math$Long_Long.getZero();
    }
    if (a.isNegative()) {
      return a.equals(module$contents$goog$math$Long_Long.getMinValue()) ? module$contents$goog$math$Long_Long.getZero() : this.div(a.negate()).negate();
    }
    var d = module$contents$goog$math$Long_Long.getZero();
    for (c = this; c.greaterThanOrEqual(a);) {
      b = Math.max(1, Math.floor(c.toNumber() / a.toNumber()));
      var e = Math.ceil(Math.log(b) / Math.LN2);
      e = 48 >= e ? 1 : Math.pow(2, e - 48);
      for (var f = module$contents$goog$math$Long_Long.fromNumber(b), g = f.multiply(a); g.isNegative() || g.greaterThan(c);) {
        b -= e, f = module$contents$goog$math$Long_Long.fromNumber(b), g = f.multiply(a);
      }
      f.isZero() && (f = module$contents$goog$math$Long_Long.getOne());
      d = d.add(f);
      c = c.subtract(g);
    }
    return d;
  }
  modulo(a) {
    return this.subtract(this.div(a).multiply(a));
  }
  not() {
    return module$contents$goog$math$Long_Long.fromBits(~this.low_, ~this.high_);
  }
  and(a) {
    return module$contents$goog$math$Long_Long.fromBits(this.low_ & a.low_, this.high_ & a.high_);
  }
  or(a) {
    return module$contents$goog$math$Long_Long.fromBits(this.low_ | a.low_, this.high_ | a.high_);
  }
  xor(a) {
    return module$contents$goog$math$Long_Long.fromBits(this.low_ ^ a.low_, this.high_ ^ a.high_);
  }
  shiftLeft(a) {
    a &= 63;
    if (0 == a) {
      return this;
    }
    var b = this.low_;
    return 32 > a ? module$contents$goog$math$Long_Long.fromBits(b << a, this.high_ << a | b >>> 32 - a) : module$contents$goog$math$Long_Long.fromBits(0, b << a - 32);
  }
  shiftRight(a) {
    a &= 63;
    if (0 == a) {
      return this;
    }
    var b = this.high_;
    return 32 > a ? module$contents$goog$math$Long_Long.fromBits(this.low_ >>> a | b << 32 - a, b >> a) : module$contents$goog$math$Long_Long.fromBits(b >> a - 32, 0 <= b ? 0 : -1);
  }
  shiftRightUnsigned(a) {
    a &= 63;
    if (0 == a) {
      return this;
    }
    var b = this.high_;
    return 32 > a ? module$contents$goog$math$Long_Long.fromBits(this.low_ >>> a | b << 32 - a, b >>> a) : 32 == a ? module$contents$goog$math$Long_Long.fromBits(b, 0) : module$contents$goog$math$Long_Long.fromBits(b >>> a - 32, 0);
  }
  static fromInt(a) {
    var b = a | 0;
    goog.asserts.assert(a === b, "value should be a 32-bit integer");
    return -128 <= b && 128 > b ? module$contents$goog$math$Long_getCachedIntValue_(b) : new module$contents$goog$math$Long_Long(b, 0 > b ? -1 : 0);
  }
  static fromNumber(a) {
    return 0 < a ? a >= module$contents$goog$math$Long_TWO_PWR_63_DBL_ ? module$contents$goog$math$Long_Long.getMaxValue() : new module$contents$goog$math$Long_Long(a, a / module$contents$goog$math$Long_TWO_PWR_32_DBL_) : 0 > a ? a <= -module$contents$goog$math$Long_TWO_PWR_63_DBL_ ? module$contents$goog$math$Long_Long.getMinValue() : (new module$contents$goog$math$Long_Long(-a, -a / module$contents$goog$math$Long_TWO_PWR_32_DBL_)).negate() : module$contents$goog$math$Long_Long.getZero();
  }
  static fromBits(a, b) {
    return new module$contents$goog$math$Long_Long(a, b);
  }
  static fromString(a, b) {
    if ("-" == a.charAt(0)) {
      return module$contents$goog$math$Long_Long.fromString(a.substring(1), b).negate();
    }
    var c = parseInt(a, b || 10);
    if (c <= module$contents$goog$math$Long_MAX_SAFE_INTEGER_) {
      return new module$contents$goog$math$Long_Long(c % module$contents$goog$math$Long_TWO_PWR_32_DBL_ | 0, c / module$contents$goog$math$Long_TWO_PWR_32_DBL_ | 0);
    }
    if (0 == a.length) {
      throw Error("number format error: empty string");
    }
    if (0 <= a.indexOf("-")) {
      throw Error('number format error: interior "-" character: ' + a);
    }
    b = b || 10;
    if (2 > b || 36 < b) {
      throw Error("radix out of range: " + b);
    }
    c = module$contents$goog$math$Long_Long.fromNumber(Math.pow(b, 8));
    for (var d = module$contents$goog$math$Long_Long.getZero(), e = 0; e < a.length; e += 8) {
      var f = Math.min(8, a.length - e), g = parseInt(a.substring(e, e + f), b);
      8 > f ? (f = module$contents$goog$math$Long_Long.fromNumber(Math.pow(b, f)), d = d.multiply(f).add(module$contents$goog$math$Long_Long.fromNumber(g))) : (d = d.multiply(c), d = d.add(module$contents$goog$math$Long_Long.fromNumber(g)));
    }
    return d;
  }
  static isStringInRange(a, b) {
    b = b || 10;
    if (2 > b || 36 < b) {
      throw Error("radix out of range: " + b);
    }
    b = "-" == a.charAt(0) ? module$contents$goog$math$Long_MIN_VALUE_FOR_RADIX_[b] : module$contents$goog$math$Long_MAX_VALUE_FOR_RADIX_[b];
    return a.length < b.length ? !0 : a.length == b.length && a <= b ? !0 : !1;
  }
  static getZero() {
    return module$contents$goog$math$Long_ZERO_;
  }
  static getOne() {
    return module$contents$goog$math$Long_ONE_;
  }
  static getNegOne() {
    return module$contents$goog$math$Long_NEG_ONE_;
  }
  static getMaxValue() {
    return module$contents$goog$math$Long_MAX_VALUE_;
  }
  static getMinValue() {
    return module$contents$goog$math$Long_MIN_VALUE_;
  }
  static getTwoPwr24() {
    return module$contents$goog$math$Long_TWO_PWR_24_;
  }
}
goog.math.Long = module$contents$goog$math$Long_Long;
const module$contents$goog$math$Long_IntCache_ = {};
function module$contents$goog$math$Long_getCachedIntValue_(a) {
  return goog.reflect.cache(module$contents$goog$math$Long_IntCache_, a, function(b) {
    return new module$contents$goog$math$Long_Long(b, 0 > b ? -1 : 0);
  });
}
const module$contents$goog$math$Long_MAX_VALUE_FOR_RADIX_ = "  111111111111111111111111111111111111111111111111111111111111111 2021110011022210012102010021220101220221 13333333333333333333333333333333 1104332401304422434310311212 1540241003031030222122211 22341010611245052052300 777777777777777777777 67404283172107811827 9223372036854775807 1728002635214590697 41a792678515120367 10b269549075433c37 4340724c6c71dc7a7 160e2ad3246366807 7fffffffffffffff 33d3d8307b214008 16agh595df825fa7 ba643dci0ffeehh 5cbfjia3fh26ja7 2heiciiie82dh97 1adaibb21dckfa7 i6k448cf4192c2 acd772jnc9l0l7 64ie1focnn5g77 3igoecjbmca687 27c48l5b37oaop 1bk39f3ah3dmq7 q1se8f0m04isb hajppbc1fc207 bm03i95hia437 7vvvvvvvvvvvv 5hg4ck9jd4u37 3tdtk1v8j6tpp 2pijmikexrxp7 1y2p0ij32e8e7".split(" "), 
module$contents$goog$math$Long_MIN_VALUE_FOR_RADIX_ = "  -1000000000000000000000000000000000000000000000000000000000000000 -2021110011022210012102010021220101220222 -20000000000000000000000000000000 -1104332401304422434310311213 -1540241003031030222122212 -22341010611245052052301 -1000000000000000000000 -67404283172107811828 -9223372036854775808 -1728002635214590698 -41a792678515120368 -10b269549075433c38 -4340724c6c71dc7a8 -160e2ad3246366808 -8000000000000000 -33d3d8307b214009 -16agh595df825fa8 -ba643dci0ffeehi -5cbfjia3fh26ja8 -2heiciiie82dh98 -1adaibb21dckfa8 -i6k448cf4192c3 -acd772jnc9l0l8 -64ie1focnn5g78 -3igoecjbmca688 -27c48l5b37oaoq -1bk39f3ah3dmq8 -q1se8f0m04isc -hajppbc1fc208 -bm03i95hia438 -8000000000000 -5hg4ck9jd4u38 -3tdtk1v8j6tpq -2pijmikexrxp8 -1y2p0ij32e8e8".split(" "), 
module$contents$goog$math$Long_MAX_SAFE_INTEGER_ = 9007199254740991, module$contents$goog$math$Long_TWO_PWR_32_DBL_ = 4294967296, module$contents$goog$math$Long_TWO_PWR_63_DBL_ = 0x7fffffffffffffff, module$contents$goog$math$Long_ZERO_ = module$contents$goog$math$Long_Long.fromBits(0, 0), module$contents$goog$math$Long_ONE_ = module$contents$goog$math$Long_Long.fromBits(1, 0), module$contents$goog$math$Long_NEG_ONE_ = module$contents$goog$math$Long_Long.fromBits(-1, -1), module$contents$goog$math$Long_MAX_VALUE_ = 
module$contents$goog$math$Long_Long.fromBits(4294967295, 2147483647), module$contents$goog$math$Long_MIN_VALUE_ = module$contents$goog$math$Long_Long.fromBits(0, 2147483648), module$contents$goog$math$Long_TWO_PWR_24_ = module$contents$goog$math$Long_Long.fromBits(16777216, 0);
var cljs = {core:{}};
cljs.core.goog$module$goog$math$Long = module$contents$goog$math$Long_Long;
cljs.core.goog$module$goog$object = goog.object;
cljs.core.goog$module$goog$array = goog.array;
cljs.core._STAR_clojurescript_version_STAR_ = "1.11.60";
cljs.core._STAR_unchecked_if_STAR_ = !1;
cljs.core._STAR_unchecked_arrays_STAR_ = !1;
cljs.core._STAR_warn_on_infer_STAR_ = !1;
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core.PROTOCOL_SENTINEL) {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_global_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = !0;
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core._STAR_print_fn_STAR_) {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function(a) {
  return "undefined" !== typeof setTimeout && cljs.core.boolean$(setTimeout(a, 0));
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core._STAR_print_err_fn_STAR_) {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_fn_STAR_ = a;
};
cljs.core.set_print_err_fn_BANG_ = function(a) {
  return cljs.core._STAR_print_err_fn_STAR_ = a;
};
cljs.core._STAR_flush_on_newline_STAR_ = !0;
cljs.core._STAR_print_newline_STAR_ = !0;
cljs.core._STAR_print_readably_STAR_ = !0;
cljs.core._STAR_print_meta_STAR_ = !1;
cljs.core._STAR_print_dup_STAR_ = !1;
cljs.core._STAR_print_namespace_maps_STAR_ = !1;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = !1;
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core._STAR_loaded_libs_STAR_) {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function() {
  cljs.core._STAR_print_newline_STAR_ = !1;
  cljs.core.set_print_fn_BANG_(function() {
    var a = arguments;
    return console.log.apply(console, cljs.core.goog$module$goog$array.clone.call(null, a));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var a = arguments;
    return console.error.apply(console, cljs.core.goog$module$goog$array.clone.call(null, a));
  });
  return null;
};
cljs.core.truth_ = function(a) {
  return null != a && !1 !== a;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function(a, b) {
  return a === b;
};
cljs.core.nil_QMARK_ = function(a) {
  return null == a;
};
cljs.core.array_QMARK_ = function(a) {
  return "nodejs" === cljs.core._STAR_target_STAR_ ? Array.isArray(a) : a instanceof Array;
};
cljs.core.number_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.not = function(a) {
  return null == a ? !0 : !1 === a ? !0 : !1;
};
cljs.core.some_QMARK_ = function(a) {
  return null != a;
};
cljs.core.object_QMARK_ = function(a) {
  return null != a ? a.constructor === Object : !1;
};
cljs.core.string_QMARK_ = function(a) {
  return "string" === goog.typeOf(a);
};
cljs.core.char_QMARK_ = function(a) {
  return "string" === typeof a && 1 === a.length;
};
cljs.core.any_QMARK_ = function(a) {
  return !0;
};
cljs.core.native_satisfies_QMARK_ = function(a, b) {
  return a[goog.typeOf(null == b ? null : b)] ? !0 : a._ ? !0 : !1;
};
cljs.core.is_proto_ = function(a) {
  return a.constructor.prototype === a;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function(a) {
  return null == a ? null : a.constructor;
};
cljs.core.missing_protocol = function(a, b) {
  var c = cljs.core.type(b), d = cljs.core, e = d.truth_;
  var f = cljs.core.truth_(c) ? c.cljs$lang$type : c;
  c = e.call(d, f) ? c.cljs$lang$ctorStr : goog.typeOf(b);
  return Error(["No protocol method ", a, " defined for type ", c, ": ", b].join(""));
};
cljs.core.type__GT_str = function(a) {
  var b = a.cljs$lang$ctorStr;
  return cljs.core.truth_(b) ? b : cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.load_file = function(a) {
  return cljs.core.truth_(COMPILED) ? null : goog.nodeGlobalRequire(a);
};
"undefined" !== typeof Symbol && "function" === goog.typeOf(Symbol) ? cljs.core.ITER_SYMBOL = Symbol.iterator : cljs.core.ITER_SYMBOL = "@@iterator";
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {_RBRACE_:"}", _COLON_:":", _BANG_:"!", _QMARK_:"?", _BSLASH_:"\\\\", _SLASH_:"/", _PERCENT_:"%", _PLUS_:"+", _SHARP_:"#", _LBRACE_:"{", _BAR_:"|", _LBRACK_:"[", _EQ_:"\x3d", _:"-", _TILDE_:"~", _RBRACK_:"]", _GT_:"\x3e", _SINGLEQUOTE_:"'", _CIRCA_:"@", _AMPERSAND_:"\x26", _DOUBLEQUOTE_:'\\"', _CARET_:"^", _LT_:"\x3c", _STAR_:"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function() {
  if ("undefined" !== typeof performance && null != performance.now) {
    return performance.now();
  }
  if ("undefined" !== typeof process && null != process.hrtime) {
    var a = process.hrtime();
    return (1.0E9 * a[0] + a[1]) / 1000000.0;
  }
  return (new Date()).getTime();
};
cljs.core.make_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Array(a);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return Array(b);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = Array(b);
  b = a.length;
  for (var d = 0;;) {
    if (d < b) {
      a[d] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, c), d += 1;
    } else {
      break;
    }
  }
  return a;
};
cljs.core.make_array.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function(a) {
  for (var b = a.length, c = Array(b), d = 0;;) {
    if (d < b) {
      c[d] = a[d], d += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.array = function(a) {
  for (var b = Array(arguments.length), c = 0;;) {
    if (c < b.length) {
      b[c] = arguments[c], c += 1;
    } else {
      return b;
    }
  }
};
cljs.core.maybe_warn = function(a) {
  return cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_) ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_err_fn_STAR_.call(null, a) : null;
};
cljs.core.checked_aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  try {
    var c = cljs.core, d = c.truth_;
    var e = cljs.core.array_QMARK_(a);
    var f = e ? e : goog.isArrayLike(a);
    if (!d.call(c, f)) {
      throw Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (g) {
    cljs.core.maybe_warn(g);
  }
  return a[b];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  try {
    var d = cljs.core, e = d.truth_;
    var f = cljs.core.array_QMARK_(a);
    var g = f ? f : goog.isArrayLike(a);
    if (!e.call(d, g)) {
      throw Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if ("number" !== typeof b) {
      throw Error("Assert failed: (number? idx)");
    }
    if (0 > b) {
      throw Error("Assert failed: (not (neg? idx))");
    }
    if (!(b < a.length)) {
      throw Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (h) {
    cljs.core.maybe_warn(h);
  }
  return a[b] = c;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core, d = c.truth_;
  var e = (e = cljs.core.array_QMARK_(a)) ? e : goog.isArrayLike(a);
  if (!d.call(c, e)) {
    throw Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core, e = d.truth_;
  var f = (f = cljs.core.array_QMARK_(a)) ? f : goog.isArrayLike(a);
  if (!e.call(d, f)) {
    throw Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if ("number" !== typeof b) {
    throw Error("Assert failed: (number? idx)");
  }
  if (0 > b) {
    throw Error("Assert failed: (not (neg? idx))");
  }
  if (!(b < a.length)) {
    throw Error("Assert failed: (\x3c idx (alength array))");
  }
  return a[b] = c;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(a, b), c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a[b];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, a[b], c);
};
cljs.core.aget.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a[b] = c;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, a[b], c, d);
};
cljs.core.aset.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function(a) {
  return a.length;
};
cljs.core.into_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, a);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    c.push(d);
    return c;
  }, [], b);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a[b].apply(a, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(c));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.js_symbol_QMARK_ = function(a) {
  return "symbol" === goog.typeOf(a) || "undefined" !== typeof Symbol && a instanceof Symbol;
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
var cljs$core$IFn$_invoke$dyn_10077 = function() {
  var a = null, b = function(q) {
    var t = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != t) {
      return t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(q) : t.call(null, q);
    }
    t = cljs.core._invoke._;
    if (null != t) {
      return t.cljs$core$IFn$_invoke$arity$1 ? t.cljs$core$IFn$_invoke$arity$1(q) : t.call(null, q);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, c = function(q, t) {
    var v = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != v) {
      return v.cljs$core$IFn$_invoke$arity$2 ? v.cljs$core$IFn$_invoke$arity$2(q, t) : v.call(null, q, t);
    }
    v = cljs.core._invoke._;
    if (null != v) {
      return v.cljs$core$IFn$_invoke$arity$2 ? v.cljs$core$IFn$_invoke$arity$2(q, t) : v.call(null, q, t);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, d = function(q, t, v) {
    var w = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != w) {
      return w.cljs$core$IFn$_invoke$arity$3 ? w.cljs$core$IFn$_invoke$arity$3(q, t, v) : w.call(null, q, t, v);
    }
    w = cljs.core._invoke._;
    if (null != w) {
      return w.cljs$core$IFn$_invoke$arity$3 ? w.cljs$core$IFn$_invoke$arity$3(q, t, v) : w.call(null, q, t, v);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, e = function(q, t, v, w) {
    var x = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != x) {
      return x.cljs$core$IFn$_invoke$arity$4 ? x.cljs$core$IFn$_invoke$arity$4(q, t, v, w) : x.call(null, q, t, v, w);
    }
    x = cljs.core._invoke._;
    if (null != x) {
      return x.cljs$core$IFn$_invoke$arity$4 ? x.cljs$core$IFn$_invoke$arity$4(q, t, v, w) : x.call(null, q, t, v, w);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, f = function(q, t, v, w, x) {
    var y = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != y) {
      return y.cljs$core$IFn$_invoke$arity$5 ? y.cljs$core$IFn$_invoke$arity$5(q, t, v, w, x) : y.call(null, q, t, v, w, x);
    }
    y = cljs.core._invoke._;
    if (null != y) {
      return y.cljs$core$IFn$_invoke$arity$5 ? y.cljs$core$IFn$_invoke$arity$5(q, t, v, w, x) : y.call(null, q, t, v, w, x);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, g = function(q, t, v, w, x, y) {
    var A = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != A) {
      return A.cljs$core$IFn$_invoke$arity$6 ? A.cljs$core$IFn$_invoke$arity$6(q, t, v, w, x, y) : A.call(null, q, t, v, w, x, y);
    }
    A = cljs.core._invoke._;
    if (null != A) {
      return A.cljs$core$IFn$_invoke$arity$6 ? A.cljs$core$IFn$_invoke$arity$6(q, t, v, w, x, y) : A.call(null, q, t, v, w, x, y);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, h = function(q, t, v, w, x, y, A) {
    var B = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != B) {
      return B.cljs$core$IFn$_invoke$arity$7 ? B.cljs$core$IFn$_invoke$arity$7(q, t, v, w, x, y, A) : B.call(null, q, t, v, w, x, y, A);
    }
    B = cljs.core._invoke._;
    if (null != B) {
      return B.cljs$core$IFn$_invoke$arity$7 ? B.cljs$core$IFn$_invoke$arity$7(q, t, v, w, x, y, A) : B.call(null, q, t, v, w, x, y, A);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, k = function(q, t, v, w, x, y, A, B) {
    var C = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != C) {
      return C.cljs$core$IFn$_invoke$arity$8 ? C.cljs$core$IFn$_invoke$arity$8(q, t, v, w, x, y, A, B) : C.call(null, q, t, v, w, x, y, A, B);
    }
    C = cljs.core._invoke._;
    if (null != C) {
      return C.cljs$core$IFn$_invoke$arity$8 ? C.cljs$core$IFn$_invoke$arity$8(q, t, v, w, x, y, A, B) : C.call(null, q, t, v, w, x, y, A, B);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, l = function(q, t, v, w, x, y, A, B, C) {
    var E = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != E) {
      return E.cljs$core$IFn$_invoke$arity$9 ? E.cljs$core$IFn$_invoke$arity$9(q, t, v, w, x, y, A, B, C) : E.call(null, q, t, v, w, x, y, A, B, C);
    }
    E = cljs.core._invoke._;
    if (null != E) {
      return E.cljs$core$IFn$_invoke$arity$9 ? E.cljs$core$IFn$_invoke$arity$9(q, t, v, w, x, y, A, B, C) : E.call(null, q, t, v, w, x, y, A, B, C);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, m = function(q, t, v, w, x, y, A, B, C, E) {
    var F = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != F) {
      return F.cljs$core$IFn$_invoke$arity$10 ? F.cljs$core$IFn$_invoke$arity$10(q, t, v, w, x, y, A, B, C, E) : F.call(null, q, t, v, w, x, y, A, B, C, E);
    }
    F = cljs.core._invoke._;
    if (null != F) {
      return F.cljs$core$IFn$_invoke$arity$10 ? F.cljs$core$IFn$_invoke$arity$10(q, t, v, w, x, y, A, B, C, E) : F.call(null, q, t, v, w, x, y, A, B, C, E);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, n = function(q, t, v, w, x, y, A, B, C, E, F) {
    var G = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != G) {
      return G.cljs$core$IFn$_invoke$arity$11 ? G.cljs$core$IFn$_invoke$arity$11(q, t, v, w, x, y, A, B, C, E, F) : G.call(null, q, t, v, w, x, y, A, B, C, E, F);
    }
    G = cljs.core._invoke._;
    if (null != G) {
      return G.cljs$core$IFn$_invoke$arity$11 ? G.cljs$core$IFn$_invoke$arity$11(q, t, v, w, x, y, A, B, C, E, F) : G.call(null, q, t, v, w, x, y, A, B, C, E, F);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, p = function(q, t, v, w, x, y, A, B, C, E, F, G) {
    var I = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != I) {
      return I.cljs$core$IFn$_invoke$arity$12 ? I.cljs$core$IFn$_invoke$arity$12(q, t, v, w, x, y, A, B, C, E, F, G) : I.call(null, q, t, v, w, x, y, A, B, C, E, F, G);
    }
    I = cljs.core._invoke._;
    if (null != I) {
      return I.cljs$core$IFn$_invoke$arity$12 ? I.cljs$core$IFn$_invoke$arity$12(q, t, v, w, x, y, A, B, C, E, F, G) : I.call(null, q, t, v, w, x, y, A, B, C, E, F, G);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, r = function(q, t, v, w, x, y, A, B, C, E, F, G, I) {
    var J = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != J) {
      return J.cljs$core$IFn$_invoke$arity$13 ? J.cljs$core$IFn$_invoke$arity$13(q, t, v, w, x, y, A, B, C, E, F, G, I) : J.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I);
    }
    J = cljs.core._invoke._;
    if (null != J) {
      return J.cljs$core$IFn$_invoke$arity$13 ? J.cljs$core$IFn$_invoke$arity$13(q, t, v, w, x, y, A, B, C, E, F, G, I) : J.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, u = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J) {
    var K = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != K) {
      return K.cljs$core$IFn$_invoke$arity$14 ? K.cljs$core$IFn$_invoke$arity$14(q, t, v, w, x, y, A, B, C, E, F, G, I, J) : K.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
    }
    K = cljs.core._invoke._;
    if (null != K) {
      return K.cljs$core$IFn$_invoke$arity$14 ? K.cljs$core$IFn$_invoke$arity$14(q, t, v, w, x, y, A, B, C, E, F, G, I, J) : K.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, z = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) {
    var M = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != M) {
      return M.cljs$core$IFn$_invoke$arity$15 ? M.cljs$core$IFn$_invoke$arity$15(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) : M.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
    }
    M = cljs.core._invoke._;
    if (null != M) {
      return M.cljs$core$IFn$_invoke$arity$15 ? M.cljs$core$IFn$_invoke$arity$15(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) : M.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, D = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) {
    var N = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != N) {
      return N.cljs$core$IFn$_invoke$arity$16 ? N.cljs$core$IFn$_invoke$arity$16(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : N.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
    }
    N = cljs.core._invoke._;
    if (null != N) {
      return N.cljs$core$IFn$_invoke$arity$16 ? N.cljs$core$IFn$_invoke$arity$16(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : N.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, H = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) {
    var O = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != O) {
      return O.cljs$core$IFn$_invoke$arity$17 ? O.cljs$core$IFn$_invoke$arity$17(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : O.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
    }
    O = cljs.core._invoke._;
    if (null != O) {
      return O.cljs$core$IFn$_invoke$arity$17 ? O.cljs$core$IFn$_invoke$arity$17(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : O.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, L = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) {
    var Q = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != Q) {
      return Q.cljs$core$IFn$_invoke$arity$18 ? Q.cljs$core$IFn$_invoke$arity$18(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : Q.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
    }
    Q = cljs.core._invoke._;
    if (null != Q) {
      return Q.cljs$core$IFn$_invoke$arity$18 ? Q.cljs$core$IFn$_invoke$arity$18(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : Q.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, P = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) {
    var R = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != R) {
      return R.cljs$core$IFn$_invoke$arity$19 ? R.cljs$core$IFn$_invoke$arity$19(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : R.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
    }
    R = cljs.core._invoke._;
    if (null != R) {
      return R.cljs$core$IFn$_invoke$arity$19 ? R.cljs$core$IFn$_invoke$arity$19(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : R.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, S = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) {
    var T = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != T) {
      return T.cljs$core$IFn$_invoke$arity$20 ? T.cljs$core$IFn$_invoke$arity$20(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : T.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
    }
    T = cljs.core._invoke._;
    if (null != T) {
      return T.cljs$core$IFn$_invoke$arity$20 ? T.cljs$core$IFn$_invoke$arity$20(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : T.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, U = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) {
    var W = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != W) {
      return W.cljs$core$IFn$_invoke$arity$21 ? W.cljs$core$IFn$_invoke$arity$21(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : W.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
    }
    W = cljs.core._invoke._;
    if (null != W) {
      return W.cljs$core$IFn$_invoke$arity$21 ? W.cljs$core$IFn$_invoke$arity$21(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : W.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  }, V = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    var X = cljs.core._invoke[goog.typeOf(null == q ? null : q)];
    if (null != X) {
      return X.cljs$core$IFn$_invoke$arity$22 ? X.cljs$core$IFn$_invoke$arity$22(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) : X.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    X = cljs.core._invoke._;
    if (null != X) {
      return X.cljs$core$IFn$_invoke$arity$22 ? X.cljs$core$IFn$_invoke$arity$22(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) : X.call(null, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    throw cljs.core.missing_protocol("IFn.-invoke", q);
  };
  a = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    switch(arguments.length) {
      case 1:
        return b.call(this, q);
      case 2:
        return c.call(this, q, t);
      case 3:
        return d.call(this, q, t, v);
      case 4:
        return e.call(this, q, t, v, w);
      case 5:
        return f.call(this, q, t, v, w, x);
      case 6:
        return g.call(this, q, t, v, w, x, y);
      case 7:
        return h.call(this, q, t, v, w, x, y, A);
      case 8:
        return k.call(this, q, t, v, w, x, y, A, B);
      case 9:
        return l.call(this, q, t, v, w, x, y, A, B, C);
      case 10:
        return m.call(this, q, t, v, w, x, y, A, B, C, E);
      case 11:
        return n.call(this, q, t, v, w, x, y, A, B, C, E, F);
      case 12:
        return p.call(this, q, t, v, w, x, y, A, B, C, E, F, G);
      case 13:
        return r.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I);
      case 14:
        return u.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
      case 15:
        return z.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
      case 16:
        return D.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
      case 17:
        return H.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
      case 18:
        return L.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
      case 19:
        return P.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
      case 20:
        return S.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
      case 21:
        return U.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
      case 22:
        return V.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = r;
  a.cljs$core$IFn$_invoke$arity$14 = u;
  a.cljs$core$IFn$_invoke$arity$15 = z;
  a.cljs$core$IFn$_invoke$arity$16 = D;
  a.cljs$core$IFn$_invoke$arity$17 = H;
  a.cljs$core$IFn$_invoke$arity$18 = L;
  a.cljs$core$IFn$_invoke$arity$19 = P;
  a.cljs$core$IFn$_invoke$arity$20 = S;
  a.cljs$core$IFn$_invoke$arity$21 = U;
  a.cljs$core$IFn$_invoke$arity$22 = V;
  return a;
}();
cljs.core._invoke = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(a) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(a, b) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(a, b, c) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$21 ? a.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$21(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S);
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S, U) {
  return null != a && null != a.cljs$core$IFn$_invoke$arity$22 ? a.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S, U) : cljs$core$IFn$_invoke$dyn_10077.cljs$core$IFn$_invoke$arity$22(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S, U);
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
var cljs$core$ICloneable$_clone$dyn_10080 = function(a) {
  var b = cljs.core._clone[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clone._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICloneable.-clone", a);
};
cljs.core._clone = function(a) {
  return null != a && null != a.cljs$core$ICloneable$_clone$arity$1 ? a.cljs$core$ICloneable$_clone$arity$1(a) : cljs$core$ICloneable$_clone$dyn_10080(a);
};
cljs.core.ICounted = function() {
};
var cljs$core$ICounted$_count$dyn_10081 = function(a) {
  var b = cljs.core._count[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._count._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ICounted.-count", a);
};
cljs.core._count = function(a) {
  return null != a && null != a.cljs$core$ICounted$_count$arity$1 ? a.cljs$core$ICounted$_count$arity$1(a) : cljs$core$ICounted$_count$dyn_10081(a);
};
cljs.core.IEmptyableCollection = function() {
};
var cljs$core$IEmptyableCollection$_empty$dyn_10082 = function(a) {
  var b = cljs.core._empty[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._empty._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEmptyableCollection.-empty", a);
};
cljs.core._empty = function(a) {
  return null != a && null != a.cljs$core$IEmptyableCollection$_empty$arity$1 ? a.cljs$core$IEmptyableCollection$_empty$arity$1(a) : cljs$core$IEmptyableCollection$_empty$dyn_10082(a);
};
cljs.core.ICollection = function() {
};
var cljs$core$ICollection$_conj$dyn_10083 = function(a, b) {
  var c = cljs.core._conj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ICollection.-conj", a);
};
cljs.core._conj = function(a, b) {
  return null != a && null != a.cljs$core$ICollection$_conj$arity$2 ? a.cljs$core$ICollection$_conj$arity$2(a, b) : cljs$core$ICollection$_conj$dyn_10083(a, b);
};
cljs.core.IIndexed = function() {
};
var cljs$core$IIndexed$_nth$dyn_10086 = function() {
  var a = null, b = function(d, e) {
    var f = cljs.core._nth[goog.typeOf(null == d ? null : d)];
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    f = cljs.core._nth._;
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    throw cljs.core.missing_protocol("IIndexed.-nth", d);
  }, c = function(d, e, f) {
    var g = cljs.core._nth[goog.typeOf(null == d ? null : d)];
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    g = cljs.core._nth._;
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    throw cljs.core.missing_protocol("IIndexed.-nth", d);
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core._nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a && null != a.cljs$core$IIndexed$_nth$arity$2 ? a.cljs$core$IIndexed$_nth$arity$2(a, b) : cljs$core$IIndexed$_nth$dyn_10086.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && null != a.cljs$core$IIndexed$_nth$arity$3 ? a.cljs$core$IIndexed$_nth$arity$3(a, b, c) : cljs$core$IIndexed$_nth$dyn_10086.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
var cljs$core$ISeq$_first$dyn_10089 = function(a) {
  var b = cljs.core._first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-first", a);
};
cljs.core._first = function(a) {
  return null != a && null != a.cljs$core$ISeq$_first$arity$1 ? a.cljs$core$ISeq$_first$arity$1(a) : cljs$core$ISeq$_first$dyn_10089(a);
};
var cljs$core$ISeq$_rest$dyn_10090 = function(a) {
  var b = cljs.core._rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeq.-rest", a);
};
cljs.core._rest = function(a) {
  return null != a && null != a.cljs$core$ISeq$_rest$arity$1 ? a.cljs$core$ISeq$_rest$arity$1(a) : cljs$core$ISeq$_rest$dyn_10090(a);
};
cljs.core.INext = function() {
};
var cljs$core$INext$_next$dyn_10091 = function(a) {
  var b = cljs.core._next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INext.-next", a);
};
cljs.core._next = function(a) {
  return null != a && null != a.cljs$core$INext$_next$arity$1 ? a.cljs$core$INext$_next$arity$1(a) : cljs$core$INext$_next$dyn_10091(a);
};
cljs.core.ILookup = function() {
};
var cljs$core$ILookup$_lookup$dyn_10094 = function() {
  var a = null, b = function(d, e) {
    var f = cljs.core._lookup[goog.typeOf(null == d ? null : d)];
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    f = cljs.core._lookup._;
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    throw cljs.core.missing_protocol("ILookup.-lookup", d);
  }, c = function(d, e, f) {
    var g = cljs.core._lookup[goog.typeOf(null == d ? null : d)];
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    g = cljs.core._lookup._;
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    throw cljs.core.missing_protocol("ILookup.-lookup", d);
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core._lookup = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a && null != a.cljs$core$ILookup$_lookup$arity$2 ? a.cljs$core$ILookup$_lookup$arity$2(a, b) : cljs$core$ILookup$_lookup$dyn_10094.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && null != a.cljs$core$ILookup$_lookup$arity$3 ? a.cljs$core$ILookup$_lookup$arity$3(a, b, c) : cljs$core$ILookup$_lookup$dyn_10094.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
var cljs$core$IAssociative$_contains_key_QMARK_$dyn_10097 = function(a, b) {
  var c = cljs.core._contains_key_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._contains_key_QMARK_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IAssociative.-contains-key?", a);
};
cljs.core._contains_key_QMARK_ = function(a, b) {
  return null != a && null != a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 ? a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(a, b) : cljs$core$IAssociative$_contains_key_QMARK_$dyn_10097(a, b);
};
var cljs$core$IAssociative$_assoc$dyn_10098 = function(a, b, c) {
  var d = cljs.core._assoc[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IAssociative.-assoc", a);
};
cljs.core._assoc = function(a, b, c) {
  return null != a && null != a.cljs$core$IAssociative$_assoc$arity$3 ? a.cljs$core$IAssociative$_assoc$arity$3(a, b, c) : cljs$core$IAssociative$_assoc$dyn_10098(a, b, c);
};
cljs.core.IFind = function() {
};
var cljs$core$IFind$_find$dyn_10099 = function(a, b) {
  var c = cljs.core._find[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._find._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IFind.-find", a);
};
cljs.core._find = function(a, b) {
  return null != a && null != a.cljs$core$IFind$_find$arity$2 ? a.cljs$core$IFind$_find$arity$2(a, b) : cljs$core$IFind$_find$dyn_10099(a, b);
};
cljs.core.IMap = function() {
};
var cljs$core$IMap$_dissoc$dyn_10100 = function(a, b) {
  var c = cljs.core._dissoc[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMap.-dissoc", a);
};
cljs.core._dissoc = function(a, b) {
  return null != a && null != a.cljs$core$IMap$_dissoc$arity$2 ? a.cljs$core$IMap$_dissoc$arity$2(a, b) : cljs$core$IMap$_dissoc$dyn_10100(a, b);
};
cljs.core.IMapEntry = function() {
};
var cljs$core$IMapEntry$_key$dyn_10101 = function(a) {
  var b = cljs.core._key[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-key", a);
};
cljs.core._key = function(a) {
  return null != a && null != a.cljs$core$IMapEntry$_key$arity$1 ? a.cljs$core$IMapEntry$_key$arity$1(a) : cljs$core$IMapEntry$_key$dyn_10101(a);
};
var cljs$core$IMapEntry$_val$dyn_10102 = function(a) {
  var b = cljs.core._val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMapEntry.-val", a);
};
cljs.core._val = function(a) {
  return null != a && null != a.cljs$core$IMapEntry$_val$arity$1 ? a.cljs$core$IMapEntry$_val$arity$1(a) : cljs$core$IMapEntry$_val$dyn_10102(a);
};
cljs.core.ISet = function() {
};
var cljs$core$ISet$_disjoin$dyn_10103 = function(a, b) {
  var c = cljs.core._disjoin[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISet.-disjoin", a);
};
cljs.core._disjoin = function(a, b) {
  return null != a && null != a.cljs$core$ISet$_disjoin$arity$2 ? a.cljs$core$ISet$_disjoin$arity$2(a, b) : cljs$core$ISet$_disjoin$dyn_10103(a, b);
};
cljs.core.IStack = function() {
};
var cljs$core$IStack$_peek$dyn_10104 = function(a) {
  var b = cljs.core._peek[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._peek._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-peek", a);
};
cljs.core._peek = function(a) {
  return null != a && null != a.cljs$core$IStack$_peek$arity$1 ? a.cljs$core$IStack$_peek$arity$1(a) : cljs$core$IStack$_peek$dyn_10104(a);
};
var cljs$core$IStack$_pop$dyn_10105 = function(a) {
  var b = cljs.core._pop[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IStack.-pop", a);
};
cljs.core._pop = function(a) {
  return null != a && null != a.cljs$core$IStack$_pop$arity$1 ? a.cljs$core$IStack$_pop$arity$1(a) : cljs$core$IStack$_pop$dyn_10105(a);
};
cljs.core.IVector = function() {
};
var cljs$core$IVector$_assoc_n$dyn_10106 = function(a, b, c) {
  var d = cljs.core._assoc_n[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IVector.-assoc-n", a);
};
cljs.core._assoc_n = function(a, b, c) {
  return null != a && null != a.cljs$core$IVector$_assoc_n$arity$3 ? a.cljs$core$IVector$_assoc_n$arity$3(a, b, c) : cljs$core$IVector$_assoc_n$dyn_10106(a, b, c);
};
cljs.core.IDeref = function() {
};
var cljs$core$IDeref$_deref$dyn_10107 = function(a) {
  var b = cljs.core._deref[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._deref._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IDeref.-deref", a);
};
cljs.core._deref = function(a) {
  return null != a && null != a.cljs$core$IDeref$_deref$arity$1 ? a.cljs$core$IDeref$_deref$arity$1(a) : cljs$core$IDeref$_deref$dyn_10107(a);
};
cljs.core.IDerefWithTimeout = function() {
};
var cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_10108 = function(a, b, c) {
  var d = cljs.core._deref_with_timeout[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._deref_with_timeout._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", a);
};
cljs.core._deref_with_timeout = function(a, b, c) {
  return null != a && null != a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 ? a.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(a, b, c) : cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_10108(a, b, c);
};
cljs.core.IMeta = function() {
};
var cljs$core$IMeta$_meta$dyn_10109 = function(a) {
  var b = cljs.core._meta[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._meta._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMeta.-meta", a);
};
cljs.core._meta = function(a) {
  return null != a && null != a.cljs$core$IMeta$_meta$arity$1 ? a.cljs$core$IMeta$_meta$arity$1(a) : cljs$core$IMeta$_meta$dyn_10109(a);
};
cljs.core.IWithMeta = function() {
};
var cljs$core$IWithMeta$_with_meta$dyn_10110 = function(a, b) {
  var c = cljs.core._with_meta[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._with_meta._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWithMeta.-with-meta", a);
};
cljs.core._with_meta = function(a, b) {
  return null != a && null != a.cljs$core$IWithMeta$_with_meta$arity$2 ? a.cljs$core$IWithMeta$_with_meta$arity$2(a, b) : cljs$core$IWithMeta$_with_meta$dyn_10110(a, b);
};
cljs.core.IReduce = function() {
};
var cljs$core$IReduce$_reduce$dyn_10113 = function() {
  var a = null, b = function(d, e) {
    var f = cljs.core._reduce[goog.typeOf(null == d ? null : d)];
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    f = cljs.core._reduce._;
    if (null != f) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
    }
    throw cljs.core.missing_protocol("IReduce.-reduce", d);
  }, c = function(d, e, f) {
    var g = cljs.core._reduce[goog.typeOf(null == d ? null : d)];
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    g = cljs.core._reduce._;
    if (null != g) {
      return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(d, e, f) : g.call(null, d, e, f);
    }
    throw cljs.core.missing_protocol("IReduce.-reduce", d);
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core._reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a && null != a.cljs$core$IReduce$_reduce$arity$2 ? a.cljs$core$IReduce$_reduce$arity$2(a, b) : cljs$core$IReduce$_reduce$dyn_10113.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && null != a.cljs$core$IReduce$_reduce$arity$3 ? a.cljs$core$IReduce$_reduce$arity$3(a, b, c) : cljs$core$IReduce$_reduce$dyn_10113.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
var cljs$core$IKVReduce$_kv_reduce$dyn_10116 = function(a, b, c) {
  var d = cljs.core._kv_reduce[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._kv_reduce._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", a);
};
cljs.core._kv_reduce = function(a, b, c) {
  return null != a && null != a.cljs$core$IKVReduce$_kv_reduce$arity$3 ? a.cljs$core$IKVReduce$_kv_reduce$arity$3(a, b, c) : cljs$core$IKVReduce$_kv_reduce$dyn_10116(a, b, c);
};
cljs.core.IEquiv = function() {
};
var cljs$core$IEquiv$_equiv$dyn_10117 = function(a, b) {
  var c = cljs.core._equiv[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._equiv._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEquiv.-equiv", a);
};
cljs.core._equiv = function(a, b) {
  return null != a && null != a.cljs$core$IEquiv$_equiv$arity$2 ? a.cljs$core$IEquiv$_equiv$arity$2(a, b) : cljs$core$IEquiv$_equiv$dyn_10117(a, b);
};
cljs.core.IHash = function() {
};
var cljs$core$IHash$_hash$dyn_10118 = function(a) {
  var b = cljs.core._hash[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._hash._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IHash.-hash", a);
};
cljs.core._hash = function(a) {
  return null != a && null != a.cljs$core$IHash$_hash$arity$1 ? a.cljs$core$IHash$_hash$arity$1(a) : cljs$core$IHash$_hash$dyn_10118(a);
};
cljs.core.ISeqable = function() {
};
var cljs$core$ISeqable$_seq$dyn_10119 = function(a) {
  var b = cljs.core._seq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._seq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISeqable.-seq", a);
};
cljs.core._seq = function(a) {
  return null != a && null != a.cljs$core$ISeqable$_seq$arity$1 ? a.cljs$core$ISeqable$_seq$arity$1(a) : cljs$core$ISeqable$_seq$dyn_10119(a);
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
var cljs$core$IReversible$_rseq$dyn_10120 = function(a) {
  var b = cljs.core._rseq[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._rseq._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IReversible.-rseq", a);
};
cljs.core._rseq = function(a) {
  return null != a && null != a.cljs$core$IReversible$_rseq$arity$1 ? a.cljs$core$IReversible$_rseq$arity$1(a) : cljs$core$IReversible$_rseq$dyn_10120(a);
};
cljs.core.ISorted = function() {
};
var cljs$core$ISorted$_sorted_seq$dyn_10121 = function(a, b) {
  var c = cljs.core._sorted_seq[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._sorted_seq._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq", a);
};
cljs.core._sorted_seq = function(a, b) {
  return null != a && null != a.cljs$core$ISorted$_sorted_seq$arity$2 ? a.cljs$core$ISorted$_sorted_seq$arity$2(a, b) : cljs$core$ISorted$_sorted_seq$dyn_10121(a, b);
};
var cljs$core$ISorted$_sorted_seq_from$dyn_10122 = function(a, b, c) {
  var d = cljs.core._sorted_seq_from[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._sorted_seq_from._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", a);
};
cljs.core._sorted_seq_from = function(a, b, c) {
  return null != a && null != a.cljs$core$ISorted$_sorted_seq_from$arity$3 ? a.cljs$core$ISorted$_sorted_seq_from$arity$3(a, b, c) : cljs$core$ISorted$_sorted_seq_from$dyn_10122(a, b, c);
};
var cljs$core$ISorted$_entry_key$dyn_10123 = function(a, b) {
  var c = cljs.core._entry_key[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._entry_key._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ISorted.-entry-key", a);
};
cljs.core._entry_key = function(a, b) {
  return null != a && null != a.cljs$core$ISorted$_entry_key$arity$2 ? a.cljs$core$ISorted$_entry_key$arity$2(a, b) : cljs$core$ISorted$_entry_key$dyn_10123(a, b);
};
var cljs$core$ISorted$_comparator$dyn_10124 = function(a) {
  var b = cljs.core._comparator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._comparator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ISorted.-comparator", a);
};
cljs.core._comparator = function(a) {
  return null != a && null != a.cljs$core$ISorted$_comparator$arity$1 ? a.cljs$core$ISorted$_comparator$arity$1(a) : cljs$core$ISorted$_comparator$dyn_10124(a);
};
cljs.core.IWriter = function() {
};
var cljs$core$IWriter$_write$dyn_10125 = function(a, b) {
  var c = cljs.core._write[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._write._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWriter.-write", a);
};
cljs.core._write = function(a, b) {
  return null != a && null != a.cljs$core$IWriter$_write$arity$2 ? a.cljs$core$IWriter$_write$arity$2(a, b) : cljs$core$IWriter$_write$dyn_10125(a, b);
};
var cljs$core$IWriter$_flush$dyn_10126 = function(a) {
  var b = cljs.core._flush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._flush._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IWriter.-flush", a);
};
cljs.core._flush = function(a) {
  return null != a && null != a.cljs$core$IWriter$_flush$arity$1 ? a.cljs$core$IWriter$_flush$arity$1(a) : cljs$core$IWriter$_flush$dyn_10126(a);
};
cljs.core.IPrintWithWriter = function() {
};
var cljs$core$IPrintWithWriter$_pr_writer$dyn_10127 = function(a, b, c) {
  var d = cljs.core._pr_writer[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._pr_writer._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", a);
};
cljs.core._pr_writer = function(a, b, c) {
  return null != a && null != a.cljs$core$IPrintWithWriter$_pr_writer$arity$3 ? a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(a, b, c) : cljs$core$IPrintWithWriter$_pr_writer$dyn_10127(a, b, c);
};
cljs.core.IPending = function() {
};
var cljs$core$IPending$_realized_QMARK_$dyn_10128 = function(a) {
  var b = cljs.core._realized_QMARK_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._realized_QMARK_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IPending.-realized?", a);
};
cljs.core._realized_QMARK_ = function(a) {
  return null != a && null != a.cljs$core$IPending$_realized_QMARK_$arity$1 ? a.cljs$core$IPending$_realized_QMARK_$arity$1(a) : cljs$core$IPending$_realized_QMARK_$dyn_10128(a);
};
cljs.core.IWatchable = function() {
};
var cljs$core$IWatchable$_notify_watches$dyn_10129 = function(a, b, c) {
  var d = cljs.core._notify_watches[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._notify_watches._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-notify-watches", a);
};
cljs.core._notify_watches = function(a, b, c) {
  return null != a && null != a.cljs$core$IWatchable$_notify_watches$arity$3 ? a.cljs$core$IWatchable$_notify_watches$arity$3(a, b, c) : cljs$core$IWatchable$_notify_watches$dyn_10129(a, b, c);
};
var cljs$core$IWatchable$_add_watch$dyn_10130 = function(a, b, c) {
  var d = cljs.core._add_watch[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_watch._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IWatchable.-add-watch", a);
};
cljs.core._add_watch = function(a, b, c) {
  return null != a && null != a.cljs$core$IWatchable$_add_watch$arity$3 ? a.cljs$core$IWatchable$_add_watch$arity$3(a, b, c) : cljs$core$IWatchable$_add_watch$dyn_10130(a, b, c);
};
var cljs$core$IWatchable$_remove_watch$dyn_10131 = function(a, b) {
  var c = cljs.core._remove_watch[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_watch._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IWatchable.-remove-watch", a);
};
cljs.core._remove_watch = function(a, b) {
  return null != a && null != a.cljs$core$IWatchable$_remove_watch$arity$2 ? a.cljs$core$IWatchable$_remove_watch$arity$2(a, b) : cljs$core$IWatchable$_remove_watch$dyn_10131(a, b);
};
cljs.core.IEditableCollection = function() {
};
var cljs$core$IEditableCollection$_as_transient$dyn_10132 = function(a) {
  var b = cljs.core._as_transient[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._as_transient._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEditableCollection.-as-transient", a);
};
cljs.core._as_transient = function(a) {
  return null != a && null != a.cljs$core$IEditableCollection$_as_transient$arity$1 ? a.cljs$core$IEditableCollection$_as_transient$arity$1(a) : cljs$core$IEditableCollection$_as_transient$dyn_10132(a);
};
cljs.core.ITransientCollection = function() {
};
var cljs$core$ITransientCollection$_conj_BANG_$dyn_10133 = function(a, b) {
  var c = cljs.core._conj_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._conj_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-conj!", a);
};
cljs.core._conj_BANG_ = function(a, b) {
  return null != a && null != a.cljs$core$ITransientCollection$_conj_BANG_$arity$2 ? a.cljs$core$ITransientCollection$_conj_BANG_$arity$2(a, b) : cljs$core$ITransientCollection$_conj_BANG_$dyn_10133(a, b);
};
var cljs$core$ITransientCollection$_persistent_BANG_$dyn_10134 = function(a) {
  var b = cljs.core._persistent_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._persistent_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientCollection.-persistent!", a);
};
cljs.core._persistent_BANG_ = function(a) {
  return null != a && null != a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 ? a.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(a) : cljs$core$ITransientCollection$_persistent_BANG_$dyn_10134(a);
};
cljs.core.ITransientAssociative = function() {
};
var cljs$core$ITransientAssociative$_assoc_BANG_$dyn_10135 = function(a, b, c) {
  var d = cljs.core._assoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", a);
};
cljs.core._assoc_BANG_ = function(a, b, c) {
  return null != a && null != a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 ? a.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(a, b, c) : cljs$core$ITransientAssociative$_assoc_BANG_$dyn_10135(a, b, c);
};
cljs.core.ITransientMap = function() {
};
var cljs$core$ITransientMap$_dissoc_BANG_$dyn_10136 = function(a, b) {
  var c = cljs.core._dissoc_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._dissoc_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientMap.-dissoc!", a);
};
cljs.core._dissoc_BANG_ = function(a, b) {
  return null != a && null != a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 ? a.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(a, b) : cljs$core$ITransientMap$_dissoc_BANG_$dyn_10136(a, b);
};
cljs.core.ITransientVector = function() {
};
var cljs$core$ITransientVector$_assoc_n_BANG_$dyn_10137 = function(a, b, c) {
  var d = cljs.core._assoc_n_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._assoc_n_BANG_._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", a);
};
cljs.core._assoc_n_BANG_ = function(a, b, c) {
  return null != a && null != a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 ? a.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(a, b, c) : cljs$core$ITransientVector$_assoc_n_BANG_$dyn_10137(a, b, c);
};
var cljs$core$ITransientVector$_pop_BANG_$dyn_10138 = function(a) {
  var b = cljs.core._pop_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._pop_BANG_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("ITransientVector.-pop!", a);
};
cljs.core._pop_BANG_ = function(a) {
  return null != a && null != a.cljs$core$ITransientVector$_pop_BANG_$arity$1 ? a.cljs$core$ITransientVector$_pop_BANG_$arity$1(a) : cljs$core$ITransientVector$_pop_BANG_$dyn_10138(a);
};
cljs.core.ITransientSet = function() {
};
var cljs$core$ITransientSet$_disjoin_BANG_$dyn_10139 = function(a, b) {
  var c = cljs.core._disjoin_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._disjoin_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("ITransientSet.-disjoin!", a);
};
cljs.core._disjoin_BANG_ = function(a, b) {
  return null != a && null != a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 ? a.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(a, b) : cljs$core$ITransientSet$_disjoin_BANG_$dyn_10139(a, b);
};
cljs.core.IComparable = function() {
};
var cljs$core$IComparable$_compare$dyn_10140 = function(a, b) {
  var c = cljs.core._compare[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._compare._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IComparable.-compare", a);
};
cljs.core._compare = function(a, b) {
  return null != a && null != a.cljs$core$IComparable$_compare$arity$2 ? a.cljs$core$IComparable$_compare$arity$2(a, b) : cljs$core$IComparable$_compare$dyn_10140(a, b);
};
cljs.core.IChunk = function() {
};
var cljs$core$IChunk$_drop_first$dyn_10141 = function(a) {
  var b = cljs.core._drop_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._drop_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunk.-drop-first", a);
};
cljs.core._drop_first = function(a) {
  return null != a && null != a.cljs$core$IChunk$_drop_first$arity$1 ? a.cljs$core$IChunk$_drop_first$arity$1(a) : cljs$core$IChunk$_drop_first$dyn_10141(a);
};
cljs.core.IChunkedSeq = function() {
};
var cljs$core$IChunkedSeq$_chunked_first$dyn_10142 = function(a) {
  var b = cljs.core._chunked_first[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_first._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", a);
};
cljs.core._chunked_first = function(a) {
  return null != a && null != a.cljs$core$IChunkedSeq$_chunked_first$arity$1 ? a.cljs$core$IChunkedSeq$_chunked_first$arity$1(a) : cljs$core$IChunkedSeq$_chunked_first$dyn_10142(a);
};
var cljs$core$IChunkedSeq$_chunked_rest$dyn_10143 = function(a) {
  var b = cljs.core._chunked_rest[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_rest._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", a);
};
cljs.core._chunked_rest = function(a) {
  return null != a && null != a.cljs$core$IChunkedSeq$_chunked_rest$arity$1 ? a.cljs$core$IChunkedSeq$_chunked_rest$arity$1(a) : cljs$core$IChunkedSeq$_chunked_rest$dyn_10143(a);
};
cljs.core.IChunkedNext = function() {
};
var cljs$core$IChunkedNext$_chunked_next$dyn_10144 = function(a) {
  var b = cljs.core._chunked_next[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._chunked_next._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", a);
};
cljs.core._chunked_next = function(a) {
  return null != a && null != a.cljs$core$IChunkedNext$_chunked_next$arity$1 ? a.cljs$core$IChunkedNext$_chunked_next$arity$1(a) : cljs$core$IChunkedNext$_chunked_next$dyn_10144(a);
};
cljs.core.INamed = function() {
};
var cljs$core$INamed$_name$dyn_10145 = function(a) {
  var b = cljs.core._name[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._name._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-name", a);
};
cljs.core._name = function(a) {
  return null != a && null != a.cljs$core$INamed$_name$arity$1 ? a.cljs$core$INamed$_name$arity$1(a) : cljs$core$INamed$_name$dyn_10145(a);
};
var cljs$core$INamed$_namespace$dyn_10146 = function(a) {
  var b = cljs.core._namespace[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._namespace._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("INamed.-namespace", a);
};
cljs.core._namespace = function(a) {
  return null != a && null != a.cljs$core$INamed$_namespace$arity$1 ? a.cljs$core$INamed$_namespace$arity$1(a) : cljs$core$INamed$_namespace$dyn_10146(a);
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
var cljs$core$IReset$_reset_BANG_$dyn_10147 = function(a, b) {
  var c = cljs.core._reset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._reset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IReset.-reset!", a);
};
cljs.core._reset_BANG_ = function(a, b) {
  return null != a && null != a.cljs$core$IReset$_reset_BANG_$arity$2 ? a.cljs$core$IReset$_reset_BANG_$arity$2(a, b) : cljs$core$IReset$_reset_BANG_$dyn_10147(a, b);
};
cljs.core.ISwap = function() {
};
var cljs$core$ISwap$_swap_BANG_$dyn_10150 = function() {
  var a = null, b = function(f, g) {
    var h = cljs.core._swap_BANG_[goog.typeOf(null == f ? null : f)];
    if (null != h) {
      return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(f, g) : h.call(null, f, g);
    }
    h = cljs.core._swap_BANG_._;
    if (null != h) {
      return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(f, g) : h.call(null, f, g);
    }
    throw cljs.core.missing_protocol("ISwap.-swap!", f);
  }, c = function(f, g, h) {
    var k = cljs.core._swap_BANG_[goog.typeOf(null == f ? null : f)];
    if (null != k) {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(f, g, h) : k.call(null, f, g, h);
    }
    k = cljs.core._swap_BANG_._;
    if (null != k) {
      return k.cljs$core$IFn$_invoke$arity$3 ? k.cljs$core$IFn$_invoke$arity$3(f, g, h) : k.call(null, f, g, h);
    }
    throw cljs.core.missing_protocol("ISwap.-swap!", f);
  }, d = function(f, g, h, k) {
    var l = cljs.core._swap_BANG_[goog.typeOf(null == f ? null : f)];
    if (null != l) {
      return l.cljs$core$IFn$_invoke$arity$4 ? l.cljs$core$IFn$_invoke$arity$4(f, g, h, k) : l.call(null, f, g, h, k);
    }
    l = cljs.core._swap_BANG_._;
    if (null != l) {
      return l.cljs$core$IFn$_invoke$arity$4 ? l.cljs$core$IFn$_invoke$arity$4(f, g, h, k) : l.call(null, f, g, h, k);
    }
    throw cljs.core.missing_protocol("ISwap.-swap!", f);
  }, e = function(f, g, h, k, l) {
    var m = cljs.core._swap_BANG_[goog.typeOf(null == f ? null : f)];
    if (null != m) {
      return m.cljs$core$IFn$_invoke$arity$5 ? m.cljs$core$IFn$_invoke$arity$5(f, g, h, k, l) : m.call(null, f, g, h, k, l);
    }
    m = cljs.core._swap_BANG_._;
    if (null != m) {
      return m.cljs$core$IFn$_invoke$arity$5 ? m.cljs$core$IFn$_invoke$arity$5(f, g, h, k, l) : m.call(null, f, g, h, k, l);
    }
    throw cljs.core.missing_protocol("ISwap.-swap!", f);
  };
  a = function(f, g, h, k, l) {
    switch(arguments.length) {
      case 2:
        return b.call(this, f, g);
      case 3:
        return c.call(this, f, g, h);
      case 4:
        return d.call(this, f, g, h, k);
      case 5:
        return e.call(this, f, g, h, k, l);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  a.cljs$core$IFn$_invoke$arity$4 = d;
  a.cljs$core$IFn$_invoke$arity$5 = e;
  return a;
}();
cljs.core._swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$2 ? a.cljs$core$ISwap$_swap_BANG_$arity$2(a, b) : cljs$core$ISwap$_swap_BANG_$dyn_10150.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$3 ? a.cljs$core$ISwap$_swap_BANG_$arity$3(a, b, c) : cljs$core$ISwap$_swap_BANG_$dyn_10150.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$4 ? a.cljs$core$ISwap$_swap_BANG_$arity$4(a, b, c, d) : cljs$core$ISwap$_swap_BANG_$dyn_10150.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return null != a && null != a.cljs$core$ISwap$_swap_BANG_$arity$5 ? a.cljs$core$ISwap$_swap_BANG_$arity$5(a, b, c, d, e) : cljs$core$ISwap$_swap_BANG_$dyn_10150.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
var cljs$core$IVolatile$_vreset_BANG_$dyn_10153 = function(a, b) {
  var c = cljs.core._vreset_BANG_[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._vreset_BANG_._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IVolatile.-vreset!", a);
};
cljs.core._vreset_BANG_ = function(a, b) {
  return null != a && null != a.cljs$core$IVolatile$_vreset_BANG_$arity$2 ? a.cljs$core$IVolatile$_vreset_BANG_$arity$2(a, b) : cljs$core$IVolatile$_vreset_BANG_$dyn_10153(a, b);
};
cljs.core.IIterable = function() {
};
var cljs$core$IIterable$_iterator$dyn_10154 = function(a) {
  var b = cljs.core._iterator[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._iterator._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IIterable.-iterator", a);
};
cljs.core._iterator = function(a) {
  return null != a && null != a.cljs$core$IIterable$_iterator$arity$1 ? a.cljs$core$IIterable$_iterator$arity$1(a) : cljs$core$IIterable$_iterator$dyn_10154(a);
};
cljs.core.StringBufferWriter = function(a) {
  this.sb = a;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(a, b) {
  return this.sb.append(b);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(a) {
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = !0;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function(a) {
  return new cljs.core.StringBufferWriter(a);
};
cljs.core.pr_str_STAR_ = function(a) {
  var b = new goog.string.StringBuffer(), c = new cljs.core.StringBufferWriter(b);
  a.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, c, cljs.core.pr_opts());
  c.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(b);
};
cljs.core.int_rotate_left = function(a, b) {
  return a << b | a >>> -b;
};
cljs.core.imul = "undefined" !== typeof Math && "undefined" !== typeof Math.imul ? function(a, b) {
  return Math.imul(a, b);
} : function(a, b) {
  var c = a & 65535, d = b & 65535;
  return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;
};
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = -862048943;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function(a) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(a | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function(a, b) {
  return cljs.core.imul(cljs.core.int_rotate_left((a | 0) ^ (b | 0), 13), 5) + -430675100 | 0;
};
cljs.core.m3_fmix = function(a, b) {
  a = (a | 0) ^ b;
  a = cljs.core.imul(a ^ a >>> 16, -2048144789);
  a = cljs.core.imul(a ^ a >>> 13, -1028477387);
  return a ^ a >>> 16;
};
cljs.core.m3_hash_int = function(a) {
  if (0 === a) {
    return a;
  }
  a = cljs.core.m3_mix_K1(a);
  a = cljs.core.m3_mix_H1(cljs.core.m3_seed, a);
  return cljs.core.m3_fmix(a, 4);
};
cljs.core.m3_hash_unencoded_chars = function(a) {
  a: {
    var b = 1;
    for (var c = cljs.core.m3_seed;;) {
      if (b < a.length) {
        var d = b + 2;
        c = cljs.core.m3_mix_H1(c, cljs.core.m3_mix_K1(a.charCodeAt(b - 1) | a.charCodeAt(b) << 16));
        b = d;
      } else {
        b = c;
        break a;
      }
    }
  }
  b = 1 === (a.length & 1) ? b ^ cljs.core.m3_mix_K1(a.charCodeAt(a.length - 1)) : b;
  return cljs.core.m3_fmix(b, cljs.core.imul(2, a.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function(a) {
  if (null != a) {
    var b = a.length;
    if (0 < b) {
      for (var c = 0, d = 0;;) {
        if (c < b) {
          var e = c + 1;
          d = cljs.core.imul(31, d) + a.charCodeAt(c);
          c = e;
        } else {
          return d;
        }
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function(a) {
  var b = cljs.core.hash_string_STAR_(a);
  cljs.core.goog$module$goog$object.set.call(null, cljs.core.string_hash_cache, a, b);
  cljs.core.string_hash_cache_count += 1;
  return b;
};
cljs.core.hash_string = function(a) {
  255 < cljs.core.string_hash_cache_count && (cljs.core.string_hash_cache = {}, cljs.core.string_hash_cache_count = 0);
  if (null == a) {
    return 0;
  }
  var b = cljs.core.string_hash_cache[a];
  return "number" === typeof b ? b : cljs.core.add_to_string_hash_cache(a);
};
cljs.core.hash = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IHash$)) {
    return a.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  }
  if ("number" === typeof a) {
    if (isFinite(a)) {
      return Math.floor(a) % 2147483647;
    }
    switch(a) {
      case Infinity:
        return 2146435072;
      case -Infinity:
        return -1048576;
      default:
        return 2146959360;
    }
  } else {
    return !0 === a ? 1231 : !1 === a ? 1237 : "string" === typeof a ? cljs.core.m3_hash_int(cljs.core.hash_string(a)) : a instanceof Date ? a.valueOf() ^ 0 : null == a ? 0 : cljs.core._hash(a) ^ 0;
  }
};
cljs.core.hash_combine = function(a, b) {
  return a ^ b + 2654435769 + (a << 6) + (a >> 2);
};
cljs.core.instance_QMARK_ = function(a, b) {
  return b instanceof a;
};
cljs.core.symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function(a) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(a.name), cljs.core.hash_string(a.ns));
};
cljs.core.compare_symbols = function(a, b) {
  if (a.str === b.str) {
    return 0;
  }
  var c = cljs.core, d = c.truth_, e = cljs.core.not(a.ns);
  if (d.call(c, e ? b.ns : e)) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    c = cljs.core.goog$module$goog$array.defaultCompare.call(null, a.ns, b.ns);
    return 0 === c ? cljs.core.goog$module$goog$array.defaultCompare.call(null, a.name, b.name) : c;
  }
  return cljs.core.goog$module$goog$array.defaultCompare.call(null, a.name, b.name);
};
cljs.core.Symbol = function(a, b, c, d, e) {
  this.ns = a;
  this.name = b;
  this.str = c;
  this._hash = d;
  this._meta = e;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  return this.str;
};
cljs.core.Symbol.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Symbol ? this.str === b.str : !1;
};
cljs.core.Symbol.prototype.call = function() {
  var a = null, b = function(d, e) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(e, this);
  }, c = function(d, e, f) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(e, this, f);
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Symbol.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Symbol(this.ns, this.name, this.str, this._hash, b);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_symbol(this);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, this.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = !0;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function(a, b, c, d, e) {
  return new cljs.core.Symbol(a, b, c, d, e);
};
cljs.core.var_QMARK_ = function(a) {
  return a instanceof cljs.core.Var;
};
cljs.core.symbol = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a instanceof cljs.core.Symbol) {
      return a;
    }
    if ("string" === typeof a) {
      var b = a.indexOf("/");
      return 1 > b ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, a) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(a.substring(0, b), a.substring(b + 1, a.length));
    }
    if (cljs.core.var_QMARK_(a)) {
      return a.sym;
    }
    if (a instanceof cljs.core.Keyword) {
      a = a.fqn;
    } else {
      throw Error("no conversion to symbol");
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = null != a ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("") : b;
  return new cljs.core.Symbol(a, b, c, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(a, b, c) {
  this.val = a;
  this.sym = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  return (this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.Var(this.val, this.sym, b);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Var ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.sym, b.sym) : !1;
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_symbol(this.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var a = null, b = function(q) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$0 ? q.cljs$core$IFn$_invoke$arity$0() : q.call(null);
  }, c = function(q, t) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$1 ? q.cljs$core$IFn$_invoke$arity$1(t) : q.call(null, t);
  }, d = function(q, t, v) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$2 ? q.cljs$core$IFn$_invoke$arity$2(t, v) : q.call(null, t, v);
  }, e = function(q, t, v, w) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$3 ? q.cljs$core$IFn$_invoke$arity$3(t, v, w) : q.call(null, t, v, w);
  }, f = function(q, t, v, w, x) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$4 ? q.cljs$core$IFn$_invoke$arity$4(t, v, w, x) : q.call(null, t, v, w, x);
  }, g = function(q, t, v, w, x, y) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$5 ? q.cljs$core$IFn$_invoke$arity$5(t, v, w, x, y) : q.call(null, t, v, w, x, y);
  }, h = function(q, t, v, w, x, y, A) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$6 ? q.cljs$core$IFn$_invoke$arity$6(t, v, w, x, y, A) : q.call(null, t, v, w, x, y, A);
  }, k = function(q, t, v, w, x, y, A, B) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$7 ? q.cljs$core$IFn$_invoke$arity$7(t, v, w, x, y, A, B) : q.call(null, t, v, w, x, y, A, B);
  }, l = function(q, t, v, w, x, y, A, B, C) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$8 ? q.cljs$core$IFn$_invoke$arity$8(t, v, w, x, y, A, B, C) : q.call(null, t, v, w, x, y, A, B, C);
  }, m = function(q, t, v, w, x, y, A, B, C, E) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$9 ? q.cljs$core$IFn$_invoke$arity$9(t, v, w, x, y, A, B, C, E) : q.call(null, t, v, w, x, y, A, B, C, E);
  }, n = function(q, t, v, w, x, y, A, B, C, E, F) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$10 ? q.cljs$core$IFn$_invoke$arity$10(t, v, w, x, y, A, B, C, E, F) : q.call(null, t, v, w, x, y, A, B, C, E, F);
  }, p = function(q, t, v, w, x, y, A, B, C, E, F, G) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$11 ? q.cljs$core$IFn$_invoke$arity$11(t, v, w, x, y, A, B, C, E, F, G) : q.call(null, t, v, w, x, y, A, B, C, E, F, G);
  }, r = function(q, t, v, w, x, y, A, B, C, E, F, G, I) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$12 ? q.cljs$core$IFn$_invoke$arity$12(t, v, w, x, y, A, B, C, E, F, G, I) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I);
  }, u = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$13 ? q.cljs$core$IFn$_invoke$arity$13(t, v, w, x, y, A, B, C, E, F, G, I, J) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J);
  }, z = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$14 ? q.cljs$core$IFn$_invoke$arity$14(t, v, w, x, y, A, B, C, E, F, G, I, J, K) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
  }, D = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$15 ? q.cljs$core$IFn$_invoke$arity$15(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
  }, H = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$16 ? q.cljs$core$IFn$_invoke$arity$16(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
  }, L = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$17 ? q.cljs$core$IFn$_invoke$arity$17(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
  }, P = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$18 ? q.cljs$core$IFn$_invoke$arity$18(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
  }, S = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$19 ? q.cljs$core$IFn$_invoke$arity$19(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
  }, U = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) {
    q = this;
    q = q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null);
    return q.cljs$core$IFn$_invoke$arity$20 ? q.cljs$core$IFn$_invoke$arity$20(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
  }, V = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    q = this;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(q.val.cljs$core$IFn$_invoke$arity$0 ? q.val.cljs$core$IFn$_invoke$arity$0() : q.val.call(null), t, v, w, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W], 0));
  };
  a = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    switch(arguments.length) {
      case 1:
        return b.call(this, q);
      case 2:
        return c.call(this, q, t);
      case 3:
        return d.call(this, q, t, v);
      case 4:
        return e.call(this, q, t, v, w);
      case 5:
        return f.call(this, q, t, v, w, x);
      case 6:
        return g.call(this, q, t, v, w, x, y);
      case 7:
        return h.call(this, q, t, v, w, x, y, A);
      case 8:
        return k.call(this, q, t, v, w, x, y, A, B);
      case 9:
        return l.call(this, q, t, v, w, x, y, A, B, C);
      case 10:
        return m.call(this, q, t, v, w, x, y, A, B, C, E);
      case 11:
        return n.call(this, q, t, v, w, x, y, A, B, C, E, F);
      case 12:
        return p.call(this, q, t, v, w, x, y, A, B, C, E, F, G);
      case 13:
        return r.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I);
      case 14:
        return u.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
      case 15:
        return z.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
      case 16:
        return D.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
      case 17:
        return H.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
      case 18:
        return L.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
      case 19:
        return P.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
      case 20:
        return S.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
      case 21:
        return U.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
      case 22:
        return V.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = r;
  a.cljs$core$IFn$_invoke$arity$14 = u;
  a.cljs$core$IFn$_invoke$arity$15 = z;
  a.cljs$core$IFn$_invoke$arity$16 = D;
  a.cljs$core$IFn$_invoke$arity$17 = H;
  a.cljs$core$IFn$_invoke$arity$18 = L;
  a.cljs$core$IFn$_invoke$arity$19 = P;
  a.cljs$core$IFn$_invoke$arity$20 = S;
  a.cljs$core$IFn$_invoke$arity$21 = U;
  a.cljs$core$IFn$_invoke$arity$22 = V;
  return a;
}();
cljs.core.Var.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return e.cljs$core$IFn$_invoke$arity$4 ? e.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : e.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : f.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return g.cljs$core$IFn$_invoke$arity$6 ? g.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : g.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return h.cljs$core$IFn$_invoke$arity$7 ? h.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : h.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return k.cljs$core$IFn$_invoke$arity$8 ? k.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : k.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return l.cljs$core$IFn$_invoke$arity$9 ? l.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : l.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return m.cljs$core$IFn$_invoke$arity$10 ? m.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : m.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return n.cljs$core$IFn$_invoke$arity$11 ? n.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : n.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return p.cljs$core$IFn$_invoke$arity$12 ? p.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : p.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var r = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return r.cljs$core$IFn$_invoke$arity$13 ? r.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r) {
  var u = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return u.cljs$core$IFn$_invoke$arity$14 ? u.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) {
  var z = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return z.cljs$core$IFn$_invoke$arity$15 ? z.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) {
  var D = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return D.cljs$core$IFn$_invoke$arity$16 ? D.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) : D.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) {
  var H = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return H.cljs$core$IFn$_invoke$arity$17 ? H.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : H.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) {
  var L = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return L.cljs$core$IFn$_invoke$arity$18 ? L.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : L.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) {
  var P = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return P.cljs$core$IFn$_invoke$arity$19 ? P.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : P.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) {
  var S = this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null);
  return S.cljs$core$IFn$_invoke$arity$20 ? S.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : S.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.val.cljs$core$IFn$_invoke$arity$0 ? this.val.cljs$core$IFn$_invoke$arity$0() : this.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = !0;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Var");
};
cljs.core.__GT_Var = function(a, b, c) {
  return new cljs.core.Var(a, b, c);
};
cljs.core.iterable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIterable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, a);
};
cljs.core.js_iterable_QMARK_ = function(a) {
  return null != a && null != a[cljs.core.ITER_SYMBOL];
};
cljs.core.clone = function(a) {
  return cljs.core._clone(a);
};
cljs.core.cloneable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICloneable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, a);
};
cljs.core.seq = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$)) {
    return a.cljs$core$ISeqable$_seq$arity$1(null);
  }
  if (cljs.core.array_QMARK_(a) || "string" === typeof a) {
    return 0 === a.length ? null : new cljs.core.IndexedSeq(a, 0, null);
  }
  if (cljs.core.js_iterable_QMARK_(a)) {
    return cljs.core.es6_iterator_seq(cljs.core.goog$module$goog$object.get.call(null, a, cljs.core.ITER_SYMBOL).call(a));
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a)) {
    return cljs.core._seq(a);
  }
  throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " is not ISeqable"].join(""));
};
cljs.core.first = function(a) {
  if (null == a) {
    return null;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$)) {
    return a.cljs$core$ISeq$_first$arity$1(null);
  }
  a = cljs.core.seq(a);
  return null == a ? null : cljs.core._first(a);
};
cljs.core.rest = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? a.cljs$core$ISeq$_rest$arity$1(null) : (a = cljs.core.seq(a)) ? a.cljs$core$ISeq$_rest$arity$1(null) : cljs.core.List.EMPTY : cljs.core.List.EMPTY;
};
cljs.core.next = function(a) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INext$) ? a.cljs$core$INext$_next$arity$1(null) : cljs.core.seq(cljs.core.rest(a));
};
cljs.core._EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null == b : a === b || cljs.core._equiv(a, b);
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(c));
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(a) {
  this.s = a;
};
cljs.core.ES6Iterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:a, done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = !0;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function(a) {
  return new cljs.core.ES6Iterator(a);
};
cljs.core.es6_iterator = function(a) {
  return new cljs.core.ES6Iterator(cljs.core.seq(a));
};
cljs.core.ES6IteratorSeq = function(a, b, c) {
  this.value = a;
  this.iter = b;
  this._rest = c;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._rest && (this._rest = cljs.core.es6_iterator_seq(this.iter));
  return this._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = !0;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function(a, b, c) {
  return new cljs.core.ES6IteratorSeq(a, b, c);
};
cljs.core.es6_iterator_seq = function(a) {
  var b = a.next();
  return cljs.core.truth_(b.done) ? null : new cljs.core.ES6IteratorSeq(b.value, a, null);
};
cljs.core.mix_collection_hash = function(a, b) {
  var c = cljs.core.m3_seed;
  a = cljs.core.m3_mix_K1(a);
  c = cljs.core.m3_mix_H1(c, a);
  return cljs.core.m3_fmix(c, b);
};
cljs.core.hash_ordered_coll = function(a) {
  var b = 0, c = 1;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = cljs.core.imul(31, c) + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function(a) {
  var b = 0, c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b += 1, c = c + cljs.core.hash(cljs.core.first(a)) | 0, a = cljs.core.next(a);
    } else {
      return cljs.core.mix_collection_hash(c, b);
    }
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = !0;
cljs.core._count["null"] = function(a) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof Date && this.valueOf() === b.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof Date) {
    return cljs.core.goog$module$goog$array.defaultCompare.call(null, this.valueOf(), b.valueOf());
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Inst = function() {
};
var cljs$core$Inst$inst_ms_STAR_$dyn_10250 = function(a) {
  var b = cljs.core.inst_ms_STAR_[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core.inst_ms_STAR_._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("Inst.inst-ms*", a);
};
cljs.core.inst_ms_STAR_ = function(a) {
  return null != a && null != a.cljs$core$Inst$inst_ms_STAR_$arity$1 ? a.cljs$core$Inst$inst_ms_STAR_$arity$1(a) : cljs$core$Inst$inst_ms_STAR_$dyn_10250(a);
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(a) {
  return this.getTime();
};
cljs.core.inst_ms = function(a) {
  return cljs.core.inst_ms_STAR_(a);
};
cljs.core.inst_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Inst$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Inst, a);
};
cljs.core.IEquiv.number = !0;
cljs.core._equiv.number = function(a, b) {
  return a === b;
};
cljs.core.Fn["function"] = !0;
cljs.core.IMeta["function"] = !0;
cljs.core._meta["function"] = function(a) {
  return null;
};
cljs.core.IHash._ = !0;
cljs.core._hash._ = function(a) {
  return goog.getUid(a);
};
cljs.core.inc = function(a) {
  return a + 1;
};
cljs.core.Reduced = function(a) {
  this.val = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = !0;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced = function(a) {
  return new cljs.core.Reduced(a);
};
cljs.core.reduced_QMARK_ = function(a) {
  return a instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? a : cljs.core.reduced(a);
};
cljs.core.unreduced = function(a) {
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.deref = function(a) {
  return cljs.core._deref(a);
};
cljs.core.ci_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.cljs$core$ICounted$_count$arity$1(null);
  if (0 === c) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = a.cljs$core$IIndexed$_nth$arity$2(null, 0), e = 1;;) {
    if (e < c) {
      var f = a.cljs$core$IIndexed$_nth$arity$2(null, e);
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = a.cljs$core$ICounted$_count$arity$1(null), e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = a.cljs$core$IIndexed$_nth$arity$2(null, c);
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = a.length;
  if (0 === a.length) {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
  for (var d = a[0], e = 1;;) {
    if (e < c) {
      var f = a[e];
      d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, f) : b.call(null, d, f);
      if (cljs.core.reduced_QMARK_(d)) {
        return cljs.core.deref(d);
      }
      e += 1;
    } else {
      return d;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = a.length, e = c;
  for (c = 0;;) {
    if (c < d) {
      var f = a[c];
      e = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, f) : b.call(null, e, f);
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      c += 1;
    } else {
      return e;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (var e = a.length;;) {
    if (d < e) {
      var f = a[d];
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, f) : b.call(null, c, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
    } else {
      return c;
    }
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, a);
};
cljs.core.indexed_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a);
};
cljs.core._indexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(a, b, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (c >= d) {
    return -1;
  }
  !(0 < c) && 0 > c && (c += d, c = 0 > c ? 0 : c);
  for (;;) {
    if (c < d) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      c += 1;
    } else {
      return -1;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.count(a);
  if (0 === d) {
    return -1;
  }
  0 < c ? (--d, c = d < c ? d : c) : c = 0 > c ? d + c : c;
  for (;;) {
    if (0 <= c) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), b)) {
        return c;
      }
      --c;
    } else {
      return -1;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = !0;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function(a, b) {
  return new cljs.core.IndexedSeqIterator(a, b);
};
cljs.core.IndexedSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.IndexedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  a = b + this.i;
  if (0 <= a && a < this.arr.length) {
    return this.arr[a];
  }
  throw Error("Index out of bounds");
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  a = b + this.i;
  return 0 <= a && a < this.arr.length ? this.arr[a] : c;
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.IndexedSeqIterator(this.arr, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.IndexedSeq(this.arr, this.i, this.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  a = this.arr.length - this.i;
  return 0 > a ? 0 : a;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  a = this.cljs$core$ICounted$_count$arity$1(null);
  return 0 < a ? new cljs.core.RSeq(this, a - 1, null) : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.i], this.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.arr[this.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i + 1 < this.arr.length ? new cljs.core.IndexedSeq(this.arr, this.i + 1, null) : cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this.i < this.arr.length ? this : null;
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.IndexedSeq(this.arr, this.i, b);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = !0;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function(a, b, c) {
  return new cljs.core.IndexedSeq(a, b, c);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.prim_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b < a.length ? new cljs.core.IndexedSeq(a, b, null) : null;
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(a, b, c) {
  this.ci = a;
  this.i = b;
  this.meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.RSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.RSeq(this.ci, this.i, this.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : null;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.ci, this.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 0 < this.i ? new cljs.core.RSeq(this.ci, this.i - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.RSeq(this.ci, this.i, b);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = !0;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function(a, b, c) {
  return new cljs.core.RSeq(a, b, c);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.second = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.ffirst = function(a) {
  return cljs.core.first(cljs.core.first(a));
};
cljs.core.nfirst = function(a) {
  return cljs.core.next(cljs.core.first(a));
};
cljs.core.fnext = function(a) {
  return cljs.core.first(cljs.core.next(a));
};
cljs.core.nnext = function(a) {
  return cljs.core.next(cljs.core.next(a));
};
cljs.core.last = function(a) {
  for (;;) {
    var b = cljs.core.next(a);
    if (null != b) {
      a = b;
    } else {
      return cljs.core.first(a);
    }
  }
};
cljs.core.IEquiv._ = !0;
cljs.core._equiv._ = function(a, b) {
  return a === b;
};
cljs.core.conj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? cljs.core._conj(a, b) : new cljs.core.List(null, b, null, 1, null);
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (cljs.core.truth_(c)) {
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b), b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, b);
    }
  }
};
cljs.core.conj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function(a) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEmptyableCollection$) ? a.cljs$core$IEmptyableCollection$_empty$arity$1(null) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEmptyableCollection$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, 
  a)) ? cljs.core._empty(a) : null;
};
cljs.core.accumulating_seq_count = function(a) {
  a = cljs.core.seq(a);
  for (var b = 0;;) {
    if (cljs.core.counted_QMARK_(a)) {
      return b + cljs.core._count(a);
    }
    a = cljs.core.next(a);
    b += 1;
  }
};
cljs.core.count = function(a) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICounted$) ? a.cljs$core$ICounted$_count$arity$1(null) : cljs.core.array_QMARK_(a) ? a.length : "string" === typeof a ? a.length : null != a && (a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$) ? cljs.core.accumulating_seq_count(a) : cljs.core._count(a) : 0;
};
cljs.core.linear_traversal_nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (null == a) {
      throw Error("Index out of bounds");
    }
    if (0 === b) {
      if (cljs.core.seq(a)) {
        return cljs.core.first(a);
      }
      throw Error("Index out of bounds");
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      throw Error("Index out of bounds");
    }
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return c;
    }
    if (0 === b) {
      return cljs.core.seq(a) ? cljs.core.first(a) : c;
    }
    if (cljs.core.indexed_QMARK_(a)) {
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
    }
    if (cljs.core.seq(a)) {
      a = cljs.core.next(a), --b;
    } else {
      return c;
    }
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number");
  }
  if (null == a) {
    return a;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$2(null, b);
  }
  if (cljs.core.array_QMARK_(a)) {
    if (-1 < b && b < a.length) {
      return a[b | 0];
    }
    throw Error("Index out of bounds");
  }
  if ("string" === typeof a) {
    if (-1 < b && b < a.length) {
      return a.charAt(b | 0);
    }
    throw Error("Index out of bounds");
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) || null != a && (a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$)) {
    if (0 > b) {
      throw Error("Index out of bounds");
    }
    return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(a, b);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if ("number" !== typeof b) {
    throw Error("Index argument to nth must be a number.");
  }
  if (null == a) {
    return c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IIndexed$)) {
    return a.cljs$core$IIndexed$_nth$arity$3(null, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return -1 < b && b < a.length ? a[b | 0] : c;
  }
  if ("string" === typeof a) {
    return -1 < b && b < a.length ? a.charAt(b | 0) : c;
  }
  if (null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) || null != a && (a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$)) {
    return 0 > b ? c : cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, a)) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(a, b, c);
  }
  throw Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(a)))].join(""));
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function(a, b) {
  for (var c = a;;) {
    if (a = 0 < b && cljs.core.seq(c)) {
      --b, c = a = cljs.core.rest(a);
    } else {
      return c;
    }
  }
};
cljs.core.get = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$2(null, b) : cljs.core.array_QMARK_(a) ? null != b && b < a.length ? a[b | 0] : null : "string" === typeof a ? null != b && -1 < b && b < a.length ? a.charAt(b | 0) : null : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(a, b) : null;
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ILookup$) ? a.cljs$core$ILookup$_lookup$arity$3(null, b, c) : cljs.core.array_QMARK_(a) ? null != b && -1 < b && b < a.length ? a[b | 0] : c : "string" === typeof a ? null != b && -1 < b && b < a.length ? a.charAt(b | 0) : c : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, a) ? cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(a, b, c) : c : c;
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != a && (a.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IAssociative$) ? a.cljs$core$IAssociative$_assoc$arity$3(null, b, c) : null != a ? cljs.core._assoc(a, b, c) : cljs.core.PersistentArrayMap.createAsIfByAssoc([b, c]);
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._dissoc(a, b);
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function(a) {
  var b = "function" === typeof a;
  return b ? b : null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$Fn$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.Fn, a);
};
cljs.core.MetaFn = function(a, b) {
  this.afn = a;
  this.meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.core.MetaFn(this.afn, b);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var a = null, b = function(q) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$0 ? q.afn.cljs$core$IFn$_invoke$arity$0() : q.afn.call(null);
  }, c = function(q, t) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$1 ? q.afn.cljs$core$IFn$_invoke$arity$1(t) : q.afn.call(null, t);
  }, d = function(q, t, v) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$2 ? q.afn.cljs$core$IFn$_invoke$arity$2(t, v) : q.afn.call(null, t, v);
  }, e = function(q, t, v, w) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$3 ? q.afn.cljs$core$IFn$_invoke$arity$3(t, v, w) : q.afn.call(null, t, v, w);
  }, f = function(q, t, v, w, x) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$4 ? q.afn.cljs$core$IFn$_invoke$arity$4(t, v, w, x) : q.afn.call(null, t, v, w, x);
  }, g = function(q, t, v, w, x, y) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$5 ? q.afn.cljs$core$IFn$_invoke$arity$5(t, v, w, x, y) : q.afn.call(null, t, v, w, x, y);
  }, h = function(q, t, v, w, x, y, A) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$6 ? q.afn.cljs$core$IFn$_invoke$arity$6(t, v, w, x, y, A) : q.afn.call(null, t, v, w, x, y, A);
  }, k = function(q, t, v, w, x, y, A, B) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$7 ? q.afn.cljs$core$IFn$_invoke$arity$7(t, v, w, x, y, A, B) : q.afn.call(null, t, v, w, x, y, A, B);
  }, l = function(q, t, v, w, x, y, A, B, C) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$8 ? q.afn.cljs$core$IFn$_invoke$arity$8(t, v, w, x, y, A, B, C) : q.afn.call(null, t, v, w, x, y, A, B, C);
  }, m = function(q, t, v, w, x, y, A, B, C, E) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$9 ? q.afn.cljs$core$IFn$_invoke$arity$9(t, v, w, x, y, A, B, C, E) : q.afn.call(null, t, v, w, x, y, A, B, C, E);
  }, n = function(q, t, v, w, x, y, A, B, C, E, F) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$10 ? q.afn.cljs$core$IFn$_invoke$arity$10(t, v, w, x, y, A, B, C, E, F) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F);
  }, p = function(q, t, v, w, x, y, A, B, C, E, F, G) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$11 ? q.afn.cljs$core$IFn$_invoke$arity$11(t, v, w, x, y, A, B, C, E, F, G) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G);
  }, r = function(q, t, v, w, x, y, A, B, C, E, F, G, I) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$12 ? q.afn.cljs$core$IFn$_invoke$arity$12(t, v, w, x, y, A, B, C, E, F, G, I) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I);
  }, u = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$13 ? q.afn.cljs$core$IFn$_invoke$arity$13(t, v, w, x, y, A, B, C, E, F, G, I, J) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J);
  }, z = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$14 ? q.afn.cljs$core$IFn$_invoke$arity$14(t, v, w, x, y, A, B, C, E, F, G, I, J, K) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
  }, D = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$15 ? q.afn.cljs$core$IFn$_invoke$arity$15(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
  }, H = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$16 ? q.afn.cljs$core$IFn$_invoke$arity$16(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
  }, L = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$17 ? q.afn.cljs$core$IFn$_invoke$arity$17(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
  }, P = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$18 ? q.afn.cljs$core$IFn$_invoke$arity$18(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
  }, S = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$19 ? q.afn.cljs$core$IFn$_invoke$arity$19(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
  }, U = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) {
    q = this;
    return q.afn.cljs$core$IFn$_invoke$arity$20 ? q.afn.cljs$core$IFn$_invoke$arity$20(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : q.afn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
  }, V = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, t, v, w, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W], 0));
  };
  a = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    switch(arguments.length) {
      case 1:
        return b.call(this, q);
      case 2:
        return c.call(this, q, t);
      case 3:
        return d.call(this, q, t, v);
      case 4:
        return e.call(this, q, t, v, w);
      case 5:
        return f.call(this, q, t, v, w, x);
      case 6:
        return g.call(this, q, t, v, w, x, y);
      case 7:
        return h.call(this, q, t, v, w, x, y, A);
      case 8:
        return k.call(this, q, t, v, w, x, y, A, B);
      case 9:
        return l.call(this, q, t, v, w, x, y, A, B, C);
      case 10:
        return m.call(this, q, t, v, w, x, y, A, B, C, E);
      case 11:
        return n.call(this, q, t, v, w, x, y, A, B, C, E, F);
      case 12:
        return p.call(this, q, t, v, w, x, y, A, B, C, E, F, G);
      case 13:
        return r.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I);
      case 14:
        return u.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
      case 15:
        return z.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
      case 16:
        return D.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
      case 17:
        return H.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
      case 18:
        return L.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
      case 19:
        return P.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
      case 20:
        return S.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
      case 21:
        return U.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
      case 22:
        return V.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = r;
  a.cljs$core$IFn$_invoke$arity$14 = u;
  a.cljs$core$IFn$_invoke$arity$15 = z;
  a.cljs$core$IFn$_invoke$arity$16 = D;
  a.cljs$core$IFn$_invoke$arity$17 = H;
  a.cljs$core$IFn$_invoke$arity$18 = L;
  a.cljs$core$IFn$_invoke$arity$19 = P;
  a.cljs$core$IFn$_invoke$arity$20 = S;
  a.cljs$core$IFn$_invoke$arity$21 = U;
  a.cljs$core$IFn$_invoke$arity$22 = V;
  return a;
}();
cljs.core.MetaFn.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  return this.afn.cljs$core$IFn$_invoke$arity$0 ? this.afn.cljs$core$IFn$_invoke$arity$0() : this.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.afn.cljs$core$IFn$_invoke$arity$1 ? this.afn.cljs$core$IFn$_invoke$arity$1(a) : this.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.afn.cljs$core$IFn$_invoke$arity$2 ? this.afn.cljs$core$IFn$_invoke$arity$2(a, b) : this.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return this.afn.cljs$core$IFn$_invoke$arity$3 ? this.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return this.afn.cljs$core$IFn$_invoke$arity$4 ? this.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return this.afn.cljs$core$IFn$_invoke$arity$5 ? this.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  return this.afn.cljs$core$IFn$_invoke$arity$6 ? this.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  return this.afn.cljs$core$IFn$_invoke$arity$7 ? this.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  return this.afn.cljs$core$IFn$_invoke$arity$8 ? this.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  return this.afn.cljs$core$IFn$_invoke$arity$9 ? this.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.afn.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  return this.afn.cljs$core$IFn$_invoke$arity$10 ? this.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  return this.afn.cljs$core$IFn$_invoke$arity$11 ? this.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  return this.afn.cljs$core$IFn$_invoke$arity$12 ? this.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  return this.afn.cljs$core$IFn$_invoke$arity$13 ? this.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r) {
  return this.afn.cljs$core$IFn$_invoke$arity$14 ? this.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) {
  return this.afn.cljs$core$IFn$_invoke$arity$15 ? this.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) {
  return this.afn.cljs$core$IFn$_invoke$arity$16 ? this.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) {
  return this.afn.cljs$core$IFn$_invoke$arity$17 ? this.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) {
  return this.afn.cljs$core$IFn$_invoke$arity$18 ? this.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) {
  return this.afn.cljs$core$IFn$_invoke$arity$19 ? this.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) {
  return this.afn.cljs$core$IFn$_invoke$arity$20 ? this.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : this.afn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = !0;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function(a, b) {
  return new cljs.core.MetaFn(a, b);
};
cljs.core.with_meta = function(a, b) {
  return "function" === typeof a ? new cljs.core.MetaFn(a, b) : null == a ? null : cljs.core._with_meta(a, b);
};
cljs.core.meta = function(a) {
  var b = null != a;
  return (b ? null != a ? a.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMeta$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, a) : b) ? cljs.core._meta(a) : null;
};
cljs.core.peek = function(a) {
  return null == a ? null : cljs.core._peek(a);
};
cljs.core.pop = function(a) {
  return null == a ? null : cljs.core._pop(a);
};
cljs.core.disj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == a ? null : cljs.core._disjoin(a, b);
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (null == a) {
      return null;
    }
    a = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(a, b);
    if (cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function(a) {
  return null == a || cljs.core.not(cljs.core.seq(a));
};
cljs.core.coll_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ICollection$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, a);
};
cljs.core.set_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISet$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISet, a);
};
cljs.core.associative_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IAssociative$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a);
};
cljs.core.ifind_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFind$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFind, a);
};
cljs.core.sequential_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISequential$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, a);
};
cljs.core.sorted_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISorted$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, a);
};
cljs.core.reduceable_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReduce$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, a);
};
cljs.core.map_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMap$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IMap, a);
};
cljs.core.record_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IRecord$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, a);
};
cljs.core.vector_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IVector$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IVector, a);
};
cljs.core.chunked_seq_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedSeq$ ? !0 : !1 : !1;
};
cljs.core.js_obj = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.goog$module$goog$object.create, a);
};
cljs.core.js_obj.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function(a) {
  return cljs.core.goog$module$goog$object.getKeys.call(null, a);
};
cljs.core.js_delete = function(a, b) {
  return delete a[b];
};
cljs.core.array_copy = function(a, b, c, d, e) {
  for (;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    d += 1;
    --e;
    b += 1;
  }
};
cljs.core.array_copy_downward = function(a, b, c, d, e) {
  b += e - 1;
  for (d += e - 1;;) {
    if (0 === e) {
      return c;
    }
    c[d] = a[b];
    --d;
    --e;
    --b;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function(a) {
  return !1 === a;
};
cljs.core.true_QMARK_ = function(a) {
  return !0 === a;
};
cljs.core.boolean_QMARK_ = function(a) {
  return !0 === a || !1 === a;
};
cljs.core.undefined_QMARK_ = function(a) {
  return void 0 === a;
};
cljs.core.seq_QMARK_ = function(a) {
  return null == a ? !1 : null != a ? a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, a);
};
cljs.core.seqable_QMARK_ = function(a) {
  var b = null == a;
  return b ? b : (b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeqable$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a) : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, a)) ? b : cljs.core.array_QMARK_(a) || "string" === typeof a;
};
cljs.core.boolean$ = function(a) {
  return null == a ? !1 : !1 === a ? !1 : !0;
};
cljs.core.ifn_QMARK_ = function(a) {
  var b = cljs.core.fn_QMARK_(a);
  return b ? b : null != a ? a.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IFn$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IFn, a);
};
cljs.core.integer_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) === parseInt(a, 10);
};
cljs.core.LongImpl = cljs.core.goog$module$goog$math$Long;
cljs.core.int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) || a instanceof goog.math.Integer || a instanceof cljs.core.goog$module$goog$math$Long;
};
cljs.core.pos_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 < a : a instanceof goog.math.Integer ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : a instanceof cljs.core.goog$module$goog$math$Long ? cljs.core.not(a.isNegative()) && cljs.core.not(a.isZero()) : !1;
};
cljs.core.neg_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? 0 > a : a instanceof goog.math.Integer ? a.isNegative() : a instanceof cljs.core.goog$module$goog$math$Long ? a.isNegative() : !1;
};
cljs.core.nat_int_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_(a) ? !(0 > a) : a instanceof goog.math.Integer ? cljs.core.not(a.isNegative()) : a instanceof cljs.core.goog$module$goog$math$Long ? cljs.core.not(a.isNegative()) : !1;
};
cljs.core.float_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.double_QMARK_ = function(a) {
  return "number" === typeof a;
};
cljs.core.infinite_QMARK_ = function(a) {
  return a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function(a, b) {
  return null != a && (a.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IAssociative$) ? a.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(null, b) : cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, a) ? cljs.core._contains_key_QMARK_(a, b) : cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? !1 : !0;
};
cljs.core.find = function(a, b) {
  return cljs.core.ifind_QMARK_(a) ? cljs.core._find(a, b) : null != a && cljs.core.associative_QMARK_(a) && cljs.core.contains_QMARK_(a, b) ? new cljs.core.MapEntry(b, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), null) : null;
};
cljs.core.distinct_QMARK_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b)) {
    return !1;
  }
  a = cljs.core.PersistentHashSet.createAsIfByAssoc([a, b]);
  for (b = c;;) {
    var d = cljs.core.first(b);
    c = cljs.core.next(b);
    if (cljs.core.truth_(b)) {
      if (cljs.core.contains_QMARK_(a, d)) {
        return !1;
      }
      a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d);
      b = c;
    } else {
      return !0;
    }
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function(a, b) {
  if (a === b) {
    return 0;
  }
  if (null == a) {
    return -1;
  }
  if (null == b) {
    return 1;
  }
  if ("number" === typeof a) {
    if ("number" === typeof b) {
      return cljs.core.goog$module$goog$array.defaultCompare.call(null, a, b);
    }
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  if (null != a ? a.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IComparable$ || (a.cljs$lang$protocol_mask$partition1$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, a)) {
    return cljs.core._compare(a, b);
  }
  if ("string" !== typeof a && !cljs.core.array_QMARK_(a) && !0 !== a && !1 !== a || cljs.core.type(a) !== cljs.core.type(b)) {
    throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return cljs.core.goog$module$goog$array.defaultCompare.call(null, a, b);
};
cljs.core.compare_indexed = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.count(a), d = cljs.core.count(b);
  return c < d ? -1 : c > d ? 1 : 0 === c ? 0 : cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(a, b, c, 0);
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  for (;;) {
    var e = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(b, d));
    if (0 === e && d + 1 < c) {
      d += 1;
    } else {
      return e;
    }
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function(a) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, cljs.core.compare) ? cljs.core.compare : function(b, c) {
    var d = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return "number" === typeof d ? d : cljs.core.truth_(d) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.sort = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, a);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq(b)) {
    var c = cljs.core.to_array(b);
    a = cljs.core.fn__GT_comparator(a);
    cljs.core.goog$module$goog$array.stableSort.call(null, c, a);
    return cljs.core.with_meta(cljs.core.seq(c), cljs.core.meta(b));
  }
  return cljs.core.List.EMPTY;
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(a, cljs.core.compare, b);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(d, e) {
    d = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
    var f = cljs.core.fn__GT_comparator(b);
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(d, e) : f.call(null, d, e);
  }, c);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return (b = cljs.core.seq(b)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), cljs.core.next(b)) : a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (c = cljs.core.seq(c);;) {
    if (c) {
      var d = cljs.core.first(c);
      b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, d) : a.call(null, b, d);
      if (cljs.core.reduced_QMARK_(b)) {
        return cljs.core.deref(b);
      }
      c = cljs.core.next(c);
    } else {
      return b;
    }
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function(a) {
  a = cljs.core.to_array(a);
  cljs.core.goog$module$goog$array.shuffle.call(null, a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core._iterator(a);
  if (cljs.core.truth_(a.hasNext())) {
    for (var c = a.next();;) {
      if (a.hasNext()) {
        var d = a.next();
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
      } else {
        return c;
      }
    }
  } else {
    return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  for (a = cljs.core._iterator(a);;) {
    if (a.hasNext()) {
      var d = a.next();
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, d) : b.call(null, c, d);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
    } else {
      return c;
    }
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != b && (b.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IReduce$) ? b.cljs$core$IReduce$_reduce$arity$2(null, a) : cljs.core.array_QMARK_(b) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : "string" === typeof b ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, b) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(b, a) : cljs.core.iterable_QMARK_(b) ? cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(b, 
  a) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null != c && (c.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === c.cljs$core$IReduce$) ? c.cljs$core$IReduce$_reduce$arity$3(null, a, b) : cljs.core.array_QMARK_(c) ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : "string" === typeof c ? cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, c) ? cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.iterable_QMARK_(c) ? 
  cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(c, a, b) : cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function(a, b, c) {
  return null != c ? cljs.core._kv_reduce(c, a, b) : b;
};
cljs.core.identity = function(a) {
  return a;
};
cljs.core.completing = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(a, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    }, e = function(g) {
      return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
    }, f = function(g, h) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(g, h) : a.call(null, g, h);
    };
    c = function(g, h) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, g);
        case 2:
          return f.call(this, g, h);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    return c;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(a, b, b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  c = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(a, c, d);
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, a + b, c);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, a - b, c);
};
cljs.core._.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, a * b, c);
};
cljs.core._STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, a / b, c);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a < b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b < cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a <= b;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a <= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b <= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a > b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b > cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a >= b;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a >= b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b >= cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function(a) {
  return a - 1;
};
cljs.core.abs = function(a) {
  return Math.abs(a);
};
cljs.core.max = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a > b ? a : b;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.reduce;
  return d.cljs$core$IFn$_invoke$arity$3.call(d, cljs.core.max, a > b ? a : b, c);
};
cljs.core.max.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a < b ? a : b;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.reduce;
  return d.cljs$core$IFn$_invoke$arity$3.call(d, cljs.core.min, a < b ? a : b, c);
};
cljs.core.min.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function(a) {
  return a;
};
cljs.core.char$ = function(a) {
  if ("number" === typeof a) {
    return String.fromCharCode(a);
  }
  if ("string" === typeof a && 1 === a.length) {
    return a;
  }
  throw Error("Argument to char must be a character or number");
};
cljs.core.short$ = function(a) {
  return a;
};
cljs.core.float$ = function(a) {
  return a;
};
cljs.core.double$ = function(a) {
  return a;
};
cljs.core.unchecked_byte = function(a) {
  return a;
};
cljs.core.unchecked_char = function(a) {
  return a;
};
cljs.core.unchecked_short = function(a) {
  return a;
};
cljs.core.unchecked_float = function(a) {
  return a;
};
cljs.core.unchecked_double = function(a) {
  return a;
};
cljs.core.unchecked_add = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, a + b, c);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a + b;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, a + b, c);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function(a) {
  return a - 1;
};
cljs.core.unchecked_dec_int = function(a) {
  return a - 1;
};
cljs.core.unchecked_divide_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return 1 / a;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a / b;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, a / b, c);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function(a) {
  return a + 1;
};
cljs.core.unchecked_inc_int = function(a) {
  return a + 1;
};
cljs.core.unchecked_multiply = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, a * b, c);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a * b;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, a * b, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function(a) {
  return -a;
};
cljs.core.unchecked_negate_int = function(a) {
  return -a;
};
cljs.core.unchecked_remainder_int = function(a, b) {
  return cljs.core.mod(a, b);
};
cljs.core.unchecked_subtract = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, a - b, c);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return -a;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a - b;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, a - b, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function(a) {
  return 0 <= a ? Math.floor(a) : Math.ceil(a);
};
cljs.core.int$ = function(a) {
  return a | 0;
};
cljs.core.unchecked_int = function(a) {
  return cljs.core.fix(a);
};
cljs.core.long$ = function(a) {
  return cljs.core.fix(a);
};
cljs.core.unchecked_long = function(a) {
  return cljs.core.fix(a);
};
cljs.core.booleans = function(a) {
  return a;
};
cljs.core.bytes = function(a) {
  return a;
};
cljs.core.chars = function(a) {
  return a;
};
cljs.core.shorts = function(a) {
  return a;
};
cljs.core.ints = function(a) {
  return a;
};
cljs.core.floats = function(a) {
  return a;
};
cljs.core.doubles = function(a) {
  return a;
};
cljs.core.longs = function(a) {
  return a;
};
cljs.core.js_mod = function(a, b) {
  return a % b;
};
cljs.core.mod = function(a, b) {
  return (a % b + b) % b;
};
cljs.core.quot = function(a, b) {
  return cljs.core.fix((a - a % b) / b);
};
cljs.core.rem = function(a, b) {
  var c = cljs.core.quot(a, b);
  return a - b * c;
};
cljs.core.bit_xor = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a ^ b;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, a ^ b, c);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & b;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, a & b, c);
};
cljs.core.bit_and.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a | b;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, a | b, c);
};
cljs.core.bit_or.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a & ~b;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, a & ~b, c);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function(a, b) {
  return a & ~(1 << b);
};
cljs.core.bit_flip = function(a, b) {
  return a ^ 1 << b;
};
cljs.core.bit_not = function(a) {
  return ~a;
};
cljs.core.bit_set = function(a, b) {
  return a | 1 << b;
};
cljs.core.bit_test = function(a, b) {
  return 0 != (a & 1 << b);
};
cljs.core.bit_shift_left = function(a, b) {
  return a << b;
};
cljs.core.bit_shift_right = function(a, b) {
  return a >> b;
};
cljs.core.bit_shift_right_zero_fill = function(a, b) {
  return a >>> b;
};
cljs.core.unsigned_bit_shift_right = function(a, b) {
  return a >>> b;
};
cljs.core.bit_count = function(a) {
  a -= a >> 1 & 1431655765;
  a = (a & 858993459) + (a >> 2 & 858993459);
  return 16843009 * (a + (a >> 4) & 252645135) >> 24;
};
cljs.core._EQ__EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !0;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._equiv(a, b);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a === b) {
      if (cljs.core.next(c)) {
        a = b, b = cljs.core.first(c), c = cljs.core.next(c);
      } else {
        return b === cljs.core.first(c);
      }
    } else {
      return !1;
    }
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function(a) {
  return 0 < a;
};
cljs.core.zero_QMARK_ = function(a) {
  return 0 === a;
};
cljs.core.neg_QMARK_ = function(a) {
  return 0 > a;
};
cljs.core.nthnext = function(a, b) {
  for (a = cljs.core.seq(a);;) {
    if (a && 0 < b) {
      --b, a = cljs.core.next(a);
    } else {
      return a;
    }
  }
};
cljs.core.str = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return null == a ? "" : [a].join("");
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  for (a = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));;) {
    if (cljs.core.truth_(b)) {
      a = a.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(b))), b = cljs.core.next(b);
    } else {
      return a.toString();
    }
  }
};
cljs.core.str.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return a.substring(b);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return a.substring(b, c);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function(a, b) {
  var c = cljs.core, d = c.boolean$;
  if (cljs.core.sequential_QMARK_(b)) {
    if (cljs.core.counted_QMARK_(a) && cljs.core.counted_QMARK_(b) && cljs.core.count(a) !== cljs.core.count(b)) {
      a = !1;
    } else {
      a: {
        for (a = cljs.core.seq(a), b = cljs.core.seq(b);;) {
          if (null == a) {
            a = null == b;
            break a;
          }
          if (null != b && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(a), cljs.core.first(b))) {
            a = cljs.core.next(a), b = cljs.core.next(b);
          } else {
            a = !1;
            break a;
          }
        }
      }
    }
  } else {
    a = null;
  }
  return d.call(c, a);
};
cljs.core.hash_coll = function(a) {
  if (cljs.core.seq(a)) {
    var b = cljs.core.hash(cljs.core.first(a));
    for (a = cljs.core.next(a);;) {
      if (null == a) {
        return b;
      }
      b = cljs.core.hash_combine(b, cljs.core.hash(cljs.core.first(a)));
      a = cljs.core.next(a);
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + (cljs.core.hash(cljs.core.key(c)) ^ cljs.core.hash(cljs.core.val(c)))) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.hash_iset = function(a) {
  var b = 0;
  for (a = cljs.core.seq(a);;) {
    if (a) {
      var c = cljs.core.first(a);
      b = (b + cljs.core.hash(c)) % 4503599627370496;
      a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.extend_object_BANG_ = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      g = cljs.core.name(g);
      cljs.core.goog$module$goog$object.set.call(null, a, g, f);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (d = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), c = d, d = cljs.core.count(d)) : (d = cljs.core.first(b), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), c = cljs.core.name(c), cljs.core.goog$module$goog$object.set.call(null, a, c, d), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        break;
      }
    }
  }
  return a;
};
cljs.core.List = function(a, b, c, d, e) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.List.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.List.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, this.count);
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.List(this.meta, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 1 === this.count ? null : this.rest;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 === this.count ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.List(b, this.first, this.rest, this.count, this.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, this, this.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.List.cljs$lang$type = !0;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/List");
};
cljs.core.__GT_List = function(a, b, c, d, e) {
  return new cljs.core.List(a, b, c, d, e);
};
cljs.core.list_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IList$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IList, a);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.EmptyList = function(a) {
  this.meta = a;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.EmptyList.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.EmptyList(this.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  throw Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.list_QMARK_(b) || cljs.core.sequential_QMARK_(b) ? null == cljs.core.seq(b) : !1;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return this;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.EmptyList(b);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.List(this.meta, b, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = !0;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function(a) {
  return new cljs.core.EmptyList(a);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.reversible_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IReversible$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a) : cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, a);
};
cljs.core.rseq = function(a) {
  return cljs.core._rseq(a);
};
cljs.core.reverse = function(a) {
  return cljs.core.reversible_QMARK_(a) ? (a = cljs.core.rseq(a)) ? a : cljs.core.List.EMPTY : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, a);
};
cljs.core.list = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    var b = a.arr;
  } else {
    a: {
      for (b = [];;) {
        if (null != a) {
          b.push(cljs.core._first(a)), a = cljs.core._next(a);
        } else {
          break a;
        }
      }
    }
  }
  a = b.length;
  for (var c = cljs.core.List.EMPTY;;) {
    if (0 < a) {
      var d = a - 1;
      c = cljs.core._conj(c, b[a - 1]);
      a = d;
    } else {
      return c;
    }
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.Cons = function(a, b, c, d) {
  this.meta = a;
  this.first = b;
  this.rest = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Cons.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Cons(this.meta, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.rest ? null : cljs.core.seq(this.rest);
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.rest ? cljs.core.List.EMPTY : this.rest;
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.Cons(b, this.first, this.rest, this.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.Cons(null, b, this, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cons.cljs$lang$type = !0;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function(a, b, c, d) {
  return new cljs.core.Cons(a, b, c, d);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.cons = function(a, b) {
  return null == b ? new cljs.core.List(null, a, null, 1, null) : null != b && (b.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$ISeq$) ? new cljs.core.Cons(null, a, b, null) : new cljs.core.Cons(null, a, cljs.core.seq(b), null);
};
cljs.core.hash_keyword = function(a) {
  return cljs.core.hash_symbol(a) + 2654435769 | 0;
};
cljs.core.compare_keywords = function(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  }
  var c = cljs.core, d = c.truth_, e = cljs.core.not(a.ns);
  if (d.call(c, e ? b.ns : e)) {
    return -1;
  }
  if (cljs.core.truth_(a.ns)) {
    if (cljs.core.not(b.ns)) {
      return 1;
    }
    c = cljs.core.goog$module$goog$array.defaultCompare.call(null, a.ns, b.ns);
    return 0 === c ? cljs.core.goog$module$goog$array.defaultCompare.call(null, a.name, b.name) : c;
  }
  return cljs.core.goog$module$goog$array.defaultCompare.call(null, a.name, b.name);
};
cljs.core.Keyword = function(a, b, c, d) {
  this.ns = a;
  this.name = b;
  this.fqn = c;
  this._hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Keyword ? this.fqn === b.fqn : !1;
};
cljs.core.Keyword.prototype.call = function() {
  var a = null, b = function(d, e) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(e, this);
  }, c = function(d, e, f) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(e, this, f);
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.Keyword.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, this);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, this, b);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this._hash;
  return null != a ? a : this._hash = a = cljs.core.hash_keyword(this);
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return this.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return this.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Keyword.cljs$lang$type = !0;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function(a, b, c, d) {
  return new cljs.core.Keyword(a, b, c, d);
};
cljs.core.keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Keyword && b instanceof cljs.core.Keyword ? a.fqn === b.fqn : !1;
};
cljs.core.symbol_identical_QMARK_ = function(a, b) {
  return a === b ? !0 : a instanceof cljs.core.Symbol && b instanceof cljs.core.Symbol ? a.str === b.str : !1;
};
cljs.core.namespace = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_namespace$arity$1(null);
  }
  throw Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.ident_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function(a) {
  return cljs.core.ident_QMARK_(a) && null == cljs.core.namespace(a);
};
cljs.core.qualified_ident_QMARK_ = function(a) {
  var b = cljs.core, c = b.boolean$;
  var d = cljs.core.ident_QMARK_(a);
  d ? (a = cljs.core.namespace(a), a = cljs.core.truth_(a) ? !0 : a) : a = d;
  return c.call(b, a);
};
cljs.core.simple_symbol_QMARK_ = function(a) {
  return a instanceof cljs.core.Symbol && null == cljs.core.namespace(a);
};
cljs.core.qualified_symbol_QMARK_ = function(a) {
  var b = cljs.core, c = b.boolean$;
  var d = a instanceof cljs.core.Symbol;
  d ? (a = cljs.core.namespace(a), a = cljs.core.truth_(a) ? !0 : a) : a = d;
  return c.call(b, a);
};
cljs.core.simple_keyword_QMARK_ = function(a) {
  return a instanceof cljs.core.Keyword && null == cljs.core.namespace(a);
};
cljs.core.qualified_keyword_QMARK_ = function(a) {
  var b = cljs.core, c = b.boolean$;
  var d = a instanceof cljs.core.Keyword;
  d ? (a = cljs.core.namespace(a), a = cljs.core.truth_(a) ? !0 : a) : a = d;
  return c.call(b, a);
};
cljs.core.keyword = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if (a instanceof cljs.core.Keyword) {
    return a;
  }
  if (a instanceof cljs.core.Symbol) {
    return new cljs.core.Keyword(cljs.core.namespace(a), cljs.core.name(a), a.str, null);
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("/", a)) {
    return new cljs.core.Keyword(null, a, a, null);
  }
  if ("string" === typeof a) {
    var b = a.split("/");
    return 2 === b.length ? new cljs.core.Keyword(b[0], b[1], a, null) : new cljs.core.Keyword(null, b[0], a, null);
  }
  return null;
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a instanceof cljs.core.Keyword ? cljs.core.name(a) : a instanceof cljs.core.Symbol ? cljs.core.name(a) : a;
  b = b instanceof cljs.core.Keyword ? cljs.core.name(b) : b instanceof cljs.core.Symbol ? cljs.core.name(b) : b;
  return new cljs.core.Keyword(a, b, [cljs.core.truth_(a) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(a, b, c, d) {
  this.meta = a;
  this.fn = b;
  this.s = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.LazySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.LazySeq.prototype.sval = function() {
  null != this.fn && (this.s = this.fn.cljs$core$IFn$_invoke$arity$0 ? this.fn.cljs$core$IFn$_invoke$arity$0() : this.fn.call(null), this.fn = null);
  return this.s;
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.next(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null == this.s ? null : cljs.core.first(this.s);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  this.cljs$core$ISeqable$_seq$arity$1(null);
  return null != this.s ? cljs.core.rest(this.s) : cljs.core.List.EMPTY;
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  this.sval();
  if (null == this.s) {
    return null;
  }
  for (a = this.s;;) {
    if (a instanceof cljs.core.LazySeq) {
      a = a.sval();
    } else {
      return this.s = a, cljs.core.seq(this.s);
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  var c = this;
  return b === this.meta ? c : new cljs.core.LazySeq(b, function() {
    return c.cljs$core$ISeqable$_seq$arity$1(null);
  }, null, this.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = !0;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function(a, b, c, d) {
  return new cljs.core.LazySeq(a, b, c, d);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.ChunkBuffer = function(a, b) {
  this.buf = a;
  this.end = b;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(a) {
  this.buf[this.end] = a;
  return this.end += 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var a = new cljs.core.ArrayChunk(this.buf, 0, this.end);
  this.buf = null;
  return a;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = !0;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function(a, b) {
  return new cljs.core.ChunkBuffer(a, b);
};
cljs.core.chunk_buffer = function(a) {
  return new cljs.core.ChunkBuffer(Array(a), 0);
};
cljs.core.ArrayChunk = function(a, b, c) {
  this.arr = a;
  this.off = b;
  this.end = c;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return this.arr[this.off + b];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.end - this.off ? this.arr[this.off + b] : c;
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(a) {
  if (this.off === this.end) {
    throw Error("-drop-first of empty chunk");
  }
  return new cljs.core.ArrayChunk(this.arr, this.off + 1, this.end);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, this.arr[this.off], this.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(this.arr, b, c, this.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = !0;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.ArrayChunk(a, 0, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.ArrayChunk(a, b, a.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ArrayChunk(a, b, c);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(a, b, c, d) {
  this.chunk = a;
  this.more = b;
  this.meta = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedCons.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 1 < cljs.core._count(this.chunk) ? new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, null, null) : null == this.more ? null : cljs.core._seq(this.more);
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return 1 < cljs.core._count(this.chunk) ? new cljs.core.ChunkedCons(cljs.core._drop_first(this.chunk), this.more, null, null) : null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return this.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  return null == this.more ? cljs.core.List.EMPTY : this.more;
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.ChunkedCons(this.chunk, this.more, b, this.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return null == this.more ? null : this.more;
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = !0;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function(a, b, c, d) {
  return new cljs.core.ChunkedCons(a, b, c, d);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.chunk_cons = function(a, b) {
  return 0 === cljs.core._count(a) ? b : new cljs.core.ChunkedCons(a, b, null, null);
};
cljs.core.chunk_append = function(a, b) {
  return a.add(b);
};
cljs.core.chunk = function(a) {
  return a.chunk();
};
cljs.core.chunk_first = function(a) {
  return cljs.core._chunked_first(a);
};
cljs.core.chunk_rest = function(a) {
  return cljs.core._chunked_rest(a);
};
cljs.core.chunk_next = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IChunkedNext$) ? a.cljs$core$IChunkedNext$_chunked_next$arity$1(null) : cljs.core.seq(cljs.core._chunked_rest(a));
};
cljs.core.to_array = function(a) {
  var b = [];
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b.push(cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return b;
    }
  }
};
cljs.core.to_array_2d = function(a) {
  var b = Array(cljs.core.count(a)), c = 0;
  for (a = cljs.core.seq(a);;) {
    if (null != a) {
      b[c] = cljs.core.to_array(cljs.core.first(a)), c += 1, a = cljs.core.next(a);
    } else {
      break;
    }
  }
  return b;
};
cljs.core.int_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return "number" === typeof a ? cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(a, null) : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = Array(a);
  if (cljs.core.seq_QMARK_(b)) {
    var d = 0;
    for (b = cljs.core.seq(b);;) {
      if (b && d < a) {
        c[d] = cljs.core.first(b), d += 1, b = cljs.core.next(b);
      } else {
        return c;
      }
    }
  } else {
    for (d = 0;;) {
      if (d < a) {
        c[d] = b, d += 1;
      } else {
        break;
      }
    }
    return c;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function(a, b) {
  if (cljs.core.counted_QMARK_(b)) {
    return cljs.core.count(b);
  }
  var c = 0;
  for (b = cljs.core.seq(b);;) {
    if (null != b && c < a) {
      c += 1, b = cljs.core.next(b);
    } else {
      return c;
    }
  }
};
cljs.core.spread = function(a) {
  if (null == a) {
    return null;
  }
  var b = cljs.core.next(a);
  return null == b ? cljs.core.seq(cljs.core.first(a)) : cljs.core.cons(cljs.core.first(a), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(b) : cljs.core.spread.call(null, b));
};
cljs.core.concat = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a);
    return c ? cljs.core.chunked_seq_QMARK_(c) ? cljs.core.chunk_cons(cljs.core.chunk_first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(c), b)) : cljs.core.cons(cljs.core.first(c), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), b)) : b;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return function g(e, f) {
    return new cljs.core.LazySeq(null, function() {
      var h = cljs.core.seq(e);
      return h ? cljs.core.chunked_seq_QMARK_(h) ? cljs.core.chunk_cons(cljs.core.chunk_first(h), g(cljs.core.chunk_rest(h), f)) : cljs.core.cons(cljs.core.first(h), g(cljs.core.rest(h), f)) : cljs.core.truth_(f) ? g(cljs.core.first(f), cljs.core.next(f)) : null;
    }, null, null);
  }(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(a, b), c);
};
cljs.core.concat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq(a);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.cons(a, b);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.cons(a, cljs.core.cons(b, c));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, d)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(e)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function(a) {
  return cljs.core._as_transient(a);
};
cljs.core.persistent_BANG_ = function(a) {
  return cljs.core._persistent_BANG_(a);
};
cljs.core.conj_BANG_ = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._conj_BANG_(a, b);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._conj_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core._assoc_BANG_(a, b, c);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  for (;;) {
    if (a = cljs.core._assoc_BANG_(a, b, c), cljs.core.truth_(d)) {
      b = cljs.core.first(d), c = cljs.core.second(d), d = cljs.core.nnext(d);
    } else {
      return a;
    }
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._dissoc_BANG_(a, b);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._dissoc_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function(a) {
  return cljs.core._pop_BANG_(a);
};
cljs.core.disj_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._disjoin_BANG_(a, b);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  for (;;) {
    if (a = cljs.core._disjoin_BANG_(a, b), cljs.core.truth_(c)) {
      b = cljs.core.first(c), c = cljs.core.next(c);
    } else {
      return a;
    }
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function(a, b, c) {
  var d = cljs.core.seq(c);
  if (0 === b) {
    return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
  }
  c = cljs.core._first(d);
  var e = cljs.core._rest(d);
  if (1 === b) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
  }
  d = cljs.core._first(e);
  var f = cljs.core._rest(e);
  if (2 === b) {
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, d) : a.call(null, c, d);
  }
  e = cljs.core._first(f);
  var g = cljs.core._rest(f);
  if (3 === b) {
    return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(c, d, e) : a.call(null, c, d, e);
  }
  f = cljs.core._first(g);
  var h = cljs.core._rest(g);
  if (4 === b) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(c, d, e, f) : a.call(null, c, d, e, f);
  }
  g = cljs.core._first(h);
  var k = cljs.core._rest(h);
  if (5 === b) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(c, d, e, f, g) : a.call(null, c, d, e, f, g);
  }
  h = cljs.core._first(k);
  var l = cljs.core._rest(k);
  if (6 === b) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(c, d, e, f, g, h) : a.call(null, c, d, e, f, g, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core._rest(l);
  if (7 === b) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(c, d, e, f, g, h, k) : a.call(null, c, d, e, f, g, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core._rest(m);
  if (8 === b) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(c, d, e, f, g, h, k, l) : a.call(null, c, d, e, f, g, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core._rest(n);
  if (9 === b) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(c, d, e, f, g, h, k, l, m) : a.call(null, c, d, e, f, g, h, k, l, m);
  }
  n = cljs.core._first(p);
  var r = cljs.core._rest(p);
  if (10 === b) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(c, d, e, f, g, h, k, l, m, n) : a.call(null, c, d, e, f, g, h, k, l, m, n);
  }
  p = cljs.core._first(r);
  var u = cljs.core._rest(r);
  if (11 === b) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(c, d, e, f, g, h, k, l, m, n, p) : a.call(null, c, d, e, f, g, h, k, l, m, n, p);
  }
  r = cljs.core._first(u);
  var z = cljs.core._rest(u);
  if (12 === b) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(c, d, e, f, g, h, k, l, m, n, p, r) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r);
  }
  u = cljs.core._first(z);
  var D = cljs.core._rest(z);
  if (13 === b) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(c, d, e, f, g, h, k, l, m, n, p, r, u) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u);
  }
  z = cljs.core._first(D);
  var H = cljs.core._rest(D);
  if (14 === b) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(c, d, e, f, g, h, k, l, m, n, p, r, u, z) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z);
  }
  D = cljs.core._first(H);
  var L = cljs.core._rest(H);
  if (15 === b) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D);
  }
  H = cljs.core._first(L);
  var P = cljs.core._rest(L);
  if (16 === b) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H);
  }
  L = cljs.core._first(P);
  var S = cljs.core._rest(P);
  if (17 === b) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L);
  }
  P = cljs.core._first(S);
  var U = cljs.core._rest(S);
  if (18 === b) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P);
  }
  S = cljs.core._first(U);
  U = cljs.core._rest(U);
  if (19 === b) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S);
  }
  var V = cljs.core._first(U);
  cljs.core._rest(U);
  if (20 === b) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S, V) : a.call(null, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S, V);
  }
  throw Error("Only up to 20 arguments supported on functions");
};
cljs.core.next_STAR_ = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INext$) ? a.cljs$core$INext$_next$arity$1(null) : cljs.core.seq(cljs.core.rest(a));
};
cljs.core.apply_to_simple = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null == b ? a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(a) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, cljs.core._first(b), cljs.core.next_STAR_(b));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return null == c ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(a, b) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, cljs.core._first(c), cljs.core.next_STAR_(c));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return null == d ? a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(a, b, c) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, cljs.core._first(d), cljs.core.next_STAR_(d));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return null == e ? a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(a, b, c, d) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, cljs.core._first(e), cljs.core.next_STAR_(e));
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  if (null == f) {
    return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, e) : a.call(a, b, c, d, e);
  }
  var g = cljs.core._first(f), h = cljs.core.next(f);
  if (null == h) {
    return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, e, g) : a.call(a, b, c, d, e, g);
  }
  f = cljs.core._first(h);
  var k = cljs.core.next(h);
  if (null == k) {
    return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, e, g, f) : a.call(a, b, c, d, e, g, f);
  }
  h = cljs.core._first(k);
  var l = cljs.core.next(k);
  if (null == l) {
    return a.cljs$core$IFn$_invoke$arity$7 ? a.cljs$core$IFn$_invoke$arity$7(b, c, d, e, g, f, h) : a.call(a, b, c, d, e, g, f, h);
  }
  k = cljs.core._first(l);
  var m = cljs.core.next(l);
  if (null == m) {
    return a.cljs$core$IFn$_invoke$arity$8 ? a.cljs$core$IFn$_invoke$arity$8(b, c, d, e, g, f, h, k) : a.call(a, b, c, d, e, g, f, h, k);
  }
  l = cljs.core._first(m);
  var n = cljs.core.next(m);
  if (null == n) {
    return a.cljs$core$IFn$_invoke$arity$9 ? a.cljs$core$IFn$_invoke$arity$9(b, c, d, e, g, f, h, k, l) : a.call(a, b, c, d, e, g, f, h, k, l);
  }
  m = cljs.core._first(n);
  var p = cljs.core.next(n);
  if (null == p) {
    return a.cljs$core$IFn$_invoke$arity$10 ? a.cljs$core$IFn$_invoke$arity$10(b, c, d, e, g, f, h, k, l, m) : a.call(a, b, c, d, e, g, f, h, k, l, m);
  }
  n = cljs.core._first(p);
  var r = cljs.core.next(p);
  if (null == r) {
    return a.cljs$core$IFn$_invoke$arity$11 ? a.cljs$core$IFn$_invoke$arity$11(b, c, d, e, g, f, h, k, l, m, n) : a.call(a, b, c, d, e, g, f, h, k, l, m, n);
  }
  p = cljs.core._first(r);
  var u = cljs.core.next(r);
  if (null == u) {
    return a.cljs$core$IFn$_invoke$arity$12 ? a.cljs$core$IFn$_invoke$arity$12(b, c, d, e, g, f, h, k, l, m, n, p) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p);
  }
  r = cljs.core._first(u);
  var z = cljs.core.next(u);
  if (null == z) {
    return a.cljs$core$IFn$_invoke$arity$13 ? a.cljs$core$IFn$_invoke$arity$13(b, c, d, e, g, f, h, k, l, m, n, p, r) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r);
  }
  u = cljs.core._first(z);
  var D = cljs.core.next(z);
  if (null == D) {
    return a.cljs$core$IFn$_invoke$arity$14 ? a.cljs$core$IFn$_invoke$arity$14(b, c, d, e, g, f, h, k, l, m, n, p, r, u) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u);
  }
  z = cljs.core._first(D);
  var H = cljs.core.next(D);
  if (null == H) {
    return a.cljs$core$IFn$_invoke$arity$15 ? a.cljs$core$IFn$_invoke$arity$15(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z);
  }
  D = cljs.core._first(H);
  var L = cljs.core.next(H);
  if (null == L) {
    return a.cljs$core$IFn$_invoke$arity$16 ? a.cljs$core$IFn$_invoke$arity$16(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D);
  }
  H = cljs.core._first(L);
  var P = cljs.core.next(L);
  if (null == P) {
    return a.cljs$core$IFn$_invoke$arity$17 ? a.cljs$core$IFn$_invoke$arity$17(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H);
  }
  L = cljs.core._first(P);
  var S = cljs.core.next(P);
  if (null == S) {
    return a.cljs$core$IFn$_invoke$arity$18 ? a.cljs$core$IFn$_invoke$arity$18(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L);
  }
  P = cljs.core._first(S);
  var U = cljs.core.next(S);
  if (null == U) {
    return a.cljs$core$IFn$_invoke$arity$19 ? a.cljs$core$IFn$_invoke$arity$19(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L, P) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L, P);
  }
  S = cljs.core._first(U);
  U = cljs.core.next(U);
  if (null == U) {
    return a.cljs$core$IFn$_invoke$arity$20 ? a.cljs$core$IFn$_invoke$arity$20(b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L, P, S) : a.call(a, b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L, P, S);
  }
  b = [b, c, d, e, g, f, h, k, l, m, n, p, r, u, z, D, H, L, P, S];
  for (c = U;;) {
    if (c) {
      b.push(cljs.core._first(c)), c = cljs.core.next(c);
    } else {
      break;
    }
  }
  return a.apply(a, b);
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], b);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (a.cljs$lang$applyTo) {
    var c = a.cljs$lang$maxFixedArity, d = cljs.core.bounded_count(c + 1, b);
    return d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(a, cljs.core.seq(b));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (a.cljs$lang$applyTo) {
    b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(b, c);
    var d = a.cljs$lang$maxFixedArity;
    c = cljs.core.bounded_count(d, c) + 1;
    return c <= d ? cljs.core.apply_to(a, c, b) : a.cljs$lang$applyTo(b);
  }
  return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.seq(c));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(b, c, d), c = a.cljs$lang$maxFixedArity, d = 2 + cljs.core.bounded_count(c - 1, d), d <= c ? cljs.core.apply_to(a, d, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.seq(d));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return a.cljs$lang$applyTo ? (b = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(b, c, d, e), c = a.cljs$lang$maxFixedArity, e = 3 + cljs.core.bounded_count(c - 2, e), e <= c ? cljs.core.apply_to(a, e, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.seq(e));
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f) {
  return a.cljs$lang$applyTo ? (f = cljs.core.spread(f), b = cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.cons(e, f)))), c = a.cljs$lang$maxFixedArity, f = 4 + cljs.core.bounded_count(c - 3, f), f <= c ? cljs.core.apply_to(a, f, b) : a.cljs$lang$applyTo(b)) : cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, cljs.core.spread(f));
};
cljs.core.apply.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  f = cljs.core.next(f);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.__destructure_map = function(a) {
  return null != a && (a.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$ISeq$) ? cljs.core.next(a) ? cljs.core.PersistentArrayMap.createAsIfByAssoc(cljs.core.to_array(a)) : cljs.core.seq(a) ? cljs.core.first(a) : cljs.core.PersistentArrayMap.EMPTY : a;
};
cljs.core.vary_meta = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core, d = c.with_meta, e = cljs.core.meta(a);
  b = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
  return d.call(c, a, b);
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core, e = d.with_meta, f = cljs.core.meta(a);
  b = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, c) : b.call(null, f, c);
  return e.call(d, a, b);
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core, f = e.with_meta, g = cljs.core.meta(a);
  b = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(g, c, d) : b.call(null, g, c, d);
  return f.call(e, a, b);
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core, g = f.with_meta, h = cljs.core.meta(a);
  b = b.cljs$core$IFn$_invoke$arity$4 ? b.cljs$core$IFn$_invoke$arity$4(h, c, d, e) : b.call(null, h, c, d, e);
  return g.call(f, a, b);
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core, h = g.with_meta, k = cljs.core.meta(a);
  b = b.cljs$core$IFn$_invoke$arity$5 ? b.cljs$core$IFn$_invoke$arity$5(k, c, d, e, f) : b.call(null, k, c, d, e, f);
  return h.call(g, a, b);
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.with_meta(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.meta(a), c, d, e, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f, g], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return !1;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, a, b, c));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function(a) {
  return cljs.core.seq(a) ? a : null;
};
cljs.core.nil_iter = function() {
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core.t_cljs$core10959) {
    cljs.core.t_cljs$core10959 = function(a) {
      this.meta10960 = a;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.t_cljs$core10959.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
      return new cljs.core.t_cljs$core10959(b);
    }, cljs.core.t_cljs$core10959.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
      return this.meta10960;
    }, cljs.core.t_cljs$core10959.prototype.hasNext = function() {
      return !1;
    }, cljs.core.t_cljs$core10959.prototype.next = function() {
      return Error("No such element");
    }, cljs.core.t_cljs$core10959.prototype.remove = function() {
      return Error("Unsupported operation");
    }, cljs.core.t_cljs$core10959.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta10960", "meta10960", 978916095, null)], null);
    }, cljs.core.t_cljs$core10959.cljs$lang$type = !0, cljs.core.t_cljs$core10959.cljs$lang$ctorStr = "cljs.core/t_cljs$core10959", cljs.core.t_cljs$core10959.cljs$lang$ctorPrWriter = function(a, b, c) {
      return cljs.core._write(b, "cljs.core/t_cljs$core10959");
    }, cljs.core.__GT_t_cljs$core10959 = function(a) {
      return new cljs.core.t_cljs$core10959(a);
    };
  }
  return new cljs.core.t_cljs$core10959(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(a, b) {
  this.s = a;
  this.i = b;
};
cljs.core.StringIter.prototype.hasNext = function() {
  return this.i < this.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var a = this.s.charAt(this.i);
  this.i += 1;
  return a;
};
cljs.core.StringIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.StringIter.cljs$lang$type = !0;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function(a, b) {
  return new cljs.core.StringIter(a, b);
};
cljs.core.string_iter = function(a) {
  return new cljs.core.StringIter(a, 0);
};
cljs.core.ArrayIter = function(a, b) {
  this.arr = a;
  this.i = b;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  return this.i < this.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var a = this.arr[this.i];
  this.i += 1;
  return a;
};
cljs.core.ArrayIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = !0;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function(a, b) {
  return new cljs.core.ArrayIter(a, b);
};
cljs.core.array_iter = function(a) {
  return new cljs.core.ArrayIter(a, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(a, b) {
  this._seq = a;
  this._next = b;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  this._seq === cljs.core.INIT ? (this._seq = cljs.core.START, this._next = cljs.core.seq(this._next)) : this._seq === this._next && (this._next = cljs.core.next(this._seq));
  return null != this._next;
};
cljs.core.SeqIter.prototype.next = function() {
  if (this.hasNext()) {
    return this._seq = this._next, cljs.core.first(this._next);
  }
  throw Error("No such element");
};
cljs.core.SeqIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = !0;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function(a, b) {
  return new cljs.core.SeqIter(a, b);
};
cljs.core.seq_iter = function(a) {
  return new cljs.core.SeqIter(cljs.core.INIT, a);
};
cljs.core.iter = function(a) {
  if (cljs.core.iterable_QMARK_(a)) {
    return cljs.core._iterator(a);
  }
  if (null == a) {
    return cljs.core.nil_iter();
  }
  if ("string" === typeof a) {
    return cljs.core.string_iter(a);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.array_iter(a);
  }
  if (cljs.core.seqable_QMARK_(a)) {
    return cljs.core.seq_iter(a);
  }
  throw Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.Many = function(a) {
  this.vals = a;
};
cljs.core.Many.prototype.add = function(a) {
  this.vals.push(a);
  return this;
};
cljs.core.Many.prototype.remove = function() {
  return this.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  return 0 === this.vals.length;
};
cljs.core.Many.prototype.toString = function() {
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = !0;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Many");
};
cljs.core.__GT_Many = function(a) {
  return new cljs.core.Many(a);
};
cljs.core.NONE = {};
cljs.core.Single = function(a) {
  this.val = a;
};
cljs.core.Single.prototype.add = function(a) {
  return this.val === cljs.core.NONE ? (this.val = a, this) : new cljs.core.Many([this.val, a]);
};
cljs.core.Single.prototype.remove = function() {
  if (this.val === cljs.core.NONE) {
    throw Error("Removing object from empty buffer");
  }
  var a = this.val;
  this.val = cljs.core.NONE;
  return a;
};
cljs.core.Single.prototype.isEmpty = function() {
  return this.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Single.cljs$lang$type = !0;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Single");
};
cljs.core.__GT_Single = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(a) {
  return new cljs.core.Single(a);
};
cljs.core.Empty.prototype.remove = function() {
  throw Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  return !0;
};
cljs.core.Empty.prototype.toString = function() {
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = !0;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function() {
  return new cljs.core.Empty();
};
cljs.core.EMPTY = new cljs.core.Empty();
cljs.core.MultiIterator = function(a) {
  this.iters = a;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  for (var a = cljs.core.seq(this.iters);;) {
    if (null != a) {
      if (cljs.core.first(a).hasNext()) {
        a = cljs.core.next(a);
      } else {
        return !1;
      }
    } else {
      return !0;
    }
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  for (var a = [], b = this.iters.length, c = 0;;) {
    if (c < b) {
      a[c] = this.iters[c].next(), c += 1;
    } else {
      break;
    }
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(a, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = !0;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function(a) {
  return new cljs.core.MultiIterator(a);
};
cljs.core.chunkIteratorSeq = function(a) {
  return new cljs.core.LazySeq(null, function() {
    if (a.hasNext()) {
      for (var b = [], c = 0;;) {
        var d = cljs.core, e = d.truth_;
        var f = a.hasNext();
        f = cljs.core.truth_(f) ? 32 > c : f;
        if (e.call(d, f)) {
          b[c] = a.next(), c += 1;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(b, 0, c), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.chunkIteratorSeq.call(null, a));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(a, b, c, d, e, f) {
  this.buffer = a;
  this._next = b;
  this.completed = c;
  this.xf = d;
  this.sourceIter = e;
  this.multi = f;
};
cljs.core.TransformerIterator.prototype.step = function() {
  if (this._next !== cljs.core.NONE) {
    return !0;
  }
  for (;;) {
    if (this._next === cljs.core.NONE) {
      if (this.buffer.isEmpty()) {
        if (this.completed) {
          return !1;
        }
        if (this.sourceIter.hasNext()) {
          if (this.multi) {
            var a = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(this.xf, cljs.core.cons(null, this.sourceIter.next()));
          } else {
            a = this.sourceIter.next(), a = this.xf.cljs$core$IFn$_invoke$arity$2 ? this.xf.cljs$core$IFn$_invoke$arity$2(null, a) : this.xf.call(null, null, a);
          }
          cljs.core.reduced_QMARK_(a) && (this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0);
        } else {
          this.xf.cljs$core$IFn$_invoke$arity$1 ? this.xf.cljs$core$IFn$_invoke$arity$1(null) : this.xf.call(null, null), this.completed = !0;
        }
      } else {
        this._next = this.buffer.remove();
      }
    } else {
      return !0;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  return this.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  if (this.hasNext()) {
    var a = this._next;
    this._next = cljs.core.NONE;
    return a;
  }
  throw Error("No such element");
};
cljs.core.TransformerIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = !0;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function(a, b, c, d, e, f) {
  return new cljs.core.TransformerIterator(a, b, c, d, e, f);
};
cljs.core.TransformerIterator.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.transformer_iterator = function(a, b, c) {
  var d = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, !1, null, b, c);
  d.xf = function() {
    var e = function() {
      var f = null, g = function(h, k) {
        d.buffer = d.buffer.add(k);
        return h;
      };
      f = function(h, k) {
        switch(arguments.length) {
          case 0:
            return null;
          case 1:
            return h;
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      f.cljs$core$IFn$_invoke$arity$0 = function() {
        return null;
      };
      f.cljs$core$IFn$_invoke$arity$1 = function(h) {
        return h;
      };
      f.cljs$core$IFn$_invoke$arity$2 = g;
      return f;
    }();
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
  }();
  return d;
};
cljs.core.TransformerIterator.create = function(a, b) {
  return cljs.core.transformer_iterator(a, b, !1);
};
cljs.core.TransformerIterator.createMulti = function(a, b) {
  return cljs.core.transformer_iterator(a, new cljs.core.MultiIterator(cljs.core.to_array(b)), !0);
};
cljs.core.sequence = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.seq_QMARK_(a) ? a : (a = cljs.core.seq(a)) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(a, cljs.core.iter(b)));
  return cljs.core.truth_(a) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(a, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(b, c))));
  return cljs.core.truth_(a) ? a : cljs.core.List.EMPTY;
};
cljs.core.sequence.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function(a, b) {
  for (;;) {
    if (null == cljs.core.seq(b)) {
      return !0;
    }
    var c = cljs.core, d = c.truth_;
    var e = cljs.core.first(b);
    e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e);
    if (d.call(c, e)) {
      b = cljs.core.next(b);
    } else {
      return !1;
    }
  }
};
cljs.core.not_every_QMARK_ = function(a, b) {
  return !cljs.core.every_QMARK_(a, b);
};
cljs.core.some = function(a, b) {
  for (;;) {
    if (b = cljs.core.seq(b)) {
      var c = cljs.core.first(b);
      c = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c);
      if (cljs.core.truth_(c)) {
        return c;
      }
      b = cljs.core.next(b);
    } else {
      return null;
    }
  }
};
cljs.core.not_any_QMARK_ = function(a, b) {
  return cljs.core.not(cljs.core.some(a, b));
};
cljs.core.even_QMARK_ = function(a) {
  if (cljs.core.integer_QMARK_(a)) {
    return 0 === (a & 1);
  }
  throw Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.odd_QMARK_ = function(a) {
  return !cljs.core.even_QMARK_(a);
};
cljs.core.complement = function(a) {
  return function() {
    var b = null, c = function() {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null));
    }, d = function(g) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g));
    }, e = function(g, h) {
      return cljs.core.not(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(g, h) : a.call(null, g, h));
    }, f = function() {
      var g = function(k, l, m) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(a, k, l, m));
      }, h = function(k, l, m) {
        var n = null;
        if (2 < arguments.length) {
          n = 0;
          for (var p = Array(arguments.length - 2); n < p.length;) {
            p[n] = arguments[n + 2], ++n;
          }
          n = new cljs.core.IndexedSeq(p, 0, null);
        }
        return g.call(this, k, l, n);
      };
      h.cljs$lang$maxFixedArity = 2;
      h.cljs$lang$applyTo = function(k) {
        var l = cljs.core.first(k);
        k = cljs.core.next(k);
        var m = cljs.core.first(k);
        k = cljs.core.rest(k);
        return g(l, m, k);
      };
      h.cljs$core$IFn$_invoke$arity$variadic = g;
      return h;
    }();
    b = function(g, h, k) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, g);
        case 2:
          return e.call(this, g, h);
        default:
          var l = null;
          if (2 < arguments.length) {
            l = 0;
            for (var m = Array(arguments.length - 2); l < m.length;) {
              m[l] = arguments[l + 2], ++l;
            }
            l = new cljs.core.IndexedSeq(m, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(g, h, l);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 2;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.constantly = function(a) {
  return function() {
    var b = function(c) {
      if (0 < arguments.length) {
        for (var d = 0, e = Array(arguments.length - 0); d < e.length;) {
          e[d] = arguments[d + 0], ++d;
        }
        new cljs.core.IndexedSeq(e, 0, null);
      }
      return a;
    };
    b.cljs$lang$maxFixedArity = 0;
    b.cljs$lang$applyTo = function(c) {
      cljs.core.seq(c);
      return a;
    };
    b.cljs$core$IFn$_invoke$arity$variadic = function(c) {
      return a;
    };
    return b;
  }();
};
cljs.core.comp = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      var k = b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
    }, e = function(k) {
      k = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
    }, f = function(k, l) {
      k = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(k, l) : b.call(null, k, l);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
    }, g = function(k, l, m) {
      k = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, l, m) : b.call(null, k, l, m);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
    }, h = function() {
      var k = function(m, n, p, r) {
        m = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, m, n, p, r);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(m) : a.call(null, m);
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    c = function(k, l, m, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, k);
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      var l = c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
    }, f = function(l) {
      l = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l);
      l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
    }, g = function(l, m) {
      l = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(l, m) : c.call(null, l, m);
      l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
    }, h = function(l, m, n) {
      l = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(l, m, n) : c.call(null, l, m, n);
      l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
    }, k = function() {
      var l = function(n, p, r, u) {
        n = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, n, p, r, u);
        n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(n) : b.call(null, n);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(n) : a.call(null, n);
      }, m = function(n, p, r, u) {
        var z = null;
        if (3 < arguments.length) {
          z = 0;
          for (var D = Array(arguments.length - 3); z < D.length;) {
            D[z] = arguments[z + 3], ++z;
          }
          z = new cljs.core.IndexedSeq(D, 0, null);
        }
        return l.call(this, n, p, r, z);
      };
      m.cljs$lang$maxFixedArity = 3;
      m.cljs$lang$applyTo = function(n) {
        var p = cljs.core.first(n);
        n = cljs.core.next(n);
        var r = cljs.core.first(n);
        n = cljs.core.next(n);
        var u = cljs.core.first(n);
        n = cljs.core.rest(n);
        return l(p, r, u, n);
      };
      m.cljs$core$IFn$_invoke$arity$variadic = l;
      return m;
    }();
    d = function(l, m, n, p) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, l);
        case 2:
          return g.call(this, l, m);
        case 3:
          return h.call(this, l, m, n);
        default:
          var r = null;
          if (3 < arguments.length) {
            r = 0;
            for (var u = Array(arguments.length - 3); r < u.length;) {
              u[r] = arguments[r + 3], ++r;
            }
            r = new cljs.core.IndexedSeq(u, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(l, m, n, r);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
  return function() {
    var f = function(h) {
      h = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(e), h);
      for (var k = cljs.core.next(e);;) {
        if (k) {
          var l = cljs.core.first(k);
          h = l.cljs$core$IFn$_invoke$arity$1 ? l.cljs$core$IFn$_invoke$arity$1(h) : l.call(null, h);
          k = cljs.core.next(k);
        } else {
          return h;
        }
      }
    }, g = function(h) {
      var k = null;
      if (0 < arguments.length) {
        k = 0;
        for (var l = Array(arguments.length - 0); k < l.length;) {
          l[k] = arguments[k + 0], ++k;
        }
        k = new cljs.core.IndexedSeq(l, 0, null);
      }
      return f.call(this, k);
    };
    g.cljs$lang$maxFixedArity = 0;
    g.cljs$lang$applyTo = function(h) {
      h = cljs.core.seq(h);
      return f(h);
    };
    g.cljs$core$IFn$_invoke$arity$variadic = f;
    return g;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
    }, e = function(k) {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, k) : a.call(null, b, k);
    }, f = function(k, l) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, k, l) : a.call(null, b, k, l);
    }, g = function(k, l, m) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, k, l, m) : a.call(null, b, k, l, m);
    }, h = function() {
      var k = function(m, n, p, r) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, m, n, p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r], 0));
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    c = function(k, l, m, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, k);
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    }, f = function(l) {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, l) : a.call(null, b, c, l);
    }, g = function(l, m) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, l, m) : a.call(null, b, c, l, m);
    }, h = function(l, m, n) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, l, m, n) : a.call(null, b, c, l, m, n);
    }, k = function() {
      var l = function(n, p, r, u) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, n, p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r, u], 0));
      }, m = function(n, p, r, u) {
        var z = null;
        if (3 < arguments.length) {
          z = 0;
          for (var D = Array(arguments.length - 3); z < D.length;) {
            D[z] = arguments[z + 3], ++z;
          }
          z = new cljs.core.IndexedSeq(D, 0, null);
        }
        return l.call(this, n, p, r, z);
      };
      m.cljs$lang$maxFixedArity = 3;
      m.cljs$lang$applyTo = function(n) {
        var p = cljs.core.first(n);
        n = cljs.core.next(n);
        var r = cljs.core.first(n);
        n = cljs.core.next(n);
        var u = cljs.core.first(n);
        n = cljs.core.rest(n);
        return l(p, r, u, n);
      };
      m.cljs$core$IFn$_invoke$arity$variadic = l;
      return m;
    }();
    d = function(l, m, n, p) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, l);
        case 2:
          return g.call(this, l, m);
        case 3:
          return h.call(this, l, m, n);
        default:
          var r = null;
          if (3 < arguments.length) {
            r = 0;
            for (var u = Array(arguments.length - 3); r < u.length;) {
              u[r] = arguments[r + 3], ++r;
            }
            r = new cljs.core.IndexedSeq(u, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(l, m, n, r);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function() {
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(b, c, d) : a.call(null, b, c, d);
    }, g = function(m) {
      return a.cljs$core$IFn$_invoke$arity$4 ? a.cljs$core$IFn$_invoke$arity$4(b, c, d, m) : a.call(null, b, c, d, m);
    }, h = function(m, n) {
      return a.cljs$core$IFn$_invoke$arity$5 ? a.cljs$core$IFn$_invoke$arity$5(b, c, d, m, n) : a.call(null, b, c, d, m, n);
    }, k = function(m, n, p) {
      return a.cljs$core$IFn$_invoke$arity$6 ? a.cljs$core$IFn$_invoke$arity$6(b, c, d, m, n, p) : a.call(null, b, c, d, m, n, p);
    }, l = function() {
      var m = function(p, r, u, z) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, p, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([r, u, z], 0));
      }, n = function(p, r, u, z) {
        var D = null;
        if (3 < arguments.length) {
          D = 0;
          for (var H = Array(arguments.length - 3); D < H.length;) {
            H[D] = arguments[D + 3], ++D;
          }
          D = new cljs.core.IndexedSeq(H, 0, null);
        }
        return m.call(this, p, r, u, D);
      };
      n.cljs$lang$maxFixedArity = 3;
      n.cljs$lang$applyTo = function(p) {
        var r = cljs.core.first(p);
        p = cljs.core.next(p);
        var u = cljs.core.first(p);
        p = cljs.core.next(p);
        var z = cljs.core.first(p);
        p = cljs.core.rest(p);
        return m(r, u, z, p);
      };
      n.cljs$core$IFn$_invoke$arity$variadic = m;
      return n;
    }();
    e = function(m, n, p, r) {
      switch(arguments.length) {
        case 0:
          return f.call(this);
        case 1:
          return g.call(this, m);
        case 2:
          return h.call(this, m, n);
        case 3:
          return k.call(this, m, n, p);
        default:
          var u = null;
          if (3 < arguments.length) {
            u = 0;
            for (var z = Array(arguments.length - 3); u < z.length;) {
              z[u] = arguments[u + 3], ++u;
            }
            u = new cljs.core.IndexedSeq(z, 0, null);
          }
          return l.cljs$core$IFn$_invoke$arity$variadic(m, n, p, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = l.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$0 = f;
    e.cljs$core$IFn$_invoke$arity$1 = g;
    e.cljs$core$IFn$_invoke$arity$2 = h;
    e.cljs$core$IFn$_invoke$arity$3 = k;
    e.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return function() {
    var f = function(h) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, b, c, d, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(e, h));
    }, g = function(h) {
      var k = null;
      if (0 < arguments.length) {
        k = 0;
        for (var l = Array(arguments.length - 0); k < l.length;) {
          l[k] = arguments[k + 0], ++k;
        }
        k = new cljs.core.IndexedSeq(l, 0, null);
      }
      return f.call(this, k);
    };
    g.cljs$lang$maxFixedArity = 0;
    g.cljs$lang$applyTo = function(h) {
      h = cljs.core.seq(h);
      return f(h);
    };
    g.cljs$core$IFn$_invoke$arity$variadic = f;
    return g;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(h) {
      h = null == h ? b : h;
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
    }, e = function(h, k) {
      h = null == h ? b : h;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(h, k) : a.call(null, h, k);
    }, f = function(h, k, l) {
      h = null == h ? b : h;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(h, k, l) : a.call(null, h, k, l);
    }, g = function() {
      var h = function(l, m, n, p) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == l ? b : l, m, n, p);
      }, k = function(l, m, n, p) {
        var r = null;
        if (3 < arguments.length) {
          r = 0;
          for (var u = Array(arguments.length - 3); r < u.length;) {
            u[r] = arguments[r + 3], ++r;
          }
          r = new cljs.core.IndexedSeq(u, 0, null);
        }
        return h.call(this, l, m, n, r);
      };
      k.cljs$lang$maxFixedArity = 3;
      k.cljs$lang$applyTo = function(l) {
        var m = cljs.core.first(l);
        l = cljs.core.next(l);
        var n = cljs.core.first(l);
        l = cljs.core.next(l);
        var p = cljs.core.first(l);
        l = cljs.core.rest(l);
        return h(m, n, p, l);
      };
      k.cljs$core$IFn$_invoke$arity$variadic = h;
      return k;
    }();
    c = function(h, k, l, m) {
      switch(arguments.length) {
        case 1:
          return d.call(this, h);
        case 2:
          return e.call(this, h, k);
        case 3:
          return f.call(this, h, k, l);
        default:
          var n = null;
          if (3 < arguments.length) {
            n = 0;
            for (var p = Array(arguments.length - 3); n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(h, k, l, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(h, k) {
      h = null == h ? b : h;
      k = null == k ? c : k;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(h, k) : a.call(null, h, k);
    }, f = function(h, k, l) {
      h = null == h ? b : h;
      k = null == k ? c : k;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(h, k, l) : a.call(null, h, k, l);
    }, g = function() {
      var h = function(l, m, n, p) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == l ? b : l, null == m ? c : m, n, p);
      }, k = function(l, m, n, p) {
        var r = null;
        if (3 < arguments.length) {
          r = 0;
          for (var u = Array(arguments.length - 3); r < u.length;) {
            u[r] = arguments[r + 3], ++r;
          }
          r = new cljs.core.IndexedSeq(u, 0, null);
        }
        return h.call(this, l, m, n, r);
      };
      k.cljs$lang$maxFixedArity = 3;
      k.cljs$lang$applyTo = function(l) {
        var m = cljs.core.first(l);
        l = cljs.core.next(l);
        var n = cljs.core.first(l);
        l = cljs.core.next(l);
        var p = cljs.core.first(l);
        l = cljs.core.rest(l);
        return h(m, n, p, l);
      };
      k.cljs$core$IFn$_invoke$arity$variadic = h;
      return k;
    }();
    d = function(h, k, l, m) {
      switch(arguments.length) {
        case 2:
          return e.call(this, h, k);
        case 3:
          return f.call(this, h, k, l);
        default:
          var n = null;
          if (3 < arguments.length) {
            n = 0;
            for (var p = Array(arguments.length - 3); n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(h, k, l, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = g.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$2 = e;
    d.cljs$core$IFn$_invoke$arity$3 = f;
    d.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return function() {
    var e = null, f = function(k, l) {
      k = null == k ? b : k;
      l = null == l ? c : l;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(k, l) : a.call(null, k, l);
    }, g = function(k, l, m) {
      k = null == k ? b : k;
      l = null == l ? c : l;
      m = null == m ? d : m;
      return a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(k, l, m) : a.call(null, k, l, m);
    }, h = function() {
      var k = function(m, n, p, r) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, null == m ? b : m, null == n ? c : n, null == p ? d : p, r);
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    e = function(k, l, m, n) {
      switch(arguments.length) {
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    e.cljs$lang$maxFixedArity = 3;
    e.cljs$lang$applyTo = h.cljs$lang$applyTo;
    e.cljs$core$IFn$_invoke$arity$2 = f;
    e.cljs$core$IFn$_invoke$arity$3 = g;
    e.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return e;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.volatile_BANG_(-1);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = c.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, c.cljs$core$IDeref$_deref$arity$1(null) + 1);
        k = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(l, k) : a.call(null, l, k);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(d, e) {
    return new cljs.core.LazySeq(null, function() {
      var g = cljs.core.seq(e);
      if (g) {
        if (cljs.core.chunked_seq_QMARK_(g)) {
          for (var h = cljs.core.chunk_first(g), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              cljs.core.chunk_append(l, function() {
                var n = d + m, p = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(n, p) : a.call(null, n, p);
              }()), m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(d + k, cljs.core.chunk_rest(g)));
        }
        return cljs.core.cons(function() {
          var n = cljs.core.first(g);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, n) : a.call(null, d, n);
        }(), f(d + 1, cljs.core.rest(g)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(g) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
      }, f = function(g, h) {
        h = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
        return null == h ? g : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, h) : b.call(null, g, h);
      };
      c = function(g, h) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, g);
          case 2:
            return f.call(this, g, h);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            var h = function() {
              var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
            }();
            null != h && cljs.core.chunk_append(f, h);
            g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      e = function() {
        var k = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      }();
      return null == e ? cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)) : cljs.core.cons(e, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(a, b, c, d) {
  this.state = a;
  this.meta = b;
  this.validator = c;
  this.watches = d;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return this === b;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(a, b, c) {
  a = cljs.core.seq(this.watches);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 0, null);
      g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(g, 1, null);
      g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        cljs.core.chunked_seq_QMARK_(a) ? (d = cljs.core.chunk_first(a), a = cljs.core.chunk_rest(a), h = d, e = cljs.core.count(d), d = h) : (d = cljs.core.first(a), h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null), g.cljs$core$IFn$_invoke$arity$4 ? g.cljs$core$IFn$_invoke$arity$4(h, this, b, c) : g.call(null, h, this, b, c), a = cljs.core.next(a), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(a, b, c) {
  this.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.watches, b, c);
  return this;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(a, b) {
  return this.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.watches, b);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = !0;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function(a, b, c, d) {
  return new cljs.core.Atom(a, b, c, d);
};
cljs.core.atom = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Atom(a, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.__destructure_map(b);
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(a, b, c, null);
};
cljs.core.atom.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function(a, b) {
  if (a instanceof cljs.core.Atom) {
    var c = a.validator;
    if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
      throw Error("Validator rejected reference state");
    }
    c = a.state;
    a.state = b;
    null != a.watches && a.cljs$core$IWatchable$_notify_watches$arity$3(null, c, b);
    return b;
  }
  return cljs.core._reset_BANG_(a, b);
};
cljs.core.reset_vals_BANG_ = function(a, b) {
  var c = a.validator;
  if (null != c && !cljs.core.truth_(c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(b) : c.call(null, b))) {
    throw Error("Validator rejected reference state");
  }
  c = a.state;
  a.state = b;
  null != a.watches && cljs.core._notify_watches(a, c, b);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
};
cljs.core.swap_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (a instanceof cljs.core.Atom) {
    var c = cljs.core, d = c.reset_BANG_, e = a.state;
    b = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
    return d.call(c, a, b);
  }
  return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (a instanceof cljs.core.Atom) {
    var d = cljs.core, e = d.reset_BANG_, f = a.state;
    b = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, c) : b.call(null, f, c);
    return e.call(d, a, b);
  }
  return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  if (a instanceof cljs.core.Atom) {
    var e = cljs.core, f = e.reset_BANG_, g = a.state;
    b = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(g, c, d) : b.call(null, g, c, d);
    return f.call(e, a, b);
  }
  return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return a instanceof cljs.core.Atom ? cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e)) : cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core, d = c.reset_vals_BANG_, e = a.state;
  b = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
  return d.call(c, a, b);
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core, e = d.reset_vals_BANG_, f = a.state;
  b = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, c) : b.call(null, f, c);
  return e.call(d, a, b);
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core, f = e.reset_vals_BANG_, g = a.state;
  b = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(g, c, d) : b.call(null, g, c, d);
  return f.call(e, a, b);
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, a.state, c, d, e));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function(a, b, c) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), b) ? (cljs.core.reset_BANG_(a, c), !0) : !1;
};
cljs.core.set_validator_BANG_ = function(a, b) {
  var c;
  if (c = null != b) {
    c = cljs.core;
    var d = c.not;
    var e = cljs.core._deref(a);
    e = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e);
    c = d.call(c, e);
  }
  if (c) {
    throw Error("Validator rejected reference state");
  }
  return a.validator = b;
};
cljs.core.get_validator = function(a) {
  return a.validator;
};
cljs.core.Volatile = function(a) {
  this.state = a;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(a, b) {
  return this.state = b;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  return this.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Volatile.cljs$lang$type = !0;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_BANG_ = function(a) {
  return new cljs.core.Volatile(a);
};
cljs.core.volatile_QMARK_ = function(a) {
  return a instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function(a, b) {
  return cljs.core._vreset_BANG_(a, b);
};
cljs.core.keep_indexed = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.volatile_BANG_(-1);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = c.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, c.cljs$core$IDeref$_deref$arity$1(null) + 1);
        k = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(l, k) : a.call(null, l, k);
        return null == k ? h : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function f(d, e) {
    return new cljs.core.LazySeq(null, function() {
      var g = cljs.core.seq(e);
      if (g) {
        if (cljs.core.chunked_seq_QMARK_(g)) {
          for (var h = cljs.core.chunk_first(g), k = cljs.core.count(h), l = cljs.core.chunk_buffer(k), m = 0;;) {
            if (m < k) {
              var n = function() {
                var p = d + m, r = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(h, m);
                return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(p, r) : a.call(null, p, r);
              }();
              null != n && cljs.core.chunk_append(l, n);
              m += 1;
            } else {
              break;
            }
          }
          return cljs.core.chunk_cons(cljs.core.chunk(l), f(d + k, cljs.core.chunk_rest(g)));
        }
        k = function() {
          var p = cljs.core.first(g);
          return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(d, p) : a.call(null, d, p);
        }();
        return null == k ? f(d + 1, cljs.core.rest(g)) : cljs.core.cons(k, f(d + 1, cljs.core.rest(g)));
      }
      return null;
    }, null, null);
  }(0, b);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(g) {
      return cljs.core.boolean$(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g));
    }, d = function(g, h) {
      var k = cljs.core, l = k.boolean$;
      g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      h = cljs.core.truth_(g) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h) : g;
      return l.call(k, h);
    }, e = function(g, h, k) {
      var l = cljs.core, m = l.boolean$;
      g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      cljs.core.truth_(g) ? (h = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h), k = cljs.core.truth_(h) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k) : h) : k = g;
      return m.call(l, k);
    }, f = function() {
      var g = function(k, l, m, n) {
        var p = cljs.core, r = p.boolean$;
        k = b.cljs$core$IFn$_invoke$arity$3(k, l, m);
        n = cljs.core.truth_(k) ? cljs.core.every_QMARK_(a, n) : k;
        return r.call(p, n);
      }, h = function(k, l, m, n) {
        var p = null;
        if (3 < arguments.length) {
          p = 0;
          for (var r = Array(arguments.length - 3); p < r.length;) {
            r[p] = arguments[p + 3], ++p;
          }
          p = new cljs.core.IndexedSeq(r, 0, null);
        }
        return g.call(this, k, l, m, p);
      };
      h.cljs$lang$maxFixedArity = 3;
      h.cljs$lang$applyTo = function(k) {
        var l = cljs.core.first(k);
        k = cljs.core.next(k);
        var m = cljs.core.first(k);
        k = cljs.core.next(k);
        var n = cljs.core.first(k);
        k = cljs.core.rest(k);
        return g(l, m, n, k);
      };
      h.cljs$core$IFn$_invoke$arity$variadic = g;
      return h;
    }();
    b = function(g, h, k, l) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return c.call(this, g);
        case 2:
          return d.call(this, g, h);
        case 3:
          return e.call(this, g, h, k);
        default:
          var m = null;
          if (3 < arguments.length) {
            m = 0;
            for (var n = Array(arguments.length - 3); m < n.length;) {
              n[m] = arguments[m + 3], ++m;
            }
            m = new cljs.core.IndexedSeq(n, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(g, h, k, m);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(h) {
      var k = cljs.core, l = k.boolean$;
      var m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      h = cljs.core.truth_(m) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h) : m;
      return l.call(k, h);
    }, e = function(h, k) {
      return cljs.core.boolean$(function() {
        var l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
        return cljs.core.truth_(l) ? (l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k), cljs.core.truth_(l) ? (l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h), cljs.core.truth_(l) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k) : l) : l) : l;
      }());
    }, f = function(h, k, l) {
      return cljs.core.boolean$(function() {
        var m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
        return cljs.core.truth_(m) ? (m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k), cljs.core.truth_(m) ? (m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l), cljs.core.truth_(m) ? (m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h), cljs.core.truth_(m) ? (m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k), cljs.core.truth_(m) ? b.cljs$core$IFn$_invoke$arity$1 ? 
        b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l) : m) : m) : m) : m) : m;
      }());
    }, g = function() {
      var h = function(l, m, n, p) {
        return cljs.core.boolean$(function() {
          var r = c.cljs$core$IFn$_invoke$arity$3(l, m, n);
          return cljs.core.truth_(r) ? cljs.core.every_QMARK_(function(u) {
            var z = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(u) : a.call(null, u);
            return cljs.core.truth_(z) ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(u) : b.call(null, u) : z;
          }, p) : r;
        }());
      }, k = function(l, m, n, p) {
        var r = null;
        if (3 < arguments.length) {
          r = 0;
          for (var u = Array(arguments.length - 3); r < u.length;) {
            u[r] = arguments[r + 3], ++r;
          }
          r = new cljs.core.IndexedSeq(u, 0, null);
        }
        return h.call(this, l, m, n, r);
      };
      k.cljs$lang$maxFixedArity = 3;
      k.cljs$lang$applyTo = function(l) {
        var m = cljs.core.first(l);
        l = cljs.core.next(l);
        var n = cljs.core.first(l);
        l = cljs.core.next(l);
        var p = cljs.core.first(l);
        l = cljs.core.rest(l);
        return h(m, n, p, l);
      };
      k.cljs$core$IFn$_invoke$arity$variadic = h;
      return k;
    }();
    c = function(h, k, l, m) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return d.call(this, h);
        case 2:
          return e.call(this, h, k);
        case 3:
          return f.call(this, h, k, l);
        default:
          var n = null;
          if (3 < arguments.length) {
            n = 0;
            for (var p = Array(arguments.length - 3); n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(h, k, l, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(k) {
      var l = cljs.core, m = l.boolean$;
      var n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      cljs.core.truth_(n) ? (n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k), k = cljs.core.truth_(n) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k) : n) : k = n;
      return m.call(l, k);
    }, f = function(k, l) {
      return cljs.core.boolean$(function() {
        var m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
        return cljs.core.truth_(m) ? (m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l), cljs.core.truth_(m) ? (m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k), cljs.core.truth_(m) ? (m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l), cljs.core.truth_(m) ? (m = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k), cljs.core.truth_(m) ? c.cljs$core$IFn$_invoke$arity$1 ? 
        c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l) : m) : m) : m) : m) : m;
      }());
    }, g = function(k, l, m) {
      return cljs.core.boolean$(function() {
        var n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
        return cljs.core.truth_(n) ? (n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l), cljs.core.truth_(n) ? (n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(m) : a.call(null, m), cljs.core.truth_(n) ? (n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k), cljs.core.truth_(n) ? (n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l), cljs.core.truth_(n) ? (n = 
        b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(m) : b.call(null, m), cljs.core.truth_(n) ? (n = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k), cljs.core.truth_(n) ? (n = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l), cljs.core.truth_(n) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(m) : c.call(null, m) : n) : n) : n) : n) : n) : n) : n) : n;
      }());
    }, h = function() {
      var k = function(m, n, p, r) {
        return cljs.core.boolean$(function() {
          var u = d.cljs$core$IFn$_invoke$arity$3(m, n, p);
          return cljs.core.truth_(u) ? cljs.core.every_QMARK_(function(z) {
            var D = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(z) : a.call(null, z);
            return cljs.core.truth_(D) ? (D = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(z) : b.call(null, z), cljs.core.truth_(D) ? c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(z) : c.call(null, z) : D) : D;
          }, r) : u;
        }());
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    d = function(k, l, m, n) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return e.call(this, k);
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  return function() {
    var f = null, g = function(m) {
      return cljs.core.every_QMARK_(function(n) {
        return n.cljs$core$IFn$_invoke$arity$1 ? n.cljs$core$IFn$_invoke$arity$1(m) : n.call(null, m);
      }, e);
    }, h = function(m, n) {
      return cljs.core.every_QMARK_(function(p) {
        var r = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(m) : p.call(null, m);
        return cljs.core.truth_(r) ? p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(n) : p.call(null, n) : r;
      }, e);
    }, k = function(m, n, p) {
      return cljs.core.every_QMARK_(function(r) {
        var u = r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(m) : r.call(null, m);
        return cljs.core.truth_(u) ? (u = r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(n) : r.call(null, n), cljs.core.truth_(u) ? r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(p) : r.call(null, p) : u) : u;
      }, e);
    }, l = function() {
      var m = function(p, r, u, z) {
        return cljs.core.boolean$(function() {
          var D = f.cljs$core$IFn$_invoke$arity$3(p, r, u);
          return cljs.core.truth_(D) ? cljs.core.every_QMARK_(function(H) {
            return cljs.core.every_QMARK_(H, z);
          }, e) : D;
        }());
      }, n = function(p, r, u, z) {
        var D = null;
        if (3 < arguments.length) {
          D = 0;
          for (var H = Array(arguments.length - 3); D < H.length;) {
            H[D] = arguments[D + 3], ++D;
          }
          D = new cljs.core.IndexedSeq(H, 0, null);
        }
        return m.call(this, p, r, u, D);
      };
      n.cljs$lang$maxFixedArity = 3;
      n.cljs$lang$applyTo = function(p) {
        var r = cljs.core.first(p);
        p = cljs.core.next(p);
        var u = cljs.core.first(p);
        p = cljs.core.next(p);
        var z = cljs.core.first(p);
        p = cljs.core.rest(p);
        return m(r, u, z, p);
      };
      n.cljs$core$IFn$_invoke$arity$variadic = m;
      return n;
    }();
    f = function(m, n, p, r) {
      switch(arguments.length) {
        case 0:
          return !0;
        case 1:
          return g.call(this, m);
        case 2:
          return h.call(this, m, n);
        case 3:
          return k.call(this, m, n, p);
        default:
          var u = null;
          if (3 < arguments.length) {
            u = 0;
            for (var z = Array(arguments.length - 3); u < z.length;) {
              z[u] = arguments[u + 3], ++u;
            }
            u = new cljs.core.IndexedSeq(z, 0, null);
          }
          return l.cljs$core$IFn$_invoke$arity$variadic(m, n, p, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    f.cljs$lang$maxFixedArity = 3;
    f.cljs$lang$applyTo = l.cljs$lang$applyTo;
    f.cljs$core$IFn$_invoke$arity$0 = function() {
      return !0;
    };
    f.cljs$core$IFn$_invoke$arity$1 = g;
    f.cljs$core$IFn$_invoke$arity$2 = h;
    f.cljs$core$IFn$_invoke$arity$3 = k;
    f.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
    return f;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function(g) {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
    }, d = function(g, h) {
      g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      return cljs.core.truth_(g) ? g : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
    }, e = function(g, h, k) {
      g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      if (cljs.core.truth_(g)) {
        return g;
      }
      h = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      return cljs.core.truth_(h) ? h : a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
    }, f = function() {
      var g = function(k, l, m, n) {
        k = b.cljs$core$IFn$_invoke$arity$3(k, l, m);
        return cljs.core.truth_(k) ? k : cljs.core.some(a, n);
      }, h = function(k, l, m, n) {
        var p = null;
        if (3 < arguments.length) {
          p = 0;
          for (var r = Array(arguments.length - 3); p < r.length;) {
            r[p] = arguments[p + 3], ++p;
          }
          p = new cljs.core.IndexedSeq(r, 0, null);
        }
        return g.call(this, k, l, m, p);
      };
      h.cljs$lang$maxFixedArity = 3;
      h.cljs$lang$applyTo = function(k) {
        var l = cljs.core.first(k);
        k = cljs.core.next(k);
        var m = cljs.core.first(k);
        k = cljs.core.next(k);
        var n = cljs.core.first(k);
        k = cljs.core.rest(k);
        return g(l, m, n, k);
      };
      h.cljs$core$IFn$_invoke$arity$variadic = g;
      return h;
    }();
    b = function(g, h, k, l) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return c.call(this, g);
        case 2:
          return d.call(this, g, h);
        case 3:
          return e.call(this, g, h, k);
        default:
          var m = null;
          if (3 < arguments.length) {
            m = 0;
            for (var n = Array(arguments.length - 3); m < n.length;) {
              n[m] = arguments[m + 3], ++m;
            }
            m = new cljs.core.IndexedSeq(n, 0, null);
          }
          return f.cljs$core$IFn$_invoke$arity$variadic(g, h, k, m);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = f.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    b.cljs$core$IFn$_invoke$arity$1 = c;
    b.cljs$core$IFn$_invoke$arity$2 = d;
    b.cljs$core$IFn$_invoke$arity$3 = e;
    b.cljs$core$IFn$_invoke$arity$variadic = f.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function(h) {
      var k = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      return cljs.core.truth_(k) ? k : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
    }, e = function(h, k) {
      var l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      if (cljs.core.truth_(l)) {
        return l;
      }
      l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      if (cljs.core.truth_(l)) {
        return l;
      }
      h = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      return cljs.core.truth_(h) ? h : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
    }, f = function(h, k, l) {
      var m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      if (cljs.core.truth_(m)) {
        return m;
      }
      m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      if (cljs.core.truth_(m)) {
        return m;
      }
      m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
      if (cljs.core.truth_(m)) {
        return m;
      }
      h = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      if (cljs.core.truth_(h)) {
        return h;
      }
      k = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      return cljs.core.truth_(k) ? k : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
    }, g = function() {
      var h = function(l, m, n, p) {
        l = c.cljs$core$IFn$_invoke$arity$3(l, m, n);
        return cljs.core.truth_(l) ? l : cljs.core.some(function(r) {
          var u = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(r) : a.call(null, r);
          return cljs.core.truth_(u) ? u : b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(r) : b.call(null, r);
        }, p);
      }, k = function(l, m, n, p) {
        var r = null;
        if (3 < arguments.length) {
          r = 0;
          for (var u = Array(arguments.length - 3); r < u.length;) {
            u[r] = arguments[r + 3], ++r;
          }
          r = new cljs.core.IndexedSeq(u, 0, null);
        }
        return h.call(this, l, m, n, r);
      };
      k.cljs$lang$maxFixedArity = 3;
      k.cljs$lang$applyTo = function(l) {
        var m = cljs.core.first(l);
        l = cljs.core.next(l);
        var n = cljs.core.first(l);
        l = cljs.core.next(l);
        var p = cljs.core.first(l);
        l = cljs.core.rest(l);
        return h(m, n, p, l);
      };
      k.cljs$core$IFn$_invoke$arity$variadic = h;
      return k;
    }();
    c = function(h, k, l, m) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return d.call(this, h);
        case 2:
          return e.call(this, h, k);
        case 3:
          return f.call(this, h, k, l);
        default:
          var n = null;
          if (3 < arguments.length) {
            n = 0;
            for (var p = Array(arguments.length - 3); n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(h, k, l, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = g.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    c.cljs$core$IFn$_invoke$arity$1 = d;
    c.cljs$core$IFn$_invoke$arity$2 = e;
    c.cljs$core$IFn$_invoke$arity$3 = f;
    c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function(k) {
      var l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      if (cljs.core.truth_(l)) {
        return l;
      }
      l = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      return cljs.core.truth_(l) ? l : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k);
    }, f = function(k, l) {
      var m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      if (cljs.core.truth_(m)) {
        return m;
      }
      m = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
      if (cljs.core.truth_(m)) {
        return m;
      }
      m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      if (cljs.core.truth_(m)) {
        return m;
      }
      m = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      if (cljs.core.truth_(m)) {
        return m;
      }
      k = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k);
      return cljs.core.truth_(k) ? k : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l);
    }, g = function(k, l, m) {
      var n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
      if (cljs.core.truth_(n)) {
        return n;
      }
      n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
      if (cljs.core.truth_(n)) {
        return n;
      }
      n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(m) : a.call(null, m);
      if (cljs.core.truth_(n)) {
        return n;
      }
      n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      if (cljs.core.truth_(n)) {
        return n;
      }
      n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l);
      if (cljs.core.truth_(n)) {
        return n;
      }
      n = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(m) : b.call(null, m);
      if (cljs.core.truth_(n)) {
        return n;
      }
      k = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(k) : c.call(null, k);
      if (cljs.core.truth_(k)) {
        return k;
      }
      l = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l);
      return cljs.core.truth_(l) ? l : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(m) : c.call(null, m);
    }, h = function() {
      var k = function(m, n, p, r) {
        m = d.cljs$core$IFn$_invoke$arity$3(m, n, p);
        return cljs.core.truth_(m) ? m : cljs.core.some(function(u) {
          var z = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(u) : a.call(null, u);
          if (cljs.core.truth_(z)) {
            return z;
          }
          z = b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(u) : b.call(null, u);
          return cljs.core.truth_(z) ? z : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(u) : c.call(null, u);
        }, r);
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    d = function(k, l, m, n) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return e.call(this, k);
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = h.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    d.cljs$core$IFn$_invoke$arity$1 = e;
    d.cljs$core$IFn$_invoke$arity$2 = f;
    d.cljs$core$IFn$_invoke$arity$3 = g;
    d.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  return function() {
    var f = null, g = function(m) {
      return cljs.core.some(function(n) {
        return n.cljs$core$IFn$_invoke$arity$1 ? n.cljs$core$IFn$_invoke$arity$1(m) : n.call(null, m);
      }, e);
    }, h = function(m, n) {
      return cljs.core.some(function(p) {
        var r = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(m) : p.call(null, m);
        return cljs.core.truth_(r) ? r : p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(n) : p.call(null, n);
      }, e);
    }, k = function(m, n, p) {
      return cljs.core.some(function(r) {
        var u = r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(m) : r.call(null, m);
        if (cljs.core.truth_(u)) {
          return u;
        }
        u = r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(n) : r.call(null, n);
        return cljs.core.truth_(u) ? u : r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(p) : r.call(null, p);
      }, e);
    }, l = function() {
      var m = function(p, r, u, z) {
        p = f.cljs$core$IFn$_invoke$arity$3(p, r, u);
        return cljs.core.truth_(p) ? p : cljs.core.some(function(D) {
          return cljs.core.some(D, z);
        }, e);
      }, n = function(p, r, u, z) {
        var D = null;
        if (3 < arguments.length) {
          D = 0;
          for (var H = Array(arguments.length - 3); D < H.length;) {
            H[D] = arguments[D + 3], ++D;
          }
          D = new cljs.core.IndexedSeq(H, 0, null);
        }
        return m.call(this, p, r, u, D);
      };
      n.cljs$lang$maxFixedArity = 3;
      n.cljs$lang$applyTo = function(p) {
        var r = cljs.core.first(p);
        p = cljs.core.next(p);
        var u = cljs.core.first(p);
        p = cljs.core.next(p);
        var z = cljs.core.first(p);
        p = cljs.core.rest(p);
        return m(r, u, z, p);
      };
      n.cljs$core$IFn$_invoke$arity$variadic = m;
      return n;
    }();
    f = function(m, n, p, r) {
      switch(arguments.length) {
        case 0:
          return null;
        case 1:
          return g.call(this, m);
        case 2:
          return h.call(this, m, n);
        case 3:
          return k.call(this, m, n, p);
        default:
          var u = null;
          if (3 < arguments.length) {
            u = 0;
            for (var z = Array(arguments.length - 3); u < z.length;) {
              z[u] = arguments[u + 3], ++u;
            }
            u = new cljs.core.IndexedSeq(z, 0, null);
          }
          return l.cljs$core$IFn$_invoke$arity$variadic(m, n, p, u);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    f.cljs$lang$maxFixedArity = 3;
    f.cljs$lang$applyTo = l.cljs$lang$applyTo;
    f.cljs$core$IFn$_invoke$arity$0 = function() {
      return null;
    };
    f.cljs$core$IFn$_invoke$arity$1 = g;
    f.cljs$core$IFn$_invoke$arity$2 = h;
    f.cljs$core$IFn$_invoke$arity$3 = k;
    f.cljs$core$IFn$_invoke$arity$variadic = l.cljs$core$IFn$_invoke$arity$variadic;
    return f;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, f = function(h, k) {
        k = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      }, g = function() {
        var h = function(l, m, n) {
          m = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(a, m, n);
          return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(l, m) : b.call(null, l, m);
        }, k = function(l, m, n) {
          var p = null;
          if (2 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 2); p < r.length;) {
              r[p] = arguments[p + 2], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.call(this, l, m, p);
        };
        k.cljs$lang$maxFixedArity = 2;
        k.cljs$lang$applyTo = function(l) {
          var m = cljs.core.first(l);
          l = cljs.core.next(l);
          var n = cljs.core.first(l);
          l = cljs.core.rest(l);
          return h(m, n, l);
        };
        k.cljs$core$IFn$_invoke$arity$variadic = h;
        return k;
      }();
      c = function(h, k, l) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, h);
          case 2:
            return f.call(this, h, k);
          default:
            var m = null;
            if (2 < arguments.length) {
              m = 0;
              for (var n = Array(arguments.length - 2); m < n.length;) {
                n[m] = arguments[m + 2], ++m;
              }
              m = new cljs.core.IndexedSeq(n, 0, null);
            }
            return g.cljs$core$IFn$_invoke$arity$variadic(h, k, m);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$lang$maxFixedArity = 2;
      c.cljs$lang$applyTo = g.cljs$lang$applyTo;
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      c.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
      return c;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            cljs.core.chunk_append(f, function() {
              var h = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
              return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
            }()), g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      return cljs.core.cons(function() {
        var h = cljs.core.first(c);
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(b), e = cljs.core.seq(c);
    if (d && e) {
      var f = cljs.core, g = f.cons;
      var h = cljs.core.first(d);
      var k = cljs.core.first(e);
      h = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(h, k) : a.call(null, h, k);
      return g.call(f, h, cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, cljs.core.rest(d), cljs.core.rest(e)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(b), f = cljs.core.seq(c), g = cljs.core.seq(d);
    if (e && f && g) {
      var h = cljs.core, k = h.cons;
      var l = cljs.core.first(e);
      var m = cljs.core.first(f), n = cljs.core.first(g);
      l = a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(l, m, n) : a.call(null, l, m, n);
      return k.call(h, l, cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, cljs.core.rest(e), cljs.core.rest(f), cljs.core.rest(g)));
    }
    return null;
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(f) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, f);
  }, function h(g) {
    return new cljs.core.LazySeq(null, function() {
      var k = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, g);
      return cljs.core.every_QMARK_(cljs.core.identity, k) ? cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, k), h(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, k))) : null;
    }, null, null);
  }(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(e, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c, b], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    var c = cljs.core.volatile_BANG_(a);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = cljs.core.deref(c), m = c.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, c.cljs$core$IDeref$_deref$arity$1(null) - 1);
        h = 0 < l ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k) : h;
        return 0 < m ? h : cljs.core.ensure_reduced(h);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (0 < a) {
      var c = cljs.core.seq(b);
      return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take.cljs$core$IFn$_invoke$arity$2(a - 1, cljs.core.rest(c))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    var c = cljs.core.volatile_BANG_(a);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = cljs.core.deref(c);
        c.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, c.cljs$core$IDeref$_deref$arity$1(null) - 1);
        return 0 < l ? h : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    a: {
      for (var c = a, d = b;;) {
        if (d = cljs.core.seq(d), 0 < c && d) {
          --c, d = cljs.core.rest(d);
        } else {
          break a;
        }
      }
    }
    return d;
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, a);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    return c;
  }, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function(a, b) {
  var c = cljs.core.seq(b);
  for (a = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b));;) {
    if (a) {
      c = cljs.core.next(c), a = cljs.core.next(a);
    } else {
      return c;
    }
  }
};
cljs.core.drop_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.volatile_BANG_(!0);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = cljs.core.deref(c), m = cljs.core, n = m.truth_;
        l = cljs.core.truth_(l) ? a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k) : l;
        if (n.call(m, l)) {
          return h;
        }
        cljs.core.vreset_BANG_(c, null);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    a: {
      for (var c = a, d = b;;) {
        d = cljs.core.seq(d);
        var e = cljs.core, f = e.truth_, g;
        if (g = d) {
          g = cljs.core.first(d), g = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(g) : c.call(null, g);
        }
        if (f.call(e, g)) {
          d = cljs.core.rest(d);
        } else {
          break a;
        }
      }
    }
    return d;
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(a, b, c, d, e) {
  this.meta = a;
  this.all = b;
  this.prev = c;
  this.current = d;
  this._next = e;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Cycle.prototype.currentval = function() {
  if (!this.current) {
    var a = cljs.core.next(this.prev);
    this.current = a ? a : this.all;
  }
  return this.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return null != this.current;
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  for (var c = this, d = this.currentval(), e = cljs.core.first(d);;) {
    var f = function() {
      var g = cljs.core.next(d);
      return g ? g : c.all;
    }();
    a = function() {
      var g = e, h = cljs.core.first(f);
      return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, h) : b.call(null, g, h);
    }();
    if (cljs.core.reduced_QMARK_(a)) {
      return cljs.core.deref(a);
    }
    d = f;
    e = a;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (var d = this, e = this.currentval(), f = c;;) {
    c = function() {
      var g = f, h = cljs.core.first(e);
      return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, h) : b.call(null, g, h);
    }();
    if (cljs.core.reduced_QMARK_(c)) {
      return cljs.core.deref(c);
    }
    e = a = function() {
      var g = cljs.core.next(e);
      return g ? g : d.all;
    }();
    f = c;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this._next && (this._next = new cljs.core.Cycle(null, this.all, this.currentval(), null, null));
  return this._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.Cycle(b, this.all, this.prev, this.current, this._next);
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Cycle.cljs$lang$type = !0;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function(a, b, c, d, e) {
  return new cljs.core.Cycle(a, b, c, d, e);
};
cljs.core.cycle = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.Cycle(null, a, null, a, null) : cljs.core.List.EMPTY;
};
cljs.core.split_at = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.Repeat = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.val = c;
  this.next = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Repeat.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, this.count);
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.next ? 1 < this.count ? this.next = new cljs.core.Repeat(null, this.count - 1, this.val, null, null) : -1 === this.count ? this : null : this.next;
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return !1;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  if (-1 === this.count) {
    for (var c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(this.val, this.val) : b.call(null, this.val, this.val);;) {
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
    }
  } else {
    for (a = 1, c = this.val;;) {
      if (a < this.count) {
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
        a += 1;
      } else {
        return c;
      }
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  if (-1 === this.count) {
    for (c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);;) {
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
    }
  } else {
    for (a = 0;;) {
      if (a < this.count) {
        c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, this.val) : b.call(null, c, this.val);
        if (cljs.core.reduced_QMARK_(c)) {
          return cljs.core.deref(c);
        }
        a += 1;
      } else {
        return c;
      }
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return null == this.next ? 1 < this.count ? this.next = new cljs.core.Repeat(null, this.count - 1, this.val, null, null) : -1 === this.count ? this : cljs.core.List.EMPTY : this.next;
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.Repeat(b, this.count, this.val, this.next, null);
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Repeat.cljs$lang$type = !0;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function(a, b, c, d, e) {
  return new cljs.core.Repeat(a, b, c, d, e);
};
cljs.core.repeat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.Repeat(null, -1, a, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return 0 < a ? new cljs.core.Repeat(null, a, b, null, null) : cljs.core.List.EMPTY;
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(a));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(b));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(a, b, c, d, e) {
  this.meta = a;
  this.f = b;
  this.prev_seed = c;
  this.seed = d;
  this.next = e;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return this.seed !== cljs.core.UNREALIZED_SEED;
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  a = this.cljs$core$ISeq$_first$arity$1(null);
  var c = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(a) : this.f.call(null, a);
  for (a = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);;) {
    if (cljs.core.reduced_QMARK_(a)) {
      return cljs.core.deref(a);
    }
    c = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(c) : this.f.call(null, c);
    a = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(a, c) : b.call(null, a, c);
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = this.cljs$core$ISeq$_first$arity$1(null);
  for (c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);;) {
    if (cljs.core.reduced_QMARK_(c)) {
      return cljs.core.deref(c);
    }
    a = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(a) : this.f.call(null, a);
    c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  cljs.core.UNREALIZED_SEED === this.seed && (this.seed = this.f.cljs$core$IFn$_invoke$arity$1 ? this.f.cljs$core$IFn$_invoke$arity$1(this.prev_seed) : this.f.call(null, this.prev_seed));
  return this.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  null == this.next && (this.next = new cljs.core.Iterate(null, this.f, this.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null));
  return this.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.Iterate(b, this.f, this.prev_seed, this.seed, this.next);
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Iterate.cljs$lang$type = !0;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function(a, b, c, d, e) {
  return new cljs.core.Iterate(a, b, c, d, e);
};
cljs.core.iterate = function(a, b) {
  return new cljs.core.Iterate(null, a, null, b, null);
};
cljs.core.interleave = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return new cljs.core.LazySeq(null, function() {
    return a;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(a), d = cljs.core.seq(b);
    return c && d ? cljs.core.cons(cljs.core.first(c), cljs.core.cons(cljs.core.first(d), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(c), cljs.core.rest(d)))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(c, b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 0)));
    return cljs.core.every_QMARK_(cljs.core.identity, d) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, d), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, d))) : null;
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.volatile_BANG_(!1);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        if (cljs.core.truth_(cljs.core.deref(c))) {
          return h = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, a) : b.call(null, h, a), cljs.core.reduced_QMARK_(h) ? h : b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
        }
        cljs.core.vreset_BANG_(c, !0);
        return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function(a) {
  return function e(c, d) {
    return new cljs.core.LazySeq(null, function() {
      var f = cljs.core.seq(c);
      return f ? cljs.core.cons(cljs.core.first(f), e(cljs.core.rest(f), d)) : cljs.core.seq(d) ? e(cljs.core.first(d), cljs.core.rest(d)) : null;
    }, null, null);
  }(null, a);
};
cljs.core.mapcat = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(a), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, a, b));
};
cljs.core.mapcat.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(g) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
      }, f = function(g, h) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, h) : b.call(null, g, h) : g;
      };
      c = function(g, h) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, g);
          case 2:
            return f.call(this, g, h);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      if (cljs.core.chunked_seq_QMARK_(c)) {
        for (var d = cljs.core.chunk_first(c), e = cljs.core.count(d), f = cljs.core.chunk_buffer(e), g = 0;;) {
          if (g < e) {
            var h = cljs.core, k = h.truth_;
            var l = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g);
            l = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
            k.call(h, l) && cljs.core.chunk_append(f, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(d, g));
            g += 1;
          } else {
            break;
          }
        }
        return cljs.core.chunk_cons(cljs.core.chunk(f), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, cljs.core.chunk_rest(c)));
      }
      d = cljs.core.first(c);
      c = cljs.core.rest(c);
      return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? cljs.core.cons(d, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c)) : cljs.core.filter.cljs$core$IFn$_invoke$arity$2(a, c);
    }
    return null;
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(a));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(a), b);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function(a, b, c) {
  return function f(e) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(e, cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(e) : a.call(null, e)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e)], 0)) : null);
    }, null, null);
  }(c);
};
cljs.core.flatten = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(b) {
    return !cljs.core.sequential_QMARK_(b);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, a)));
};
cljs.core.into = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return null != a ? null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(a), b)), cljs.core.meta(a)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, a, b) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, a, b);
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$)) {
    var d = cljs.core.meta(a), e = function() {
      var f = null, g = function(k) {
        return cljs.core._with_meta(cljs.core.persistent_BANG_(k), d);
      }, h = function(k, l) {
        return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(k, l);
      };
      f = function(k, l) {
        switch(arguments.length) {
          case 1:
            return g.call(this, k);
          case 2:
            return h.call(this, k, l);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      f.cljs$core$IFn$_invoke$arity$1 = g;
      f.cljs$core$IFn$_invoke$arity$2 = h;
      return f;
    }();
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, e, cljs.core.transient$(a), c);
  }
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(b, cljs.core.conj, a, c);
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], b);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(c, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(a, b, c));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(a, b, c, d));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  e = cljs.core.next(e);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d)) ? cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(c, d) : c;
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), b));
};
cljs.core.partition = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    if (d) {
      var e = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d);
      return a === cljs.core.count(e) ? cljs.core.cons(e, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.LazySeq(null, function() {
    var e = cljs.core.seq(d);
    if (e) {
      var f = cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, e);
      return a === cljs.core.count(f) ? cljs.core.cons(f, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(a, b, c, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, e))) : new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(f, c)), null, 1, null);
    }
    return null;
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, a, b);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.lookup_sentinel;
  for (b = cljs.core.seq(b);;) {
    if (null != b) {
      a = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(b), d);
      if (d === a) {
        return c;
      }
      b = cljs.core.next(b);
    } else {
      return a;
    }
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function(a, b, c) {
  var d = cljs.core.seq(b);
  b = cljs.core.first(d);
  var e = cljs.core.next(d);
  if (e) {
    d = cljs.core.assoc;
    var f = d.cljs$core$IFn$_invoke$arity$3, g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
    c = cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(g, e, c) : cljs.core.assoc_in.call(null, g, e, c);
    return f.call(d, a, b, c);
  }
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, c);
};
cljs.core.update_in = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.seq(b);
  b = cljs.core.first(d);
  if (d = cljs.core.next(d)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, c));
  }
  d = cljs.core.assoc;
  var e = d.cljs$core$IFn$_invoke$arity$3, f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
  return e.call(d, a, b, c);
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.seq(b);
  b = cljs.core.first(e);
  if (e = cljs.core.next(e)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), e, c, d));
  }
  e = cljs.core.assoc;
  var f = e.cljs$core$IFn$_invoke$arity$3, g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(g, d) : c.call(null, g, d);
  return f.call(e, a, b, c);
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core.seq(b);
  b = cljs.core.first(f);
  if (f = cljs.core.next(f)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), f, c, d, e));
  }
  f = cljs.core.assoc;
  var g = f.cljs$core$IFn$_invoke$arity$3, h = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(h, d, e) : c.call(null, h, d, e);
  return g.call(f, a, b, c);
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.seq(b);
  b = cljs.core.first(g);
  if (g = cljs.core.next(g)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), g, c, d, e, f));
  }
  g = cljs.core.assoc;
  var h = g.cljs$core$IFn$_invoke$arity$3, k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(k, d, e, f) : c.call(null, k, d, e, f);
  return h.call(g, a, b, c);
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  var h = cljs.core.seq(b);
  b = cljs.core.first(h);
  return (h = cljs.core.next(h)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), h, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g], 0))) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 
  0)));
};
cljs.core.update_in.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], b);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.assoc, e = d.cljs$core$IFn$_invoke$arity$3, f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
  return e.call(d, a, b, c);
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.assoc, f = e.cljs$core$IFn$_invoke$arity$3, g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(g, d) : c.call(null, g, d);
  return f.call(e, a, b, c);
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core.assoc, g = f.cljs$core$IFn$_invoke$arity$3, h = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(h, d, e) : c.call(null, h, d, e);
  return g.call(f, a, b, c);
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.assoc, h = g.cljs$core$IFn$_invoke$arity$3, k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b);
  c = c.cljs$core$IFn$_invoke$arity$4 ? c.cljs$core$IFn$_invoke$arity$4(k, d, e, f) : c.call(null, k, d, e, f);
  return h.call(g, a, b, c);
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, e, f, g) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(c, cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, b), d, e, f, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([g], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  var e = cljs.core.next(d);
  d = cljs.core.first(e);
  var f = cljs.core.next(e);
  e = cljs.core.first(f);
  var g = cljs.core.next(f);
  f = cljs.core.first(g);
  g = cljs.core.next(g);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d, e, f, g);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(a, b) {
  this.edit = a;
  this.arr = b;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = !0;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function(a, b) {
  return new cljs.core.VectorNode(a, b);
};
cljs.core.pv_fresh_node = function(a) {
  return new cljs.core.VectorNode(a, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function(a, b) {
  return a.arr[b];
};
cljs.core.pv_aset = function(a, b, c) {
  return a.arr[b] = c;
};
cljs.core.pv_clone_node = function(a) {
  return new cljs.core.VectorNode(a.edit, cljs.core.aclone(a.arr));
};
cljs.core.tail_off = function(a) {
  a = a.cnt;
  return 32 > a ? 0 : a - 1 >>> 5 << 5;
};
cljs.core.new_path = function(a, b, c) {
  for (;;) {
    if (0 === b) {
      return c;
    }
    var d = cljs.core.pv_fresh_node(a);
    cljs.core.pv_aset(d, 0, c);
    c = d;
    b -= 5;
  }
};
cljs.core.push_tail = function(a, b, c, d) {
  var e = cljs.core.pv_clone_node(c), f = a.cnt - 1 >>> b & 31;
  5 === b ? cljs.core.pv_aset(e, f, d) : (c = cljs.core.pv_aget(c, f), null != c ? (b -= 5, a = cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : cljs.core.push_tail.call(null, a, b, c, d)) : a = cljs.core.new_path(null, b - 5, d), cljs.core.pv_aset(e, f, a));
  return e;
};
cljs.core.vector_index_out_of_bounds = function(a, b) {
  throw Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.first_array_for_longvec = function(a) {
  var b = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      b = cljs.core.pv_aget(b, 0), a -= 5;
    } else {
      return b.arr;
    }
  }
};
cljs.core.unchecked_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  var c = a.root;
  for (a = a.shift;;) {
    if (0 < a) {
      c = cljs.core.pv_aget(c, b >>> a & 31), a -= 5;
    } else {
      return c.arr;
    }
  }
};
cljs.core.array_for = function(a, b) {
  return 0 <= b && b < a.cnt ? cljs.core.unchecked_array_for(a, b) : cljs.core.vector_index_out_of_bounds(b, a.cnt);
};
cljs.core.do_assoc = function(a, b, c, d, e) {
  var f = cljs.core.pv_clone_node(c);
  if (0 === b) {
    cljs.core.pv_aset(f, d & 31, e);
  } else {
    var g = d >>> b & 31, h = cljs.core, k = h.pv_aset;
    b -= 5;
    c = cljs.core.pv_aget(c, g);
    a = cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : cljs.core.do_assoc.call(null, a, b, c, d, e);
    k.call(h, f, g, a);
  }
  return f;
};
cljs.core.pop_tail = function(a, b, c) {
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    c = cljs.core.pv_clone_node(c);
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  c = cljs.core.pv_clone_node(c);
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.RangedIterator = function(a, b, c, d, e, f) {
  this.i = a;
  this.base = b;
  this.arr = c;
  this.v = d;
  this.start = e;
  this.end = f;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  return this.i < this.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  32 === this.i - this.base && (this.arr = cljs.core.unchecked_array_for(this.v, this.i), this.base += 32);
  var a = this.arr[this.i & 31];
  this.i += 1;
  return a;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = !0;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function(a, b, c, d, e, f) {
  return new cljs.core.RangedIterator(a, b, c, d, e, f);
};
cljs.core.ranged_iterator = function(a, b, c) {
  return new cljs.core.RangedIterator(b, b - b % 32, b < cljs.core.count(a) ? cljs.core.unchecked_array_for(a, b) : null, a, b, c);
};
cljs.core.pv_reduce = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return c < d ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(a, b, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, c), c + 1, d) : b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = c;
  c = d;
  for (d = cljs.core.unchecked_array_for(a, d);;) {
    if (c < e) {
      var g = c & 31;
      d = 0 === g ? cljs.core.unchecked_array_for(a, c) : d;
      g = d[g];
      f = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(f, g) : b.call(null, f, g);
      if (cljs.core.reduced_QMARK_(f)) {
        return cljs.core.deref(f);
      }
      c += 1;
    } else {
      return f;
    }
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.shift = c;
  this.root = d;
  this.tail = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return 0 <= b && b < this.cnt ? new cljs.core.MapEntry(b, cljs.core.unchecked_array_for(this, b)[b & 31], null) : null;
};
cljs.core.PersistentVector.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentVector.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = f + a, h = e[f];
            d = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, g, h) : b.call(null, d, g, h);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return cljs.core.array_for(this, b)[b & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? cljs.core.unchecked_array_for(this, b)[b & 31] : c;
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  if (0 <= b && b < this.cnt) {
    return cljs.core.tail_off(this) <= b ? (a = cljs.core.aclone(this.tail), a[b & 31] = c, new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, a, null)) : new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, cljs.core.do_assoc(this, this.shift, this.root, b, c), this.tail, null);
  }
  if (b === this.cnt) {
    return this.cljs$core$ICollection$_conj$arity$2(null, c);
  }
  throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cnt), "]"].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.ranged_iterator(this, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentVector(this.meta, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return 0 < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, this.cnt - 1) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (0 === this.cnt) {
    throw Error("Can't pop empty vector");
  }
  if (1 === this.cnt) {
    return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
  }
  if (1 < this.cnt - cljs.core.tail_off(this)) {
    return new cljs.core.PersistentVector(this.meta, this.cnt - 1, this.shift, this.root, this.tail.slice(0, -1), null);
  }
  a = cljs.core.unchecked_array_for(this, this.cnt - 2);
  var b = cljs.core.pop_tail(this, this.shift, this.root);
  b = null == b ? cljs.core.PersistentVector.EMPTY_NODE : b;
  var c = this.cnt - 1;
  return 5 < this.shift && null == cljs.core.pv_aget(b, 1) ? new cljs.core.PersistentVector(this.meta, c, this.shift - 5, cljs.core.pv_aget(b, 0), a, null) : new cljs.core.PersistentVector(this.meta, c, this.shift, b, a, null);
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? new cljs.core.RSeq(this, this.cnt - 1, null) : null;
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (b instanceof cljs.core.PersistentVector) {
    if (this.cnt === cljs.core.count(b)) {
      for (a = this.cljs$core$IIterable$_iterator$arity$1(null), b = b.cljs$core$IIterable$_iterator$arity$1(null);;) {
        if (a.hasNext()) {
          var c = a.next(), d = b.next();
          if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, d)) {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return cljs.core.equiv_sequential(this, b);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientVector(this.cnt, this.shift, cljs.core.tv_editable_root(this.root), cljs.core.tv_editable_tail(this.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this, b, 0, this.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  a = 0;
  for (var d = c;;) {
    if (a < this.cnt) {
      var e = cljs.core.unchecked_array_for(this, a);
      c = e.length;
      a: {
        for (var f = 0;;) {
          if (f < c) {
            var g = e[f];
            d = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(d, g) : b.call(null, d, g);
            if (cljs.core.reduced_QMARK_(d)) {
              e = d;
              break a;
            }
            f += 1;
          } else {
            e = d;
            break a;
          }
        }
      }
      if (cljs.core.reduced_QMARK_(e)) {
        return cljs.core.deref(e);
      }
      a += c;
      d = e;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Vector's key for assoc must be a number.");
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return cljs.core.integer_QMARK_(b) ? 0 <= b && b < this.cnt : !1;
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 === this.cnt ? null : 32 >= this.cnt ? new cljs.core.IndexedSeq(this.tail, 0, null) : cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this, cljs.core.first_array_for_longvec(this), 0, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentVector(b, this.cnt, this.shift, this.root, this.tail, this.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (32 > this.cnt - cljs.core.tail_off(this)) {
    a = this.tail.length;
    for (var c = Array(a + 1), d = 0;;) {
      if (d < a) {
        c[d] = this.tail[d], d += 1;
      } else {
        break;
      }
    }
    c[a] = b;
    return new cljs.core.PersistentVector(this.meta, this.cnt + 1, this.shift, this.root, c, null);
  }
  a = (c = this.cnt >>> 5 > 1 << this.shift) ? this.shift + 5 : this.shift;
  c ? (c = cljs.core.pv_fresh_node(null), cljs.core.pv_aset(c, 0, this.root), cljs.core.pv_aset(c, 1, cljs.core.new_path(null, this.shift, new cljs.core.VectorNode(null, this.tail)))) : c = cljs.core.push_tail(this, this.shift, this.root, new cljs.core.VectorNode(null, this.tail));
  return new cljs.core.PersistentVector(this.meta, this.cnt + 1, a, c, [b], null);
};
cljs.core.PersistentVector.prototype.call = function(a, b) {
  if ("number" === typeof b) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, b);
  }
  throw Error("Key must be integer");
};
cljs.core.PersistentVector.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" === typeof a) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, a);
  }
  throw Error("Key must be integer");
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = !0;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentVector(a, b, c, d, e, f);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(a, b) {
  var c = a.length;
  a = b ? a : cljs.core.aclone(a);
  if (32 > c) {
    return new cljs.core.PersistentVector(null, c, 5, cljs.core.PersistentVector.EMPTY_NODE, a, null);
  }
  var d = a.slice(0, 32);
  b = 32;
  for (var e = (new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, d, null)).cljs$core$IEditableCollection$_as_transient$arity$1(null);;) {
    if (b < c) {
      d = b + 1, e = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(e, a[b]), b = d;
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.vec = function(a) {
  return cljs.core.map_entry_QMARK_(a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(a), cljs.core.val(a)], null) : cljs.core.vector_QMARK_(a) ? cljs.core.with_meta(a, null) : cljs.core.array_QMARK_(a) ? cljs.core.PersistentVector.fromArray(a, !0) : cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), a));
};
cljs.core.vector = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return a instanceof cljs.core.IndexedSeq && 0 === a.i ? cljs.core.PersistentVector.fromArray(a.arr, !cljs.core.array_QMARK_(a.arr)) : cljs.core.vec(a);
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.ChunkedSeq = function(a, b, c, d, e, f) {
  this.vec = a;
  this.node = b;
  this.i = c;
  this.off = d;
  this.meta = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ChunkedSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? null : a) : this.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.vec, b, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.vec, b, c, this.i + this.off, cljs.core.count(this.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.node[this.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.off + 1 < this.node.length ? (a = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, this.node, this.i, this.off + 1), null == a ? cljs.core.List.EMPTY : a) : this.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(this.node, this.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(this.vec, this.node, this.i, this.off, b);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  a = this.i + this.node.length;
  return a < cljs.core._count(this.vec) ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(this.vec, cljs.core.unchecked_array_for(this.vec, a), a, 0) : null;
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = !0;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function(a, b, c, d, e, f) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, f);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.chunked_seq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ChunkedSeq(a, cljs.core.array_for(a, b), b, c, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  return new cljs.core.ChunkedSeq(a, b, c, d, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  return new cljs.core.ChunkedSeq(a, b, c, d, e, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(a, b, c, d, e) {
  this.meta = a;
  this.v = b;
  this.start = c;
  this.end = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  if (0 > b) {
    return null;
  }
  a = this.start + b;
  return a < this.end ? new cljs.core.MapEntry(b, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.v, a), null) : null;
};
cljs.core.Subvec.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Subvec.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.start;
  for (var d = 0;;) {
    if (a < this.end) {
      var e = d, f = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, a);
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 1;
      a += 1;
    } else {
      return c;
    }
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return 0 > b || this.end <= this.start + b ? cljs.core.vector_index_out_of_bounds(b, this.end - this.start) : cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.start + b);
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 > b || this.end <= this.start + b ? c : cljs.core._nth.cljs$core$IFn$_invoke$arity$3(this.v, this.start + b, c);
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  a = this.start + b;
  if (0 > b || this.end + 1 <= a) {
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  }
  b = cljs.core;
  var d = b.build_subvec, e = this.meta;
  c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.v, a, c);
  var f = this.end;
  a += 1;
  return d.call(b, e, c, this.start, f > a ? f : a, null);
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.ranged_iterator(this.v, this.start, this.end) : cljs.core.seq_iter(this);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Subvec(this.meta, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.end - this.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.start === this.end ? null : cljs.core._nth.cljs$core$IFn$_invoke$arity$2(this.v, this.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  if (this.start === this.end) {
    throw Error("Can't pop empty vector");
  }
  return cljs.core.build_subvec(this.meta, this.v, this.start, this.end - 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return this.start !== this.end ? new cljs.core.RSeq(this, this.end - this.start - 1, null) : null;
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, this.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(this.v, b, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return null != this.v && cljs.core.PROTOCOL_SENTINEL === this.v.cljs$core$APersistentVector$ ? cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(this.v, b, c, this.start, this.end) : cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$IVector$_assoc_n$arity$3(null, b, c);
  }
  throw Error("Subvec's key for assoc must be a number.");
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return cljs.core.integer_QMARK_(b) ? 0 <= b && b < this.end - this.start : !1;
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return function e(d) {
    return d === b.end ? null : cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b.v, d), new cljs.core.LazySeq(null, function() {
      return e(d + 1);
    }, null, null));
  }(b.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : cljs.core.build_subvec(b, this.v, this.start, this.end, this.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.build_subvec(this.meta, cljs.core._assoc_n(this.v, this.end, b), this.start, this.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.Subvec.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.Subvec.cljs$lang$type = !0;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function(a, b, c, d, e) {
  return new cljs.core.Subvec(a, b, c, d, e);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.build_subvec = function(a, b, c, d, e) {
  for (;;) {
    if (b instanceof cljs.core.Subvec) {
      c = b.start + c, d = b.start + d, b = b.v;
    } else {
      if (!cljs.core.vector_QMARK_(b)) {
        throw Error("v must satisfy IVector");
      }
      if (0 > c || d < c || d > cljs.core.count(b)) {
        throw Error("Index out of bounds");
      }
      return new cljs.core.Subvec(a, b, c, d, e);
    }
  }
};
cljs.core.subvec = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.count(a));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == b || null == c) {
    throw Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, a, b | 0, c | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function(a, b) {
  return a === b.edit ? b : new cljs.core.VectorNode(a, cljs.core.aclone(b.arr));
};
cljs.core.tv_editable_root = function(a) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(a.arr));
};
cljs.core.tv_editable_tail = function(a) {
  var b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(a, 0, b, 0, a.length);
  return b;
};
cljs.core.tv_push_tail = function(a, b, c, d) {
  c = cljs.core.tv_ensure_editable(a.root.edit, c);
  var e = a.cnt - 1 >>> b & 31, f = cljs.core, g = f.pv_aset;
  if (5 === b) {
    a = d;
  } else {
    var h = cljs.core.pv_aget(c, e);
    null != h ? (b -= 5, a = cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(a, b, h, d) : cljs.core.tv_push_tail.call(null, a, b, h, d)) : a = cljs.core.new_path(a.root.edit, b - 5, d);
  }
  g.call(f, c, e, a);
  return c;
};
cljs.core.tv_pop_tail = function(a, b, c) {
  c = cljs.core.tv_ensure_editable(a.root.edit, c);
  var d = a.cnt - 2 >>> b & 31;
  if (5 < b) {
    b -= 5;
    var e = cljs.core.pv_aget(c, d);
    a = cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(a, b, e) : cljs.core.tv_pop_tail.call(null, a, b, e);
    if (null == a && 0 === d) {
      return null;
    }
    cljs.core.pv_aset(c, d, a);
    return c;
  }
  if (0 === d) {
    return null;
  }
  cljs.core.pv_aset(c, d, null);
  return c;
};
cljs.core.unchecked_editable_array_for = function(a, b) {
  if (b >= cljs.core.tail_off(a)) {
    return a.tail;
  }
  var c = a.root, d = c;
  for (a = a.shift;;) {
    if (0 < a) {
      d = cljs.core.tv_ensure_editable(c.edit, cljs.core.pv_aget(d, b >>> a & 31)), a -= 5;
    } else {
      return d.arr;
    }
  }
};
cljs.core.TransientVector = function(a, b, c, d) {
  this.cnt = a;
  this.shift = b;
  this.root = c;
  this.tail = d;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (this.root.edit) {
    if (32 > this.cnt - cljs.core.tail_off(this)) {
      this.tail[this.cnt & 31] = b;
    } else {
      a = new cljs.core.VectorNode(this.root.edit, this.tail);
      var c = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      c[0] = b;
      this.tail = c;
      this.cnt >>> 5 > 1 << this.shift ? (b = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], c = this.shift + 5, b[0] = this.root, b[1] = cljs.core.new_path(this.root.edit, this.shift, a), this.root = new cljs.core.VectorNode(this.root.edit, b), this.shift = c) : this.root = cljs.core.tv_push_tail(this, this.shift, this.root, a);
    }
    this.cnt += 1;
    return this;
  }
  throw Error("conj! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    this.root.edit = null;
    a = this.cnt - cljs.core.tail_off(this);
    var b = Array(a);
    cljs.core.array_copy(this.tail, 0, b, 0, a);
    return new cljs.core.PersistentVector(null, this.cnt, this.shift, this.root, b, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if ("number" === typeof b) {
    return this.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, b, c);
  }
  throw Error("TransientVector's key for assoc! must be a number.");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(a, b, c) {
  var d = this;
  if (d.root.edit) {
    if (0 <= b && b < d.cnt) {
      return cljs.core.tail_off(this) <= b ? d.tail[b & 31] = c : (a = function() {
        return function h(f, g) {
          g = cljs.core.tv_ensure_editable(d.root.edit, g);
          if (0 === f) {
            cljs.core.pv_aset(g, b & 31, c);
          } else {
            var k = b >>> f & 31;
            cljs.core.pv_aset(g, k, h(f - 5, cljs.core.pv_aget(g, k)));
          }
          return g;
        }(d.shift, d.root);
      }(), d.root = a), this;
    }
    if (b === d.cnt) {
      return this.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, c);
    }
    throw Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d.cnt)].join(""));
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(a) {
  if (this.root.edit) {
    if (0 === this.cnt) {
      throw Error("Can't pop empty vector");
    }
    if (1 === this.cnt) {
      this.cnt = 0;
    } else {
      if (0 < (this.cnt - 1 & 31)) {
        --this.cnt;
      } else {
        a = cljs.core.unchecked_editable_array_for(this, this.cnt - 2);
        var b = cljs.core.tv_pop_tail(this, this.shift, this.root);
        b = null != b ? b : new cljs.core.VectorNode(this.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
        5 < this.shift && null == cljs.core.pv_aget(b, 1) ? (this.root = cljs.core.tv_ensure_editable(this.root.edit, cljs.core.pv_aget(b, 0)), this.shift -= 5) : this.root = b;
        --this.cnt;
        this.tail = a;
      }
    }
    return this;
  }
  throw Error("pop! after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.root.edit) {
    return this.cnt;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (this.root.edit) {
    return cljs.core.array_for(this, b)[b & 31];
  }
  throw Error("nth after persistent!");
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cnt ? this.cljs$core$IIndexed$_nth$arity$2(null, b) : c;
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  if (this.root.edit) {
    return "number" === typeof b ? this.cljs$core$IIndexed$_nth$arity$3(null, b, c) : c;
  }
  throw Error("lookup after persistent!");
};
cljs.core.TransientVector.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientVector.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = !0;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function(a, b, c, d) {
  return new cljs.core.TransientVector(a, b, c, d);
};
cljs.core.PersistentQueueIter = function(a, b) {
  this.fseq = a;
  this.riter = b;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var a = null != this.fseq && cljs.core.seq(this.fseq);
  return a ? a : (a = null != this.riter) ? this.riter.hasNext() : a;
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  if (null != this.fseq) {
    var a = cljs.core.first(this.fseq);
    this.fseq = cljs.core.next(this.fseq);
    return a;
  }
  if (null != this.riter && this.riter.hasNext()) {
    return this.riter.next();
  }
  throw Error("No such element");
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = !0;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function(a, b) {
  return new cljs.core.PersistentQueueIter(a, b);
};
cljs.core.PersistentQueueSeq = function(a, b, c, d) {
  this.meta = a;
  this.front = b;
  this.rear = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null != this.rear ? new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null) : null;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.List.EMPTY, this.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueueSeq(this.meta, a, this.rear, null) : null == this.rear ? this.cljs$core$IEmptyableCollection$_empty$arity$1(null) : new cljs.core.PersistentQueueSeq(this.meta, this.rear, null, null);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentQueueSeq(b, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = !0;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function(a, b, c, d) {
  return new cljs.core.PersistentQueueSeq(a, b, c, d);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.PersistentQueue = function(a, b, c, d, e) {
  this.meta = a;
  this.count = b;
  this.front = c;
  this.rear = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentQueue.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, this.count.cljs$core$IFn$_invoke$arity$1 ? this.count.cljs$core$IFn$_invoke$arity$1(this) : this.count.call(null, this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentQueueIter(this.front, cljs.core._iterator(this.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentQueue(this.meta, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return cljs.core.truth_(this.front) ? (a = cljs.core.next(this.front)) ? new cljs.core.PersistentQueue(this.meta, this.count - 1, a, this.rear, null) : new cljs.core.PersistentQueue(this.meta, this.count - 1, cljs.core.seq(this.rear), cljs.core.PersistentVector.EMPTY, null) : this;
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, this.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return cljs.core.rest(cljs.core.seq(this));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  a = cljs.core.seq(this.rear);
  var b = cljs.core, c = b.truth_;
  var d = this.front;
  d = cljs.core.truth_(d) ? d : a;
  return c.call(b, d) ? new cljs.core.PersistentQueueSeq(null, this.front, cljs.core.seq(a), null) : null;
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentQueue(b, this.count, this.front, this.rear, this.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.truth_(this.front)) {
    a = cljs.core.PersistentQueue;
    var c = this.meta, d = this.count + 1, e = this.front, f = cljs.core.conj, g = f.cljs$core$IFn$_invoke$arity$2;
    var h = this.rear;
    h = cljs.core.truth_(h) ? h : cljs.core.PersistentVector.EMPTY;
    return new a(c, d, e, g.call(f, h, b), null);
  }
  return new cljs.core.PersistentQueue(this.meta, this.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(this.front, b), cljs.core.PersistentVector.EMPTY, null);
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = !0;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function(a, b, c, d, e) {
  return new cljs.core.PersistentQueue(a, b, c, d, e);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return !1;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = !0;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function() {
  return new cljs.core.NeverEquiv();
};
cljs.core.never_equiv = new cljs.core.NeverEquiv();
cljs.core.equiv_map = function(a, b) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b) ? cljs.core.count(a) === cljs.core.count(b) ? (null != a ? a.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IKVReduce$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, a)) ? cljs.core.reduce_kv(function(c, d, e) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, d, cljs.core.never_equiv), e) ? !0 : cljs.core.reduced(!1);
  }, !0, a) : cljs.core.every_QMARK_(function(c) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(c), cljs.core.never_equiv), cljs.core.second(c));
  }, a) : null : null);
};
cljs.core.scan_array = function(a, b, c) {
  for (var d = c.length, e = 0;;) {
    if (e < d) {
      if (b === c[e]) {
        return e;
      }
      e += a;
    } else {
      return null;
    }
  }
};
cljs.core.obj_map_compare_keys = function(a, b) {
  a = cljs.core.hash(a);
  b = cljs.core.hash(b);
  return a < b ? -1 : a > b ? 1 : 0;
};
cljs.core.obj_map__GT_hash_map = function(a, b, c) {
  var d = a.keys, e = d.length, f = a.strobj;
  a = cljs.core.meta(a);
  for (var g = 0, h = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (g < e) {
      var k = d[g];
      g += 1;
      h = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, k, cljs.core.goog$module$goog$object.get.call(null, f, k));
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, b, c)), a);
    }
  }
};
cljs.core.obj_clone = function(a, b) {
  for (var c = {}, d = b.length, e = 0;;) {
    if (e < d) {
      var f = b[e], g = c, h = f;
      f = cljs.core.goog$module$goog$object.get.call(null, a, f);
      cljs.core.goog$module$goog$object.set.call(null, g, h, f);
      e += 1;
    } else {
      break;
    }
  }
  return c;
};
cljs.core.ObjMap = function(a, b, c, d, e) {
  this.meta = a;
  this.keys = b;
  this.strobj = c;
  this.update_count = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return "string" === typeof b && null != cljs.core.scan_array(1, b, this.keys) ? new cljs.core.MapEntry(b, this.strobj[b], null) : null;
};
cljs.core.ObjMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ObjMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return "string" === typeof b && null != cljs.core.scan_array(1, b, this.keys) ? this.strobj[b] : c;
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.keys.sort(cljs.core.obj_map_compare_keys);
  for (var d = c;;) {
    if (cljs.core.seq(a)) {
      var e = c = cljs.core.first(a);
      c = this.strobj[c];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, e, c) : b.call(null, d, e, c);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a = cljs.core.rest(a);
      d = c;
    } else {
      return d;
    }
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, this.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if ("string" === typeof b && null != cljs.core.scan_array(1, b, this.keys)) {
    a = cljs.core.aclone(this.keys);
    var c = cljs.core.obj_clone(this.strobj, this.keys);
    a.splice(cljs.core.scan_array(1, b, a), 1);
    delete c[b];
    return new cljs.core.ObjMap(this.meta, a, c, this.update_count + 1, null);
  }
  return this;
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if ("string" === typeof b) {
    if (this.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || this.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(this, b, c);
    }
    if (null != cljs.core.scan_array(1, b, this.keys)) {
      return a = cljs.core.obj_clone(this.strobj, this.keys), cljs.core.goog$module$goog$object.set.call(null, a, b, c), new cljs.core.ObjMap(this.meta, this.keys, a, this.update_count + 1, null);
    }
    a = cljs.core.obj_clone(this.strobj, this.keys);
    var d = cljs.core.aclone(this.keys);
    cljs.core.goog$module$goog$object.set.call(null, a, b, c);
    d.push(b);
    return new cljs.core.ObjMap(this.meta, d, a, this.update_count + 1, null);
  }
  return cljs.core.obj_map__GT_hash_map(this, b, c);
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return "string" === typeof b && null != cljs.core.scan_array(1, b, this.keys) ? !0 : !1;
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  var b = this;
  return 0 < b.keys.length ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(c) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b.strobj[c]], null);
  }, b.keys.sort(cljs.core.obj_map_compare_keys)) : null;
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.ObjMap(b, this.keys, this.strobj, this.update_count, this.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_(b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1)) : cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this, b);
};
cljs.core.ObjMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.ObjMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = !0;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function(a, b, c, d, e) {
  return new cljs.core.ObjMap(a, b, c, d, e);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(a, b) {
  return new cljs.core.ObjMap(null, a, b, 0, null);
};
cljs.core.RecordIter = function(a, b, c, d, e) {
  this.i = a;
  this.record = b;
  this.base_count = c;
  this.fields = d;
  this.ext_map_iter = e;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var a = this.i < this.base_count;
  return a ? a : this.ext_map_iter.hasNext();
};
cljs.core.RecordIter.prototype.next = function() {
  if (this.i < this.base_count) {
    var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(this.fields, this.i);
    this.i += 1;
    return new cljs.core.MapEntry(a, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(this.record, a), null);
  }
  return this.ext_map_iter.next();
};
cljs.core.RecordIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = !0;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function(a, b, c, d, e) {
  return new cljs.core.RecordIter(a, b, c, d, e);
};
cljs.core.ES6EntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s), b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null);
    a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 1, null);
    this.s = cljs.core.next(this.s);
    return {value:[b, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = !0;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function(a) {
  return new cljs.core.ES6EntriesIterator(a);
};
cljs.core.es6_entries_iterator = function(a) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(a));
};
cljs.core.ES6SetEntriesIterator = function(a) {
  this.s = a;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  if (null != this.s) {
    var a = cljs.core.first(this.s);
    this.s = cljs.core.next(this.s);
    return {value:[a, a], done:!1};
  }
  return {value:null, done:!0};
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = !0;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(a);
};
cljs.core.es6_set_entries_iterator = function(a) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(a));
};
cljs.core.array_index_of_nil_QMARK_ = function(a) {
  for (var b = a.length, c = 0;;) {
    if (b <= c) {
      return -1;
    }
    if (null == a[c]) {
      return c;
    }
    c += 2;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function(a, b) {
  var c = a.length;
  b = b.fqn;
  for (var d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (a[d] instanceof cljs.core.Keyword && b === a[d].fqn) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function(a, b) {
  var c = a.length;
  b = b.str;
  for (var d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (a[d] instanceof cljs.core.Symbol && b === a[d].str) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (b === a[d]) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function(a, b) {
  for (var c = a.length, d = 0;;) {
    if (c <= d) {
      return -1;
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, a[d])) {
      return d;
    }
    d += 2;
  }
};
cljs.core.array_index_of = function(a, b) {
  return b instanceof cljs.core.Keyword ? cljs.core.array_index_of_keyword_QMARK_(a, b) : "string" === typeof b || "number" === typeof b ? cljs.core.array_index_of_identical_QMARK_(a, b) : b instanceof cljs.core.Symbol ? cljs.core.array_index_of_symbol_QMARK_(a, b) : null == b ? cljs.core.array_index_of_nil_QMARK_(a) : cljs.core.array_index_of_equiv_QMARK_(a, b);
};
cljs.core.array_map_index_of = function(a, b) {
  return cljs.core.array_index_of(a.arr, b);
};
cljs.core.array_extend_kv = function(a, b, c) {
  for (var d = a.length, e = Array(d + 2), f = 0;;) {
    if (f < d) {
      e[f] = a[f], f += 1;
    } else {
      break;
    }
  }
  e[d] = b;
  e[d + 1] = c;
  return e;
};
cljs.core.array_map_extend_kv = function(a, b, c) {
  return cljs.core.array_extend_kv(a.arr, b, c);
};
cljs.core.MapEntry = function(a, b, c) {
  this.key = a;
  this.val = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.MapEntry.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = !0;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function(a, b, c) {
  return new cljs.core.MapEntry(a, b, c);
};
cljs.core.map_entry_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IMapEntry$ ? !0 : !1 : !1;
};
cljs.core.PersistentArrayMapSeq = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this._meta = c;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, null) : null;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return (this.arr.length - this.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return new cljs.core.MapEntry(this.arr[this.i], this.arr[this.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  return this.i < this.arr.length - 2 ? new cljs.core.PersistentArrayMapSeq(this.arr, this.i + 2, null) : cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this._meta ? this : new cljs.core.PersistentArrayMapSeq(this.arr, this.i, b);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = !0;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function(a, b, c) {
  return new cljs.core.PersistentArrayMapSeq(a, b, c);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.persistent_array_map_seq = function(a, b, c) {
  return b <= a.length - 2 ? new cljs.core.PersistentArrayMapSeq(a, b, c) : null;
};
cljs.core.PersistentArrayMapIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.cnt = c;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  return this.i < this.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var a = new cljs.core.MapEntry(this.arr[this.i], this.arr[this.i + 1], null);
  this.i += 2;
  return a;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = !0;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function(a, b, c) {
  return new cljs.core.PersistentArrayMapIterator(a, b, c);
};
cljs.core.PersistentArrayMap = function(a, b, c, d) {
  this.meta = a;
  this.cnt = b;
  this.arr = c;
  this.__hash = d;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? null : new cljs.core.MapEntry(this.arr[a], this.arr[a + 1], null);
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentArrayMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentArrayMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  return -1 === a ? c : this.arr[a + 1];
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.arr.length;
  for (var d = 0;;) {
    if (d < a) {
      var e = this.arr[d], f = this.arr[d + 1];
      c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, e, f) : b.call(null, c, e, f);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMapIterator(this.arr, 0, 2 * this.cnt);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (cljs.core.map_QMARK_(b) && !cljs.core.record_QMARK_(b)) {
    if (a = this.arr.length, this.cnt === b.cljs$core$ICounted$_count$arity$1(null)) {
      for (var c = 0;;) {
        if (c < a) {
          var d = b.cljs$core$ILookup$_lookup$arity$3(null, this.arr[c], cljs.core.lookup_sentinel);
          if (d !== cljs.core.lookup_sentinel) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[c + 1], d)) {
              c += 2;
            } else {
              return !1;
            }
          } else {
            return !1;
          }
        } else {
          return !0;
        }
      }
    } else {
      return !1;
    }
  } else {
    return !1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientArrayMap({}, this.arr.length, cljs.core.aclone(this.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, this.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (0 <= cljs.core.array_map_index_of(this, b)) {
    a = this.arr.length;
    var c = a - 2;
    if (0 === c) {
      return this.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    }
    c = Array(c);
    for (var d = 0, e = 0;;) {
      if (d >= a) {
        return new cljs.core.PersistentArrayMap(this.meta, this.cnt - 1, c, null);
      }
      cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, this.arr[d]) ? d += 2 : (c[e] = this.arr[d], c[e + 1] = this.arr[d + 1], e += 2, d += 2);
    }
  } else {
    return this;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.array_map_index_of(this, b);
  if (-1 === a) {
    return this.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (c = cljs.core.array_map_extend_kv(this, b, c), new cljs.core.PersistentArrayMap(this.meta, this.cnt + 1, c, null)) : cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, this), b, c), this.meta);
  }
  if (c === this.arr[a + 1]) {
    return this;
  }
  b = cljs.core.aclone(this.arr);
  b[a + 1] = c;
  return new cljs.core.PersistentArrayMap(this.meta, this.cnt, b, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return -1 !== cljs.core.array_map_index_of(this, b);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.persistent_array_map_seq(this.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentArrayMap(b, this.cnt, this.arr, this.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = cljs.core._assoc(a, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = !0;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function(a, b, c, d) {
  return new cljs.core.PersistentArrayMap(a, b, c, d);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(a, b, c) {
  a = b ? a : cljs.core.aclone(a);
  if (!c) {
    c = [];
    for (b = 0;;) {
      if (b < a.length) {
        var d = a[b], e = a[b + 1];
        -1 === cljs.core.array_index_of(c, d) && (c.push(d), c.push(e));
        b += 2;
      } else {
        break;
      }
    }
    a = c;
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(a) {
  for (var b = [], c = 0;;) {
    if (c < a.length) {
      var d = a[c], e = a[c + 1];
      if (-1 === cljs.core.array_index_of(b, d)) {
        var f = b;
        f.push(d);
        f.push(e);
      } else {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
      }
      c += 2;
    } else {
      break;
    }
  }
  return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
};
cljs.core.key_test = function(a, b) {
  return a === b ? !0 : cljs.core.keyword_identical_QMARK_(a, b) ? !0 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a, b);
};
cljs.core.pam_dupes_QMARK_ = function(a) {
  for (var b = 0;;) {
    if (b < a.length) {
      var c;
      a: {
        for (c = 0;;) {
          if (c < b) {
            var d = cljs.core.key_test(a[b], a[c]);
            if (d) {
              c = d;
              break a;
            } else {
              c = 2 + c;
            }
          } else {
            c = !1;
            break a;
          }
        }
      }
      if (c) {
        return c;
      }
      b = 2 + b;
    } else {
      return !1;
    }
  }
};
cljs.core.pam_new_size = function(a) {
  for (var b = 0, c = 0;;) {
    if (b < a.length) {
      var d;
      a: {
        for (d = 0;;) {
          if (d < b) {
            var e = cljs.core.key_test(a[b], a[d]);
            if (e) {
              d = e;
              break a;
            } else {
              d = 2 + d;
            }
          } else {
            d = !1;
            break a;
          }
        }
      }
      c = d ? c : c + 2;
      b = 2 + b;
    } else {
      return c;
    }
  }
};
cljs.core.pam_grow_seed_array = function(a, b) {
  var c = a.length - 1, d = cljs.core.seq(b);
  b = Array(c + 2 * cljs.core.count(d));
  a = cljs.core.array_copy(a, 0, b, 0, c);
  for (b = c;;) {
    if (d) {
      var e = cljs.core.first(d);
      a[b] = cljs.core._key(e);
      a[b + 1] = cljs.core._val(e);
      b = 2 + c;
      d = cljs.core.next(d);
    } else {
      return a;
    }
  }
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(a) {
  var b = a.length, c = 1 === (b & 1);
  return c || cljs.core.pam_dupes_QMARK_(a) ? cljs.core.PersistentArrayMap.createAsIfByAssocComplexPath(a, c) : new cljs.core.PersistentArrayMap(null, b / 2, a, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssocComplexPath = function(a, b) {
  var c = b ? cljs.core.pam_grow_seed_array(a, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, a[a.length - 1])) : a;
  a = cljs.core.pam_new_size(c);
  var d = c.length;
  if (a < d) {
    a = Array(a);
    for (var e = 0, f = 0;;) {
      if (e < d) {
        (function() {
          for (var g = 0;;) {
            if (g < f) {
              var h = cljs.core.key_test(c[e], c[g]);
              if (h) {
                return h;
              }
              g = 2 + g;
            } else {
              return !1;
            }
          }
        })() ? (b = f, e = 2 + e, f = b) : (b = function() {
          for (var g = d - 2;;) {
            if (g >= e) {
              if (cljs.core.key_test(c[e], c[g])) {
                return g;
              }
              g -= 2;
            } else {
              return g;
            }
          }
        }(), a[f] = c[e], a[f + 1] = c[b + 1], b = 2 + f, e = 2 + e, f = b);
      } else {
        break;
      }
    }
    return new cljs.core.PersistentArrayMap(null, a.length / 2, a, null);
  }
  return new cljs.core.PersistentArrayMap(null, c.length / 2, c, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.TransientArrayMap = function(a, b, c) {
  this.editable_QMARK_ = a;
  this.len = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.editable_QMARK_) {
    return cljs.core.quot(this.len, 2);
  }
  throw Error("count after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  if (this.editable_QMARK_) {
    return a = cljs.core.array_map_index_of(this, b), -1 === a ? c : this.arr[a + 1];
  }
  throw Error("lookup after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  if (this.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(b)) {
      return this.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(b), cljs.core.val(b));
    }
    if (cljs.core.vector_QMARK_(b)) {
      return this.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(0) : b.call(null, 0), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(1) : b.call(null, 1));
    }
    a = cljs.core.seq(b);
    for (b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = cljs.core._assoc_BANG_(b, cljs.core.key(c), cljs.core.val(c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  if (this.editable_QMARK_) {
    return this.editable_QMARK_ = !1, new cljs.core.PersistentArrayMap(null, cljs.core.quot(this.len, 2), this.arr, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  if (this.editable_QMARK_) {
    a = cljs.core.array_map_index_of(this, b);
    if (-1 === a) {
      return this.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD ? (this.len += 2, this.arr.push(b), this.arr.push(c), this) : cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(this.len, this.arr), b, c);
    }
    c !== this.arr[a + 1] && (this.arr[a + 1] = c);
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  if (this.editable_QMARK_) {
    return a = cljs.core.array_map_index_of(this, b), 0 <= a && (this.arr[a] = this.arr[this.len - 2], this.arr[a + 1] = this.arr[this.len - 1], a = this.arr, a.pop(), a.pop(), this.len -= 2), this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, null);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, null);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientArrayMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = !0;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function(a, b, c) {
  return new cljs.core.TransientArrayMap(a, b, c);
};
cljs.core.array__GT_transient_hash_map = function(a, b) {
  for (var c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < a) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, b[d], b[d + 1]), d += 2;
    } else {
      return c;
    }
  }
};
cljs.core.Box = function(a) {
  this.val = a;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Box.cljs$lang$type = !0;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Box");
};
cljs.core.__GT_Box = function(a) {
  return new cljs.core.Box(a);
};
cljs.core.mask = function(a, b) {
  return a >>> b & 31;
};
cljs.core.clone_and_set = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.aclone(a);
  a[b] = c;
  return a;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  a = cljs.core.aclone(a);
  a[b] = c;
  a[d] = e;
  return a;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function(a, b) {
  var c = Array(a.length - 2);
  cljs.core.array_copy(a, 0, c, 0, 2 * b);
  cljs.core.array_copy(a, 2 * (b + 1), c, 2 * b, c.length - 2 * b);
  return c;
};
cljs.core.bitmap_indexed_node_index = function(a, b) {
  return cljs.core.bit_count(a & b - 1);
};
cljs.core.bitpos = function(a, b) {
  return 1 << (a >>> b & 31);
};
cljs.core.edit_and_set = function(a) {
  switch(arguments.length) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  return a;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  a = a.ensure_editable(b);
  a.arr[c] = d;
  a.arr[e] = f;
  return a;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function(a, b, c) {
  for (var d = a.length, e = 0, f = c;;) {
    if (e < d) {
      c = a[e];
      if (null != c) {
        var g = a[e + 1];
        c = b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(f, c, g) : b.call(null, f, c, g);
      } else {
        c = a[e + 1], c = null != c ? c.kv_reduce(b, f) : f;
      }
      if (cljs.core.reduced_QMARK_(c)) {
        return c;
      }
      e += 2;
      f = c;
    } else {
      return f;
    }
  }
};
cljs.core.NodeIterator = function(a, b, c, d) {
  this.arr = a;
  this.i = b;
  this.next_entry = c;
  this.next_iter = d;
};
cljs.core.NodeIterator.prototype.advance = function() {
  for (var a = this.arr.length;;) {
    if (this.i < a) {
      var b = this.arr[this.i], c = this.arr[this.i + 1];
      null != b ? b = this.next_entry = new cljs.core.MapEntry(b, c, null) : null != c ? (b = cljs.core._iterator(c), b = b.hasNext() ? this.next_iter = b : !1) : b = !1;
      this.i += 2;
      if (b) {
        return !0;
      }
    } else {
      return !1;
    }
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var a = null != this.next_entry;
  return a ? a : (a = null != this.next_iter) ? a : this.advance();
};
cljs.core.NodeIterator.prototype.next = function() {
  if (null != this.next_entry) {
    var a = this.next_entry;
    this.next_entry = null;
    return a;
  }
  if (null != this.next_iter) {
    return a = this.next_iter.next(), this.next_iter.hasNext() || (this.next_iter = null), a;
  }
  if (this.advance()) {
    return this.next();
  }
  throw Error("No such element");
};
cljs.core.NodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = !0;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function(a, b, c, d) {
  return new cljs.core.NodeIterator(a, b, c, d);
};
cljs.core.BitmapIndexedNode = function(a, b, c) {
  this.edit = a;
  this.bitmap = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = cljs.core.bit_count(this.bitmap), c = Array(0 > b ? 4 : 2 * (b + 1));
  cljs.core.array_copy(this.arr, 0, c, 0, 2 * b);
  return new cljs.core.BitmapIndexedNode(a, this.bitmap, c);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = 1 << (c >>> b & 31);
  if (0 === (this.bitmap & f)) {
    return this;
  }
  var g = cljs.core.bitmap_indexed_node_index(this.bitmap, f), h = this.arr[2 * g], k = this.arr[2 * g + 1];
  return null == h ? (b = k.inode_without_BANG_(a, b + 5, c, d, e), b === k ? this : null != b ? cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * g + 1, b) : this.bitmap === f ? null : this.edit_and_remove_pair(a, f, g)) : cljs.core.key_test(d, h) ? (e.val = !0, this.edit_and_remove_pair(a, f, g)) : this;
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(a, b, c) {
  if (this.bitmap === b) {
    return null;
  }
  a = this.ensure_editable(a);
  var d = a.arr, e = d.length;
  a.bitmap ^= b;
  cljs.core.array_copy(d, 2 * (c + 1), d, 2 * c, e - 2 * (c + 1));
  d[e - 2] = null;
  d[e - 1] = null;
  return a;
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_lookup(a + 5, b, c, d) : cljs.core.key_test(c, e) ? f : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = 1 << (c >>> b & 31), h = cljs.core.bitmap_indexed_node_index(this.bitmap, g);
  if (0 === (this.bitmap & g)) {
    var k = cljs.core.bit_count(this.bitmap);
    if (2 * k < this.arr.length) {
      return a = this.ensure_editable(a), b = a.arr, f.val = !0, cljs.core.array_copy_downward(b, 2 * h, b, 2 * (h + 1), 2 * (k - h)), b[2 * h] = d, b[2 * h + 1] = e, a.bitmap |= g, a;
    }
    if (16 <= k) {
      h = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      h[c >>> b & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f);
      for (e = d = 0;;) {
        if (32 > d) {
          0 === (this.bitmap >>> d & 1) ? d += 1 : (h[d] = null != this.arr[e] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, cljs.core.hash(this.arr[e]), this.arr[e], this.arr[e + 1], f) : this.arr[e + 1], e += 2, d += 1);
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(a, k + 1, h);
    }
    b = Array(2 * (k + 4));
    cljs.core.array_copy(this.arr, 0, b, 0, 2 * h);
    b[2 * h] = d;
    b[2 * h + 1] = e;
    cljs.core.array_copy(this.arr, 2 * h, b, 2 * (h + 1), 2 * (k - h));
    f.val = !0;
    a = this.ensure_editable(a);
    a.arr = b;
    a.bitmap |= g;
    return a;
  }
  k = this.arr[2 * h];
  g = this.arr[2 * h + 1];
  if (null == k) {
    return k = g.inode_assoc_BANG_(a, b + 5, c, d, e, f), k === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, k);
  }
  if (cljs.core.key_test(d, k)) {
    return e === g ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, 2 * h + 1, e);
  }
  f.val = !0;
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * h, null, 2 * h + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(a, b + 5, k, g, c, d, e));
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = 1 << (b >>> a & 31), g = cljs.core.bitmap_indexed_node_index(this.bitmap, f);
  if (0 === (this.bitmap & f)) {
    var h = cljs.core.bit_count(this.bitmap);
    if (16 <= h) {
      g = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      g[b >>> a & 31] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e);
      for (d = c = 0;;) {
        if (32 > c) {
          0 === (this.bitmap >>> c & 1) ? c += 1 : (g[c] = null != this.arr[d] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, cljs.core.hash(this.arr[d]), this.arr[d], this.arr[d + 1], e) : this.arr[d + 1], d += 2, c += 1);
        } else {
          break;
        }
      }
      return new cljs.core.ArrayNode(null, h + 1, g);
    }
    a = Array(2 * (h + 1));
    cljs.core.array_copy(this.arr, 0, a, 0, 2 * g);
    a[2 * g] = c;
    a[2 * g + 1] = d;
    cljs.core.array_copy(this.arr, 2 * g, a, 2 * (g + 1), 2 * (h - g));
    e.val = !0;
    return new cljs.core.BitmapIndexedNode(null, this.bitmap | f, a);
  }
  h = this.arr[2 * g];
  f = this.arr[2 * g + 1];
  if (null == h) {
    return h = f.inode_assoc(a + 5, b, c, d, e), h === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, h));
  }
  if (cljs.core.key_test(c, h)) {
    return d === f ? this : new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * g + 1, d));
  }
  e.val = !0;
  return new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(this.arr, 2 * g, null, 2 * g + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(a + 5, h, f, b, c, d)));
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(a, b, c, d) {
  var e = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & e)) {
    return d;
  }
  var f = cljs.core.bitmap_indexed_node_index(this.bitmap, e);
  e = this.arr[2 * f];
  f = this.arr[2 * f + 1];
  return null == e ? f.inode_find(a + 5, b, c, d) : cljs.core.key_test(c, e) ? new cljs.core.MapEntry(e, f, null) : d;
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(a, b, c) {
  var d = 1 << (b >>> a & 31);
  if (0 === (this.bitmap & d)) {
    return this;
  }
  var e = cljs.core.bitmap_indexed_node_index(this.bitmap, d), f = this.arr[2 * e], g = this.arr[2 * e + 1];
  return null == f ? (a = g.inode_without(a + 5, b, c), a === g ? this : null != a ? new cljs.core.BitmapIndexedNode(null, this.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 2 * e + 1, a)) : this.bitmap === d ? null : new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e))) : cljs.core.key_test(c, f) ? this.bitmap === d ? null : new cljs.core.BitmapIndexedNode(null, this.bitmap ^ d, cljs.core.remove_pair(this.arr, e)) : this;
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = !0;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function(a, b, c) {
  return new cljs.core.BitmapIndexedNode(a, b, c);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function(a, b, c) {
  var d = a.arr, e = d.length;
  a = Array(2 * (a.cnt - 1));
  for (var f = 0, g = 1, h = 0;;) {
    if (f < e) {
      f !== c && null != d[f] ? (a[g] = d[f], g += 2, h |= 1 << f, f += 1) : f += 1;
    } else {
      return new cljs.core.BitmapIndexedNode(b, h, a);
    }
  }
};
cljs.core.ArrayNodeIterator = function(a, b, c) {
  this.arr = a;
  this.i = b;
  this.next_iter = c;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  for (var a = this.arr.length;;) {
    if (null != this.next_iter && this.next_iter.hasNext()) {
      return !0;
    }
    if (this.i < a) {
      var b = this.arr[this.i];
      this.i += 1;
      null != b && (this.next_iter = cljs.core._iterator(b));
    } else {
      return !1;
    }
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  if (this.hasNext()) {
    return this.next_iter.next();
  }
  throw Error("No such element");
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = !0;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function(a, b, c) {
  return new cljs.core.ArrayNodeIterator(a, b, c);
};
cljs.core.ArrayNode = function(a, b, c) {
  this.edit = a;
  this.cnt = b;
  this.arr = c;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(a) {
  return a === this.edit ? this : new cljs.core.ArrayNode(a, this.cnt, cljs.core.aclone(this.arr));
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  var f = c >>> b & 31, g = this.arr[f];
  if (null == g) {
    return this;
  }
  b = g.inode_without_BANG_(a, b + 5, c, d, e);
  if (b === g) {
    return this;
  }
  if (null == b) {
    if (8 >= this.cnt) {
      return cljs.core.pack_array_node(this, a, f);
    }
    a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
    --a.cnt;
    return a;
  }
  return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, f, b);
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(a, b) {
  for (var c = this.arr.length, d = 0;;) {
    if (d < c) {
      var e = this.arr[d];
      if (null != e) {
        b = e.kv_reduce(a, b);
        if (cljs.core.reduced_QMARK_(b)) {
          return b;
        }
        d += 1;
      } else {
        d += 1;
      }
    } else {
      return b;
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_lookup(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  var g = c >>> b & 31, h = this.arr[g];
  if (null == h) {
    return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b + 5, c, d, e, f)), a.cnt += 1, a;
  }
  b = h.inode_assoc_BANG_(a, b + 5, c, d, e, f);
  return b === h ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, g, b);
};
cljs.core.ArrayNode.prototype.inode_assoc = function(a, b, c, d, e) {
  var f = b >>> a & 31, g = this.arr[f];
  if (null == g) {
    return new cljs.core.ArrayNode(null, this.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a + 5, b, c, d, e)));
  }
  a = g.inode_assoc(a + 5, b, c, d, e);
  return a === g ? this : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, f, a));
};
cljs.core.ArrayNode.prototype.inode_find = function(a, b, c, d) {
  var e = this.arr[b >>> a & 31];
  return null != e ? e.inode_find(a + 5, b, c, d) : d;
};
cljs.core.ArrayNode.prototype.inode_without = function(a, b, c) {
  var d = b >>> a & 31, e = this.arr[d];
  return null != e ? (a = e.inode_without(a + 5, b, c), a === e ? this : null == a ? 8 >= this.cnt ? cljs.core.pack_array_node(this, null, d) : new cljs.core.ArrayNode(null, this.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a)) : new cljs.core.ArrayNode(null, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, d, a))) : this;
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.ArrayNodeIterator(this.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = !0;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function(a, b, c) {
  return new cljs.core.ArrayNode(a, b, c);
};
cljs.core.hash_collision_node_find_index = function(a, b, c) {
  b *= 2;
  for (var d = 0;;) {
    if (d < b) {
      if (cljs.core.key_test(c, a[d])) {
        return d;
      }
      d += 2;
    } else {
      return -1;
    }
  }
};
cljs.core.HashCollisionNode = function(a, b, c, d) {
  this.edit = a;
  this.collision_hash = b;
  this.cnt = c;
  this.arr = d;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(a) {
  if (a === this.edit) {
    return this;
  }
  var b = Array(2 * (this.cnt + 1));
  cljs.core.array_copy(this.arr, 0, b, 0, 2 * this.cnt);
  return new cljs.core.HashCollisionNode(a, this.collision_hash, this.cnt, b);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(a, b, c, d, e) {
  b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
  if (-1 === b) {
    return this;
  }
  e.val = !0;
  if (1 === this.cnt) {
    return null;
  }
  a = this.ensure_editable(a);
  e = a.arr;
  e[b] = e[2 * this.cnt - 2];
  e[b + 1] = e[2 * this.cnt - 1];
  e[2 * this.cnt - 1] = null;
  e[2 * this.cnt - 2] = null;
  --a.cnt;
  return a;
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(this.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.inode_kv_reduce(this.arr, a, b);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? this.arr[a + 1] : d;
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(a, b, c, d, e, f) {
  if (c === this.collision_hash) {
    b = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, d);
    if (-1 === b) {
      if (this.arr.length > 2 * this.cnt) {
        return a = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(this, a, 2 * this.cnt, d, 2 * this.cnt + 1, e), f.val = !0, a.cnt += 1, a;
      }
      b = this.arr.length;
      c = Array(b + 2);
      cljs.core.array_copy(this.arr, 0, c, 0, b);
      c[b] = d;
      c[b + 1] = e;
      f.val = !0;
      return this.ensure_editable_array(a, this.cnt + 1, c);
    }
    return this.arr[b + 1] === e ? this : cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(this, a, b + 1, e);
  }
  return (new cljs.core.BitmapIndexedNode(a, 1 << (this.collision_hash >>> b & 31), [null, this, null, null])).inode_assoc_BANG_(a, b, c, d, e, f);
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(a, b, c, d, e) {
  return b === this.collision_hash ? (a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c), -1 === a ? (a = 2 * this.cnt, b = Array(a + 2), cljs.core.array_copy(this.arr, 0, b, 0, a), b[a] = c, b[a + 1] = d, e.val = !0, new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt + 1, b)) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.arr[a + 1], d) ? this : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(this.arr, 
  a + 1, d))) : (new cljs.core.BitmapIndexedNode(null, 1 << (this.collision_hash >>> a & 31), [null, this])).inode_assoc(a, b, c, d, e);
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(a, b, c) {
  return a === this.edit ? (this.arr = c, this.cnt = b, this) : new cljs.core.HashCollisionNode(this.edit, this.collision_hash, b, c);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(a, b, c, d) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return 0 > a ? d : cljs.core.key_test(c, this.arr[a]) ? new cljs.core.MapEntry(this.arr[a], this.arr[a + 1], null) : d;
};
cljs.core.HashCollisionNode.prototype.inode_without = function(a, b, c) {
  a = cljs.core.hash_collision_node_find_index(this.arr, this.cnt, c);
  return -1 === a ? this : 1 === this.cnt ? null : new cljs.core.HashCollisionNode(null, this.collision_hash, this.cnt - 1, cljs.core.remove_pair(this.arr, cljs.core.quot(a, 2)));
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.NodeIterator(this.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = !0;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function(a, b, c, d) {
  return new cljs.core.HashCollisionNode(a, b, c, d);
};
cljs.core.create_node = function(a) {
  switch(arguments.length) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = cljs.core.hash(b);
  if (g === d) {
    return new cljs.core.HashCollisionNode(null, g, 2, [b, c, e, f]);
  }
  var h = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(a, g, b, c, h).inode_assoc(a, d, e, f, h);
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = cljs.core.hash(c);
  if (h === e) {
    return new cljs.core.HashCollisionNode(null, h, 2, [c, d, f, g]);
  }
  var k = new cljs.core.Box(!1);
  return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(a, b, h, c, d, k).inode_assoc_BANG_(a, b, e, f, g, k);
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.NodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return null == this.s ? new cljs.core.MapEntry(this.nodes[this.i], this.nodes[this.i + 1], null) : cljs.core.first(this.s);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = null == this.s ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.NodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = !0;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function(a, b, c, d, e) {
  return new cljs.core.NodeSeq(a, b, c, d, e);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_inode_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(a, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == c) {
    for (c = a.length;;) {
      if (b < c) {
        if (null != a[b]) {
          return new cljs.core.NodeSeq(null, a, b, null, null);
        }
        var d = a[b + 1];
        if (cljs.core.truth_(d) && (d = d.inode_seq(), cljs.core.truth_(d))) {
          return new cljs.core.NodeSeq(null, a, b + 2, d, null);
        }
        b += 2;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.NodeSeq(null, a, b, c, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.nodes = b;
  this.i = c;
  this.s = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.first(this.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(this.nodes, this.i, cljs.core.next(this.s));
  return null != a ? a : cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.ArrayNodeSeq(b, this.nodes, this.i, this.s, this.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), !0], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = !0;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function(a, b, c, d, e) {
  return new cljs.core.ArrayNodeSeq(a, b, c, d, e);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_array_node_seq = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(a, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (null == c) {
    for (c = a.length;;) {
      if (b < c) {
        var d = a[b];
        if (cljs.core.truth_(d) && (d = d.inode_seq(), cljs.core.truth_(d))) {
          return new cljs.core.ArrayNodeSeq(null, a, b + 1, d, null);
        }
        b += 1;
      } else {
        return null;
      }
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, a, b, c, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(a, b, c) {
  this.nil_val = a;
  this.root_iter = b;
  this.seen = c;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  return !this.seen || this.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  if (this.seen) {
    return this.root_iter.next();
  }
  this.seen = !0;
  return new cljs.core.MapEntry(null, this.nil_val, null);
};
cljs.core.HashMapIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = !0;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function(a, b, c) {
  return new cljs.core.HashMapIter(a, b, c);
};
cljs.core.PersistentHashMap = function(a, b, c, d, e, f) {
  this.meta = a;
  this.cnt = b;
  this.root = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? new cljs.core.MapEntry(null, this.nil_val, null) : null : null == this.root ? null : this.root.inode_find(0, cljs.core.hash(b), b, null);
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentHashMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  a = this.has_nil_QMARK_ ? b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(c, null, this.nil_val) : b.call(null, c, null, this.nil_val) : c;
  return cljs.core.reduced_QMARK_(a) ? cljs.core.deref(a) : null != this.root ? cljs.core.unreduced(this.root.kv_reduce(b, a)) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  a = this.root ? cljs.core._iterator(this.root) : cljs.core.nil_iter();
  return this.has_nil_QMARK_ ? new cljs.core.HashMapIter(this.nil_val, a, !1) : a;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashMap(this.meta, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashMap({}, this.root, this.cnt, this.has_nil_QMARK_, this.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, this.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  if (null == b) {
    return this.has_nil_QMARK_ ? new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, this.root, !1, null, null) : this;
  }
  if (null == this.root) {
    return this;
  }
  a = this.root.inode_without(0, cljs.core.hash(b), b);
  return a === this.root ? this : new cljs.core.PersistentHashMap(this.meta, this.cnt - 1, a, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  if (null == b) {
    return this.has_nil_QMARK_ && c === this.nil_val ? this : new cljs.core.PersistentHashMap(this.meta, this.has_nil_QMARK_ ? this.cnt : this.cnt + 1, this.root, !0, c, null);
  }
  a = new cljs.core.Box(!1);
  b = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc(0, cljs.core.hash(b), b, c, a);
  return b === this.root ? this : new cljs.core.PersistentHashMap(this.meta, a.val ? this.cnt + 1 : this.cnt, b, this.has_nil_QMARK_, this.nil_val, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ : null == this.root ? !1 : this.root.inode_lookup(0, cljs.core.hash(b), b, cljs.core.lookup_sentinel) !== cljs.core.lookup_sentinel;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? (a = null != this.root ? this.root.inode_seq() : null, this.has_nil_QMARK_ ? cljs.core.cons(new cljs.core.MapEntry(null, this.nil_val, null), a) : a) : null;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentHashMap(b, this.cnt, this.root, this.has_nil_QMARK_, this.nil_val, this.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = cljs.core._assoc(a, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = !0;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function(a, b, c, d, e, f) {
  return new cljs.core.PersistentHashMap(a, b, c, d, e, f);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, !1, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(a, b) {
  a = b ? a : cljs.core.aclone(a);
  b = a.length;
  for (var c = 0, d = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (c < b) {
      var e = c + 2;
      d = cljs.core._assoc_BANG_(d, a[c], a[c + 1]);
      c = e;
    } else {
      return cljs.core._persistent_BANG_(d);
    }
  }
};
cljs.core.PersistentHashMap.fromArrays = function(a, b) {
  for (var c = a.length, d = 0, e = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (d < c) {
      if (b.length <= d) {
        throw Error(["No value supplied for key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      var f = d + 1;
      e = cljs.core._assoc_BANG_(e, a[d], b[d]);
      d = f;
    } else {
      return cljs.core.persistent_BANG_(e);
    }
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._assoc_BANG_(c, a[d], a[d + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(c), d / 2 + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 2;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.TransientHashMap = function(a, b, c, d, e) {
  this.edit = a;
  this.root = b;
  this.count = c;
  this.has_nil_QMARK_ = d;
  this.nil_val = e;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(a) {
  if (this.edit) {
    if (cljs.core.map_entry_QMARK_(a)) {
      return this.assoc_BANG_(cljs.core.key(a), cljs.core.val(a));
    }
    if (cljs.core.vector_QMARK_(a)) {
      return this.assoc_BANG_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(0) : a.call(null, 0), a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(1) : a.call(null, 1));
    }
    a = cljs.core.seq(a);
    for (var b = this;;) {
      var c = cljs.core.first(a);
      if (cljs.core.truth_(c)) {
        a = cljs.core.next(a), b = b.assoc_BANG_(cljs.core.key(c), cljs.core.val(c));
      } else {
        return b;
      }
    }
  } else {
    throw Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(a, b) {
  if (this.edit) {
    if (null == a) {
      this.nil_val !== b && (this.nil_val = b), this.has_nil_QMARK_ || (this.count += 1, this.has_nil_QMARK_ = !0);
    } else {
      var c = new cljs.core.Box(!1);
      a = (null == this.root ? cljs.core.BitmapIndexedNode.EMPTY : this.root).inode_assoc_BANG_(this.edit, 0, cljs.core.hash(a), a, b, c);
      a !== this.root && (this.root = a);
      c.val && (this.count += 1);
    }
    return this;
  }
  throw Error("assoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(a) {
  if (this.edit) {
    if (null == a) {
      this.has_nil_QMARK_ && (this.has_nil_QMARK_ = !1, this.nil_val = null, --this.count);
    } else {
      if (null != this.root) {
        var b = new cljs.core.Box(!1);
        a = this.root.inode_without_BANG_(this.edit, 0, cljs.core.hash(a), a, b);
        a !== this.root && (this.root = a);
        b.val && --this.count;
      }
    }
    return this;
  }
  throw Error("dissoc! after persistent!");
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  if (this.edit) {
    return this.edit = null, new cljs.core.PersistentHashMap(null, this.count, this.root, this.has_nil_QMARK_, this.nil_val, null);
  }
  throw Error("persistent! called twice");
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  if (this.edit) {
    return this.count;
  }
  throw Error("count after persistent!");
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : null : null == this.root ? null : this.root.inode_lookup(0, cljs.core.hash(b), b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return null == b ? this.has_nil_QMARK_ ? this.nil_val : c : null == this.root ? c : this.root.inode_lookup(0, cljs.core.hash(b), b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  return this.conj_BANG_(b);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return this.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(a, b, c) {
  return this.assoc_BANG_(b, c);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(a, b) {
  return this.without_BANG_(b);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.TransientHashMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = !0;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function(a, b, c, d, e) {
  return new cljs.core.TransientHashMap(a, b, c, d, e);
};
cljs.core.tree_map_seq_push = function(a, b, c) {
  for (var d = b;;) {
    if (null != a) {
      b = c ? a.left : a.right, d = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(d, a), a = b;
    } else {
      return d;
    }
  }
};
cljs.core.PersistentTreeMapSeq = function(a, b, c, d, e) {
  this.meta = a;
  this.stack = b;
  this.ascending_QMARK_ = c;
  this.cnt = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 0 > this.cnt ? cljs.core.count(cljs.core.next(this)) + 1 : this.cnt;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return cljs.core.peek(this.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = cljs.core.first(this.stack);
  a = cljs.core.tree_map_seq_push(this.ascending_QMARK_ ? a.right : a.left, cljs.core.next(this.stack), this.ascending_QMARK_);
  return null != a ? new cljs.core.PersistentTreeMapSeq(null, a, this.ascending_QMARK_, this.cnt - 1, null) : cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentTreeMapSeq(b, this.stack, this.ascending_QMARK_, this.cnt, this.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = !0;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMapSeq(a, b, c, d, e);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.create_tree_map_seq = function(a, b, c) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(a, null, b), b, c, null);
};
cljs.core.balance_left = function(a, b, c, d) {
  return c instanceof cljs.core.RedNode ? c.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, c.left.blacken(), new cljs.core.BlackNode(a, b, c.right, d, null), null) : c.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.right.key, c.right.val, new cljs.core.BlackNode(c.key, c.val, c.left, c.right.left, null), new cljs.core.BlackNode(a, b, c.right.right, d, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_right = function(a, b, c, d) {
  return d instanceof cljs.core.RedNode ? d.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.key, d.val, new cljs.core.BlackNode(a, b, c, d.left, null), d.right.blacken(), null) : d.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), new cljs.core.BlackNode(d.key, d.val, d.left.right, d.right, null), null) : new cljs.core.BlackNode(a, b, c, d, null) : new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.balance_left_del = function(a, b, c, d) {
  if (c instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c.blacken(), d, null);
  }
  if (d instanceof cljs.core.BlackNode) {
    return cljs.core.balance_right(a, b, c, d.redden());
  }
  if (d instanceof cljs.core.RedNode && d.left instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(d.left.key, d.left.val, new cljs.core.BlackNode(a, b, c, d.left.left, null), cljs.core.balance_right(d.key, d.val, d.left.right, d.right.redden()), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.balance_right_del = function(a, b, c, d) {
  if (d instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(a, b, c, d.blacken(), null);
  }
  if (c instanceof cljs.core.BlackNode) {
    return cljs.core.balance_left(a, b, c.redden(), d);
  }
  if (c instanceof cljs.core.RedNode && c.right instanceof cljs.core.BlackNode) {
    return new cljs.core.RedNode(c.right.key, c.right.val, cljs.core.balance_left(c.key, c.val, c.left.redden(), c.right.left), new cljs.core.BlackNode(a, b, c.right.right, d, null), null);
  }
  throw Error("red-black tree invariant violation");
};
cljs.core.tree_map_kv_reduce = function(a, b, c) {
  var d = null != a.left ? function() {
    var g = a.left;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(g, b, c) : cljs.core.tree_map_kv_reduce.call(null, g, b, c);
  }() : c;
  if (cljs.core.reduced_QMARK_(d)) {
    return d;
  }
  var e = function() {
    var g = a.key, h = a.val;
    return b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(d, g, h) : b.call(null, d, g, h);
  }();
  if (cljs.core.reduced_QMARK_(e)) {
    return e;
  }
  if (null != a.right) {
    var f = a.right;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(f, b, e) : cljs.core.tree_map_kv_reduce.call(null, f, b, e);
  }
  return e;
};
cljs.core.BlackNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.BlackNode.prototype.add_right = function(a) {
  return a.balance_right(this);
};
cljs.core.BlackNode.prototype.redden = function() {
  return new cljs.core.RedNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  return this;
};
cljs.core.BlackNode.prototype.add_left = function(a) {
  return a.balance_left(this);
};
cljs.core.BlackNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.BlackNode(a, b, c, d, null);
};
cljs.core.BlackNode.prototype.balance_left = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(a) {
  return new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.BlackNode.prototype.remove_left = function(a) {
  return cljs.core.balance_left_del(this.key, this.val, a, this.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.BlackNode.prototype.remove_right = function(a) {
  return cljs.core.balance_right_del(this.key, this.val, this.left, a);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.BlackNode.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = !0;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function(a, b, c, d, e) {
  return new cljs.core.BlackNode(a, b, c, d, e);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.RedNode = function(a, b, c, d, e) {
  this.key = a;
  this.val = b;
  this.left = c;
  this.right = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  switch(b) {
    case 0:
      return new cljs.core.MapEntry(0, this.key, null);
    case 1:
      return new cljs.core.MapEntry(1, this.val, null);
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.RedNode.prototype.add_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.redden = function() {
  throw Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  return new cljs.core.BlackNode(this.key, this.val, this.left, this.right, null);
};
cljs.core.RedNode.prototype.add_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.replace = function(a, b, c, d) {
  return new cljs.core.RedNode(a, b, c, d, null);
};
cljs.core.RedNode.prototype.balance_left = function(a) {
  return this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, this.left.blacken(), new cljs.core.BlackNode(a.key, a.val, this.right, a.right, null), null) : this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.right.key, this.right.val, new cljs.core.BlackNode(this.key, this.val, this.left, this.right.left, null), new cljs.core.BlackNode(a.key, a.val, this.right.right, a.right, null), null) : new cljs.core.BlackNode(a.key, a.val, this, a.right, null);
};
cljs.core.RedNode.prototype.balance_right = function(a) {
  return this.right instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.key, this.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left, null), this.right.blacken(), null) : this.left instanceof cljs.core.RedNode ? new cljs.core.RedNode(this.left.key, this.left.val, new cljs.core.BlackNode(a.key, a.val, a.left, this.left.left, null), new cljs.core.BlackNode(this.key, this.val, this.left.right, this.right, null), null) : new cljs.core.BlackNode(a.key, a.val, a.left, this, null);
};
cljs.core.RedNode.prototype.remove_left = function(a) {
  return new cljs.core.RedNode(this.key, this.val, a, this.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(a, b) {
  return cljs.core.tree_map_kv_reduce(this, a, b);
};
cljs.core.RedNode.prototype.remove_right = function(a) {
  return new cljs.core.RedNode(this.key, this.val, this.left, a, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 === b) {
    return this.key;
  }
  if (1 === b) {
    return this.val;
  }
  throw Error("Index out of bounds");
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 === b ? this.key : 1 === b ? this.val : c;
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(a, b, c) {
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(a) {
  return this.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(a) {
  return this.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(a) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.val, this.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(this, b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b, c);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return 0 === b || 1 === b;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return new cljs.core.IndexedSeq([this.key, this.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val], null), b);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [this.key, this.val, b], null);
};
cljs.core.RedNode.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$IIndexed$_nth$arity$2(null, c);
      case 3:
        return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$IIndexed$_nth$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$IIndexed$_nth$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.RedNode.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$IIndexed$_nth$arity$2(null, a);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$IIndexed$_nth$arity$3(null, a, b);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.RedNode.cljs$lang$type = !0;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function(a, b, c, d, e) {
  return new cljs.core.RedNode(a, b, c, d, e);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.tree_map_add = function(a, b, c, d, e) {
  if (null == b) {
    return new cljs.core.RedNode(c, d, null, null, null);
  }
  var f = function() {
    var g = b.key;
    return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, g) : a.call(null, c, g);
  }();
  if (0 === f) {
    return e[0] = b, null;
  }
  if (0 > f) {
    return f = function() {
      var g = b.left;
      return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, g, c, d, e) : cljs.core.tree_map_add.call(null, a, g, c, d, e);
    }(), null != f ? b.add_left(f) : null;
  }
  f = function() {
    var g = b.right;
    return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(a, g, c, d, e) : cljs.core.tree_map_add.call(null, a, g, c, d, e);
  }();
  return null != f ? b.add_right(f) : null;
};
cljs.core.tree_map_append = function(a, b) {
  if (null == a) {
    return b;
  }
  if (null == b) {
    return a;
  }
  if (a instanceof cljs.core.RedNode) {
    if (b instanceof cljs.core.RedNode) {
      var c = function() {
        var d = a.right, e = b.left;
        return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(d, e) : cljs.core.tree_map_append.call(null, d, e);
      }();
      return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.RedNode(a.key, a.val, a.left, c.left, null), new cljs.core.RedNode(b.key, b.val, c.right, b.right, null), null) : new cljs.core.RedNode(a.key, a.val, a.left, new cljs.core.RedNode(b.key, b.val, c, b.right, null), null);
    }
    return new cljs.core.RedNode(a.key, a.val, a.left, function() {
      var d = a.right;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(d, b) : cljs.core.tree_map_append.call(null, d, b);
    }(), null);
  }
  if (b instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(b.key, b.val, function() {
      var d = b.left;
      return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(a, d) : cljs.core.tree_map_append.call(null, a, d);
    }(), b.right, null);
  }
  c = function() {
    var d = a.right, e = b.left;
    return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(d, e) : cljs.core.tree_map_append.call(null, d, e);
  }();
  return c instanceof cljs.core.RedNode ? new cljs.core.RedNode(c.key, c.val, new cljs.core.BlackNode(a.key, a.val, a.left, c.left, null), new cljs.core.BlackNode(b.key, b.val, c.right, b.right, null), null) : cljs.core.balance_left_del(a.key, a.val, a.left, new cljs.core.BlackNode(b.key, b.val, c, b.right, null));
};
cljs.core.tree_map_remove = function(a, b, c, d) {
  if (null != b) {
    var e = function() {
      var f = b.key;
      return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, f) : a.call(null, c, f);
    }();
    if (0 === e) {
      return d[0] = b, cljs.core.tree_map_append(b.left, b.right);
    }
    if (0 > e) {
      return e = function() {
        var f = b.left;
        return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, f, c, d) : cljs.core.tree_map_remove.call(null, a, f, c, d);
      }(), null != e || null != d[0] ? b.left instanceof cljs.core.BlackNode ? cljs.core.balance_left_del(b.key, b.val, e, b.right) : new cljs.core.RedNode(b.key, b.val, e, b.right, null) : null;
    }
    e = function() {
      var f = b.right;
      return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(a, f, c, d) : cljs.core.tree_map_remove.call(null, a, f, c, d);
    }();
    return null != e || null != d[0] ? b.right instanceof cljs.core.BlackNode ? cljs.core.balance_right_del(b.key, b.val, b.left, e) : new cljs.core.RedNode(b.key, b.val, b.left, e, null) : null;
  }
  return null;
};
cljs.core.tree_map_replace = function(a, b, c, d) {
  var e = b.key, f = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, e) : a.call(null, c, e);
  return 0 === f ? b.replace(e, d, b.left, b.right) : 0 > f ? b.replace(e, b.val, function() {
    var g = b.left;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, g, c, d) : cljs.core.tree_map_replace.call(null, a, g, c, d);
  }(), b.right) : b.replace(e, b.val, b.left, function() {
    var g = b.right;
    return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(a, g, c, d) : cljs.core.tree_map_replace.call(null, a, g, c, d);
  }());
};
cljs.core.PersistentTreeMap = function(a, b, c, d, e) {
  this.comp = a;
  this.tree = b;
  this.cnt = c;
  this.meta = d;
  this.__hash = e;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(a, b) {
  return this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  return cljs.core.es6_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.keys(this));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.vals(this));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(a) {
  for (var b = this.tree;;) {
    if (null != b) {
      var c = a;
      var d = b.key;
      c = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(c, d) : this.comp.call(null, c, d);
      if (0 === c) {
        return b;
      }
      b = 0 > c ? b.left : b.right;
    } else {
      return null;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.entry_at(b);
  return null != a ? a.val : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return null != this.tree ? cljs.core.unreduced(cljs.core.tree_map_kv_reduce(this.tree, b, c)) : c;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, this.meta, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !1, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_map(this, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  a = [null];
  b = cljs.core.tree_map_remove(this.comp, this.tree, b, a);
  return null == b ? null == cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0) ? this : new cljs.core.PersistentTreeMap(this.comp, null, 0, this.meta, null) : new cljs.core.PersistentTreeMap(this.comp, b.blacken(), this.cnt - 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = [null];
  var d = cljs.core.tree_map_add(this.comp, this.tree, b, c, a);
  return null == d ? (a = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, 0), cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, a.val) ? this : new cljs.core.PersistentTreeMap(this.comp, cljs.core.tree_map_replace(this.comp, this.tree, b, c), this.cnt, this.meta, null)) : new cljs.core.PersistentTreeMap(this.comp, d.blacken(), this.cnt + 1, this.meta, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  return null != this.entry_at(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, !0, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentTreeMap(this.comp, this.tree, this.cnt, b, this.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(b, 1));
  }
  a = this;
  for (b = cljs.core.seq(b);;) {
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    if (cljs.core.vector_QMARK_(c)) {
      a = cljs.core._assoc(a, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, 1)), b = cljs.core.next(b);
    } else {
      throw Error("conj on a map takes map entries or seqables of map entries");
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return 0 < this.cnt ? cljs.core.create_tree_map_seq(this.tree, b, this.cnt) : null;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  if (0 < this.cnt) {
    a = null;
    for (var d = this.tree;;) {
      if (null != d) {
        var e = b;
        var f = d.key;
        e = this.comp.cljs$core$IFn$_invoke$arity$2 ? this.comp.cljs$core$IFn$_invoke$arity$2(e, f) : this.comp.call(null, e, f);
        if (0 === e) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), c, -1, null);
        }
        cljs.core.truth_(c) ? 0 > e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.left) : d = d.right : 0 < e ? (a = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a, d), d = d.right) : d = d.left;
      } else {
        return null == a ? null : new cljs.core.PersistentTreeMapSeq(null, a, c, -1, null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return cljs.core.key(b);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return this.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = !0;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function(a, b, c, d, e) {
  return new cljs.core.PersistentTreeMap(a, b, c, d, e);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.hash_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);;) {
    if (a) {
      var c = cljs.core.next(a);
      if (null == c) {
        throw Error(["No value supplied for key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(a))].join(""));
      }
      var d = cljs.core.next(c);
      b = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.first(c));
      a = d;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.array_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = a instanceof cljs.core.IndexedSeq && 0 === a.i ? a.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.odd_QMARK_(a.length)) {
    throw Error(["No value supplied for key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(a))].join(""));
  }
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(a);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.seq_to_map_for_destructuring = function(a) {
  return cljs.core.next(a) ? cljs.core.PersistentArrayMap.createAsIfByAssoc(cljs.core.to_array(a)) : cljs.core.seq(a) ? cljs.core.first(a) : cljs.core.PersistentArrayMap.EMPTY;
};
cljs.core.obj_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  var b = [], c = {};
  for (a = cljs.core.seq(a);;) {
    if (a) {
      b.push(cljs.core.first(a));
      var d = c, e = cljs.core.first(a), f = cljs.core.second(a);
      cljs.core.goog$module$goog$object.set.call(null, d, e, f);
      a = cljs.core.nnext(a);
    } else {
      return cljs.core.ObjMap.fromObject(b, c);
    }
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.seq(a);
  for (var b = cljs.core.PersistentTreeMap.EMPTY;;) {
    if (a) {
      var c = cljs.core.nnext(a);
      b = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b, cljs.core.first(a), cljs.core.second(a));
      a = c;
    } else {
      return b;
    }
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_map_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(a), null, 0, null, 0);;) {
    if (b) {
      a = cljs.core.nnext(b), c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(b), cljs.core.second(b)), b = a;
    } else {
      return c;
    }
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.KeySeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.KeySeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.KeySeq(a, null);
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.KeySeq(a, null) : cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this._meta ? this : new cljs.core.KeySeq(this.mseq, b);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = !0;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function(a, b) {
  return new cljs.core.KeySeq(a, b);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.keys = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.KeySeq(a, null) : null;
};
cljs.core.key = function(a) {
  return cljs.core._key(a);
};
cljs.core.ValSeq = function(a, b) {
  this.mseq = a;
  this._meta = b;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ValSeq.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null == a ? null : new cljs.core.ValSeq(a, null);
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash_ordered_coll(this);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(b, c, this);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.mseq.cljs$core$ISeq$_first$arity$1(null).cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = (null != this.mseq ? this.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === this.mseq.cljs$core$INext$ || (this.mseq.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) : cljs.core.native_satisfies_QMARK_(cljs.core.INext, this.mseq)) ? this.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(this.mseq);
  return null != a ? new cljs.core.ValSeq(a, null) : cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this._meta ? this : new cljs.core.ValSeq(this.mseq, b);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = !0;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function(a, b) {
  return new cljs.core.ValSeq(a, b);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.vals = function(a) {
  return (a = cljs.core.seq(a)) ? new cljs.core.ValSeq(a, null) : null;
};
cljs.core.val = function(a) {
  return cljs.core._val(a);
};
cljs.core.merge = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.truth_(cljs.core.some(cljs.core.identity, a)) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(b, c) {
    var d = cljs.core.conj, e = d.cljs$core$IFn$_invoke$arity$2;
    b = cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY;
    return e.call(d, b, c);
  }, a) : null;
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.merge_with = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, b))) {
    var c = function(d, e) {
      var f = cljs.core.key(e), g = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(d, f)) {
        e = cljs.core.assoc;
        var h = e.cljs$core$IFn$_invoke$arity$3, k = cljs.core.get.cljs$core$IFn$_invoke$arity$2(d, f);
        g = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(k, g) : a.call(null, k, g);
        return h.call(e, d, f, g);
      }
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, f, g);
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(d, e) {
      var f = cljs.core.reduce, g = f.cljs$core$IFn$_invoke$arity$3;
      d = cljs.core.truth_(d) ? d : cljs.core.PersistentArrayMap.EMPTY;
      return g.call(f, c, d, cljs.core.seq(e));
    }, b);
  }
  return null;
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.select_keys = function(a, b) {
  var c = cljs.core.PersistentArrayMap.EMPTY;
  for (b = cljs.core.seq(b);;) {
    if (b) {
      var d = cljs.core.first(b), e = cljs.core.get.cljs$core$IFn$_invoke$arity$3(a, d, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      c = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(e, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, d, e) : c;
      b = cljs.core.next(b);
    } else {
      return cljs.core._with_meta(c, cljs.core.meta(a));
    }
  }
};
cljs.core.HashSetIter = function(a) {
  this.iter = a;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  return this.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  if (this.iter.hasNext()) {
    return this.iter.next().key;
  }
  throw Error("No such element");
};
cljs.core.HashSetIter.prototype.remove = function() {
  return Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = !0;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function(a) {
  return new cljs.core.HashSetIter(a);
};
cljs.core.PersistentHashSet = function(a, b, c) {
  this.meta = a;
  this.hash_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentHashSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentHashSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentHashSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = cljs.core._find(this.hash_map, b);
  return cljs.core.truth_(a) ? cljs.core.key(a) : c;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.HashSetIter(cljs.core._iterator(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(this.meta, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core._count(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (a = cljs.core.set_QMARK_(b)) {
    if (a = cljs.core.count(this) === cljs.core.count(b)) {
      try {
        return cljs.core.reduce_kv(function(c, d) {
          return (c = cljs.core.contains_QMARK_(b, d)) ? c : cljs.core.reduced(!1);
        }, !0, this.hash_map);
      } catch (c) {
        if (c instanceof Error) {
          return !1;
        }
        throw c;
      }
    } else {
      return a;
    }
  } else {
    return a;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(a) {
  return new cljs.core.TransientHashSet(cljs.core._as_transient(this.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, this.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core._dissoc(this.hash_map, b), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentHashSet(b, this.hash_map, this.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentHashSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.hash_map, b, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentHashSet.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = !0;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function(a, b, c) {
  return new cljs.core.PersistentHashSet(a, b, c);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(a, b) {
  var c = a.length;
  if (c <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    b || cljs.core.aclone(a);
    b = 0;
    for (var d = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);;) {
      if (b < c) {
        var e = b + 1;
        d = cljs.core._assoc_BANG_(d, a[b], null);
        b = e;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(d), null);
      }
    }
  } else {
    for (b = 0, d = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);;) {
      if (b < c) {
        e = b + 1, d = cljs.core._conj_BANG_(d, a[b]), b = e;
      } else {
        return cljs.core._persistent_BANG_(d);
      }
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]);
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(c), d + 1)) {
        throw Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a[d])].join(""));
      }
      d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(a) {
  for (var b = a.length, c = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY), d = 0;;) {
    if (d < b) {
      cljs.core._conj_BANG_(c, a[d]), d += 1;
    } else {
      break;
    }
  }
  return cljs.core._persistent_BANG_(c);
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.TransientHashSet = function(a) {
  this.transient_map = a;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, null);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(a) {
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(this.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(a, b) {
  this.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(this.transient_map, b);
  return this;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, b, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? c : b;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var a = null, b = function(d, e) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, e, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : e;
  }, c = function(d, e, f) {
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, e, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? f : e;
  };
  a = function(d, e, f) {
    switch(arguments.length) {
      case 2:
        return b.call(this, d, e);
      case 3:
        return c.call(this, d, e, f);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = b;
  a.cljs$core$IFn$_invoke$arity$3 = c;
  return a;
}();
cljs.core.TransientHashSet.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? null : a;
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this.transient_map, a, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel ? b : a;
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = !0;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function(a) {
  return new cljs.core.TransientHashSet(a);
};
cljs.core.PersistentTreeSet = function(a, b, c) {
  this.meta = a;
  this.tree_map = b;
  this.__hash = c;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  return cljs.core.es6_iterator(cljs.core.seq(this));
};
cljs.core.PersistentTreeSet.prototype.has = function(a) {
  return cljs.core.contains_QMARK_(this, a);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(a) {
  for (var b = cljs.core.seq(this), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        cljs.core.chunked_seq_QMARK_(b) ? (c = cljs.core.chunk_first(b), b = cljs.core.chunk_rest(b), g = c, d = cljs.core.count(c), c = g) : (c = cljs.core.first(b), g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 0, null), f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(c, 1, null), a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(f, g) : a.call(null, f, g), b = cljs.core.next(b), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  a = this.tree_map.entry_at(b);
  return null != a ? a.key : c;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return cljs.core.count(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(a) {
  return 0 < cljs.core.count(this.tree_map) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(this.tree_map)) : null;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_unordered_coll(this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  if (a = cljs.core.set_QMARK_(b)) {
    if (a = cljs.core.count(this) === cljs.core.count(b)) {
      try {
        return cljs.core.reduce_kv(function(c, d) {
          return (c = cljs.core.contains_QMARK_(b, d)) ? c : cljs.core.reduced(!1);
        }, !0, this.tree_map);
      } catch (c) {
        if (c instanceof Error) {
          return !1;
        }
        throw c;
      }
    } else {
      return a;
    }
  } else {
    return a;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core._empty(this.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(this.tree_map, b), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.keys(this.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.PersistentTreeSet(b, this.tree_map, this.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return new cljs.core.PersistentTreeSet(this.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this.tree_map, b, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var a = null;
  a = function(b, c, d) {
    switch(arguments.length) {
      case 2:
        return this.cljs$core$ILookup$_lookup$arity$2(null, c);
      case 3:
        return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$2 = function(b, c) {
    return this.cljs$core$ILookup$_lookup$arity$2(null, c);
  };
  a.cljs$core$IFn$_invoke$arity$3 = function(b, c, d) {
    return this.cljs$core$ILookup$_lookup$arity$3(null, c, d);
  };
  return a;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return this.cljs$core$ILookup$_lookup$arity$2(null, a);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, a, b);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(a, b) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(this.tree_map, b));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(a, b, c) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(this.tree_map, b, c));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(a, b) {
  return b;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(a) {
  return cljs.core._comparator(this.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = !0;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function(a, b, c) {
  return new cljs.core.PersistentTreeSet(a, b, c);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.set_from_indexed_seq = function(a) {
  a = a.arr;
  a: {
    for (var b = a.length, c = 0, d = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
      if (c < b) {
        var e = c + 1;
        d = cljs.core._conj_BANG_(d, a[c]);
        c = e;
      } else {
        break a;
      }
    }
  }
  return d.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function(a) {
  if (cljs.core.set_QMARK_(a)) {
    return cljs.core.with_meta(a, null);
  }
  a = cljs.core.seq(a);
  if (null == a) {
    return cljs.core.PersistentHashSet.EMPTY;
  }
  if (a instanceof cljs.core.IndexedSeq && 0 === a.i) {
    return cljs.core.PersistentHashSet.createAsIfByAssoc(a.arr);
  }
  for (var b = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);;) {
    if (null != a) {
      var c = cljs.core.next(a);
      b = cljs.core._conj_BANG_(b, cljs.core._first(a));
      a = c;
    } else {
      return cljs.core.persistent_BANG_(b);
    }
  }
};
cljs.core.hash_set = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(b);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.set(a);
};
cljs.core.hash_set.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, a);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.sorted_set_by = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(a), 0), b);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.replace = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(b) {
    var c = cljs.core.find(a, b);
    return cljs.core.truth_(c) ? cljs.core.val(c) : b;
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    var c = cljs.core.count(b);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(d, e) {
      var f = cljs.core.find(a, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(d, e));
      return cljs.core.truth_(f) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, e, cljs.core.second(f)) : d;
    }, b, cljs.core.take.cljs$core$IFn$_invoke$arity$2(c, cljs.core.iterate(cljs.core.inc, 0)));
  }
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(d) {
    var e = cljs.core.find(a, d);
    return cljs.core.truth_(e) ? cljs.core.second(e) : d;
  }, b);
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    var b = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var c = null, d = function() {
        return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
      }, e = function(g) {
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      }, f = function(g, h) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(b), h)) {
          return g;
        }
        b.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(b.cljs$core$IDeref$_deref$arity$1(null), h));
        return a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(g, h) : a.call(null, g, h);
      };
      c = function(g, h) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, g);
          case 2:
            return f.call(this, g, h);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function e(c, d) {
    return new cljs.core.LazySeq(null, function() {
      var f;
      a: {
        var g = c;
        for (f = d;;) {
          var h = g;
          g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(h, 0, null);
          if (h = cljs.core.seq(h)) {
            if (cljs.core.contains_QMARK_(f, g)) {
              g = cljs.core.rest(h);
            } else {
              f = cljs.core.cons(g, e(cljs.core.rest(h), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(f, g)));
              break a;
            }
          } else {
            f = null;
            break a;
          }
        }
      }
      return f;
    }, null, null);
  }(a, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function(a) {
  for (var b = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.next(a)) {
      b = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(b, cljs.core.first(a)), a = cljs.core.next(a);
    } else {
      return cljs.core.seq(b);
    }
  }
};
cljs.core.name = function(a) {
  if (null != a && (a.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$INamed$)) {
    return a.cljs$core$INamed$_name$arity$1(null);
  }
  if ("string" === typeof a) {
    return a;
  }
  throw Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
};
cljs.core.zipmap = function(a, b) {
  var c = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  a = cljs.core.seq(a);
  for (b = cljs.core.seq(b);;) {
    if (a && b) {
      c = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, cljs.core.first(a), cljs.core.first(b)), a = cljs.core.next(a), b = cljs.core.next(b);
    } else {
      return cljs.core.persistent_BANG_(c);
    }
  }
};
cljs.core.max_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) > (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(e, f) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, e, f);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.max_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return b;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b)) < (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(c) : a.call(null, c)) ? b : c;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(e, f) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, e, f);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(a, b, c), d);
};
cljs.core.min_key.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(a) {
  this.arr = a;
};
cljs.core.ArrayList.prototype.add = function(a) {
  return this.arr.push(a);
};
cljs.core.ArrayList.prototype.size = function() {
  return this.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  return this.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  return 0 === this.arr.length;
};
cljs.core.ArrayList.prototype.toArray = function() {
  return this.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = !0;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function(a) {
  return new cljs.core.ArrayList(a);
};
cljs.core.array_list = function() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.array_list();
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        if (!cljs.core.truth_(c.isEmpty())) {
          var k = cljs.core.vec(c.toArray());
          c.clear();
          h = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k));
        }
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        c.add(k);
        return a === c.size() ? (k = cljs.core.vec(c.toArray()), c.clear(), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k)) : h;
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, a, b);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    return d ? cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(a, d), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(a, b, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(b, d))) : null;
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    return function() {
      var c = null, d = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, e = function(g) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(g) : b.call(null, g);
      }, f = function(g, h) {
        return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h)) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(g, h) : b.call(null, g, h) : cljs.core.reduced(g);
      };
      c = function(g, h) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, g);
          case 2:
            return f.call(this, g, h);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      var d = cljs.core, e = d.truth_;
      var f = cljs.core.first(c);
      f = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(f) : a.call(null, f);
      return e.call(d, f) ? cljs.core.cons(cljs.core.first(c), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rest(c))) : null;
    }
    return null;
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function(a, b, c) {
  return function(d) {
    var e = cljs.core._comparator(a);
    d = cljs.core._entry_key(a, d);
    e = e.cljs$core$IFn$_invoke$arity$2 ? e.cljs$core$IFn$_invoke$arity$2(d, c) : e.call(null, d, c);
    return b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(e, 0) : b.call(null, e, 0);
  };
};
cljs.core.subseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c), e = cljs.core, f = e.truth_, g = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
  b = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(b) : g.call(null, b);
  return f.call(e, b) ? (a = cljs.core._sorted_seq_from(a, c, !0), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !0));
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, c, !0);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), h = cljs.core.take_while, k = h.cljs$core$IFn$_invoke$arity$2;
    d = cljs.core.mk_bound_fn(a, d, e);
    e = cljs.core;
    var l = e.truth_;
    a = cljs.core.mk_bound_fn(a, b, c);
    g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
    return k.call(h, d, l.call(e, g) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.mk_bound_fn(a, b, c), e = cljs.core, f = e.truth_, g = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
  b = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(b) : g.call(null, b);
  return f.call(e, b) ? (a = cljs.core._sorted_seq_from(a, c, !1), cljs.core.truth_(a) ? (c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(a, 0, null), cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(c) : d.call(null, c)) ? a : cljs.core.next(a)) : null) : cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(d, cljs.core._sorted_seq(a, !1));
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = cljs.core._sorted_seq_from(a, e, !1);
  if (cljs.core.truth_(f)) {
    var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null), h = cljs.core.take_while, k = h.cljs$core$IFn$_invoke$arity$2;
    b = cljs.core.mk_bound_fn(a, b, c);
    c = cljs.core;
    var l = c.truth_;
    a = cljs.core.mk_bound_fn(a, d, e);
    g = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
    return k.call(h, b, l.call(c, g) ? f : cljs.core.next(f));
  }
  return null;
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.IntegerRangeChunk = function(a, b, c) {
  this.start = a;
  this.step = b;
  this.count = c;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return this.count;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.start;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  return this.start + b * this.step;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.count ? this.start + b * this.step : c;
};
cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(a) {
  if (1 >= this.count) {
    throw Error("-drop-first of empty chunk");
  }
  return new cljs.core.IntegerRangeChunk(this.start + this.step, this.step, this.count - 1);
};
cljs.core.IntegerRangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.IntegerRangeChunk.cljs$lang$type = !0;
cljs.core.IntegerRangeChunk.cljs$lang$ctorStr = "cljs.core/IntegerRangeChunk";
cljs.core.IntegerRangeChunk.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IntegerRangeChunk");
};
cljs.core.__GT_IntegerRangeChunk = function(a, b, c) {
  return new cljs.core.IntegerRangeChunk(a, b, c);
};
cljs.core.RangeIterator = function(a, b, c) {
  this.i = a;
  this.end = b;
  this.step = c;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  return 0 < this.step ? this.i < this.end : this.i > this.end;
};
cljs.core.RangeIterator.prototype.next = function() {
  var a = this.i;
  this.i += this.step;
  return a;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = !0;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function(a, b, c) {
  return new cljs.core.RangeIterator(a, b, c);
};
cljs.core.IntegerRange = function(a, b, c, d, e, f, g) {
  this.meta = a;
  this.start = b;
  this.end = c;
  this.step = d;
  this.chunk = e;
  this.chunk_next = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.IntegerRange.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.IntegerRange.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.IntegerRange.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IntegerRange.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.IntegerRange.prototype.forceChunk = function() {
  if (null == this.chunk) {
    var a = this.cljs$core$ICounted$_count$arity$1(null);
    return 32 < a ? (this.chunk_next = new cljs.core.IntegerRange(null, this.start + 32 * this.step, this.end, this.step, null, null, null), this.chunk = new cljs.core.IntegerRangeChunk(this.start, this.step, 32)) : this.chunk = new cljs.core.IntegerRangeChunk(this.start, this.step, a);
  }
  return null;
};
cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$2 = function(a, b) {
  if (0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null)) {
    return this.start + b * this.step;
  }
  if (0 <= b && this.start > this.end && 0 === this.step) {
    return this.start;
  }
  throw Error("Index out of bounds");
};
cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$3 = function(a, b, c) {
  return 0 <= b && b < this.cljs$core$ICounted$_count$arity$1(null) ? this.start + b * this.step : 0 <= b && this.start > this.end && 0 === this.step ? this.start : c;
};
cljs.core.IntegerRange.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RangeIterator(this.start, this.end, this.step);
};
cljs.core.IntegerRange.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.IntegerRange.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.IntegerRange(this.meta, this.start, this.end, this.step, this.chunk, this.chunk_next, this.__hash);
};
cljs.core.IntegerRange.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.step ? this.start + this.step < this.end ? new cljs.core.IntegerRange(null, this.start + this.step, this.end, this.step, null, null, null) : null : this.start + this.step > this.end ? new cljs.core.IntegerRange(null, this.start + this.step, this.end, this.step, null, null, null) : null;
};
cljs.core.IntegerRange.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return Math.ceil((this.end - this.start) / this.step);
};
cljs.core.IntegerRange.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.IntegerRange.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.IntegerRange.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(this, b);
};
cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (a = this.start;;) {
    if (0 < this.step ? a < this.end : a > this.end) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a += this.step;
    } else {
      return c;
    }
  }
};
cljs.core.IntegerRange.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.start;
};
cljs.core.IntegerRange.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = this.cljs$core$INext$_next$arity$1(null);
  return null == a ? cljs.core.List.EMPTY : a;
};
cljs.core.IntegerRange.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  this.forceChunk();
  return this.chunk;
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  this.forceChunk();
  return null == this.chunk_next ? cljs.core.List.EMPTY : this.chunk_next;
};
cljs.core.IntegerRange.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.IntegerRange(b, this.start, this.end, this.step, this.chunk, this.chunk_next, this.__hash);
};
cljs.core.IntegerRange.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.IntegerRange.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return cljs.core.seq(this.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.IntegerRange.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.IntegerRange.cljs$lang$type = !0;
cljs.core.IntegerRange.cljs$lang$ctorStr = "cljs.core/IntegerRange";
cljs.core.IntegerRange.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/IntegerRange");
};
cljs.core.__GT_IntegerRange = function(a, b, c, d, e, f, g) {
  return new cljs.core.IntegerRange(a, b, c, d, e, f, g);
};
cljs.core.IntegerRange.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.Range = function(a, b, c, d, e, f, g) {
  this.meta = a;
  this.start = b;
  this.end = c;
  this.step = d;
  this.chunk = e;
  this.chunk_next = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.Range.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.Range.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.Range.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Range.prototype.forceChunk = function() {
  if (null == this.chunk) {
    var a = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    a: {
      var b = 0;
      for (var c = this.start;;) {
        if (32 > b) {
          if (a[b] = c, b += 1, c += this.step, !(0 < this.step ? c < this.end : c > this.end)) {
            b = this.chunk = cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(a, 0, b);
            break a;
          }
        } else {
          b = c;
          break a;
        }
      }
    }
    if (null == this.chunk) {
      return this.chunk = cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(a, 0, 32), (0 < this.step ? b < this.end : b > this.end) ? this.chunk_next = new cljs.core.Range(null, b, this.end, this.step, null, null, null) : null;
    }
  }
  return null;
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RangeIterator(this.start, this.end, this.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.core.Range(this.meta, this.start, this.end, this.step, this.chunk, this.chunk_next, this.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(a) {
  return 0 < this.step ? this.start + this.step < this.end ? new cljs.core.Range(null, this.start + this.step, this.end, this.step, null, null, null) : null : this.start + this.step > this.end ? new cljs.core.Range(null, this.start + this.step, this.end, this.step, null, null, null) : null;
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = cljs.core.hash_ordered_coll(this);
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return cljs.core.equiv_sequential(this, b);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(a) {
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(b, this);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  for (a = this.start;;) {
    if (0 < this.step ? a < this.end : a > this.end) {
      c = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(c, a) : b.call(null, c, a);
      if (cljs.core.reduced_QMARK_(c)) {
        return cljs.core.deref(c);
      }
      a += this.step;
    } else {
      return c;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(a) {
  return this.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(a) {
  a = this.cljs$core$INext$_next$arity$1(null);
  return null == a ? cljs.core.List.EMPTY : a;
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return this;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(a) {
  this.forceChunk();
  return this.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(a) {
  this.forceChunk();
  return null == this.chunk_next ? cljs.core.List.EMPTY : this.chunk_next;
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return b === this.meta ? this : new cljs.core.Range(b, this.start, this.end, this.step, this.chunk, this.chunk_next, this.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.cons(b, this);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(a) {
  return cljs.core.seq(this.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Range.cljs$lang$type = !0;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Range");
};
cljs.core.__GT_Range = function(a, b, c, d, e, f, g) {
  return new cljs.core.Range(a, b, c, d, e, f, g);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.range = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, a, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(a, b, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return 0 < c ? b <= a ? cljs.core.List.EMPTY : cljs.core.integer_QMARK_(a) && cljs.core.integer_QMARK_(b) && cljs.core.integer_QMARK_(c) ? new cljs.core.IntegerRange(null, a, b, c, null, null, null) : new cljs.core.Range(null, a, b, c, null, null, null) : 0 > c ? b >= a ? cljs.core.List.EMPTY : cljs.core.integer_QMARK_(a) && cljs.core.integer_QMARK_(b) && cljs.core.integer_QMARK_(c) ? new cljs.core.IntegerRange(null, a, b, c, null, null, null) : new cljs.core.Range(null, a, b, c, null, null, null) : 
  b === a ? cljs.core.List.EMPTY : cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(a) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return function(b) {
    var c = cljs.core.volatile_BANG_(-1);
    return function() {
      var d = null, e = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, f = function(h) {
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(h) : b.call(null, h);
      }, g = function(h, k) {
        var l = c.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, c.cljs$core$IDeref$_deref$arity$1(null) + 1);
        return 0 === cljs.core.rem(l, a) ? b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k) : h;
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if ("number" !== typeof a) {
    throw Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.cons(cljs.core.first(c), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(a, c))) : null;
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(a, b), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(a, b)], null);
};
cljs.core.partition_by = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function(b) {
    var c = cljs.core.array_list(), d = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var e = null, f = function() {
        return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
      }, g = function(k) {
        if (!cljs.core.truth_(c.isEmpty())) {
          var l = cljs.core.vec(c.toArray());
          c.clear();
          k = cljs.core.unreduced(b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(k, l) : b.call(null, k, l));
        }
        return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k);
      }, h = function(k, l) {
        var m = cljs.core.deref(d), n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l);
        cljs.core.vreset_BANG_(d, n);
        if (cljs.core.keyword_identical_QMARK_(m, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n, m)) {
          return c.add(l), k;
        }
        m = cljs.core.vec(c.toArray());
        c.clear();
        k = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(k, m) : b.call(null, k, m);
        cljs.core.reduced_QMARK_(k) || c.add(l);
        return k;
      };
      e = function(k, l) {
        switch(arguments.length) {
          case 0:
            return f.call(this);
          case 1:
            return g.call(this, k);
          case 2:
            return h.call(this, k, l);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      e.cljs$core$IFn$_invoke$arity$0 = f;
      e.cljs$core$IFn$_invoke$arity$1 = g;
      e.cljs$core$IFn$_invoke$arity$2 = h;
      return e;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    if (c) {
      var d = cljs.core.first(c), e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d), f = cljs.core.cons(d, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(g) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(e, a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g));
      }, cljs.core.next(c)));
      return cljs.core.cons(f, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(f), c);
      }, null, null)));
    }
    return null;
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function(a) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(b, c, cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, c, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a));
};
cljs.core.reductions = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.LazySeq(null, function() {
    var c = cljs.core.seq(b);
    return c ? cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(a, cljs.core.first(c), cljs.core.rest(c)) : new cljs.core.List(null, a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), null, 1, null);
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return cljs.core.reduced_QMARK_(b) ? new cljs.core.List(null, cljs.core.deref(b), null, 1, null) : cljs.core.cons(b, new cljs.core.LazySeq(null, function() {
    var d = cljs.core.seq(c);
    if (d) {
      var e = cljs.core.reductions, f = e.cljs$core$IFn$_invoke$arity$3;
      var g = cljs.core.first(d);
      g = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, g) : a.call(null, b, g);
      return f.call(e, a, g, cljs.core.rest(d));
    }
    return null;
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return function() {
    var b = null, c = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null)], null);
    }, d = function(h) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(h) : a.call(null, h)], null);
    }, e = function(h, k) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(h, k) : a.call(null, h, k)], null);
    }, f = function(h, k, l) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(h, k, l) : a.call(null, h, k, l)], null);
    }, g = function() {
      var h = function(l, m, n, p) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, l, m, n, p)], null);
      }, k = function(l, m, n, p) {
        var r = null;
        if (3 < arguments.length) {
          r = 0;
          for (var u = Array(arguments.length - 3); r < u.length;) {
            u[r] = arguments[r + 3], ++r;
          }
          r = new cljs.core.IndexedSeq(u, 0, null);
        }
        return h.call(this, l, m, n, r);
      };
      k.cljs$lang$maxFixedArity = 3;
      k.cljs$lang$applyTo = function(l) {
        var m = cljs.core.first(l);
        l = cljs.core.next(l);
        var n = cljs.core.first(l);
        l = cljs.core.next(l);
        var p = cljs.core.first(l);
        l = cljs.core.rest(l);
        return h(m, n, p, l);
      };
      k.cljs$core$IFn$_invoke$arity$variadic = h;
      return k;
    }();
    b = function(h, k, l, m) {
      switch(arguments.length) {
        case 0:
          return c.call(this);
        case 1:
          return d.call(this, h);
        case 2:
          return e.call(this, h, k);
        case 3:
          return f.call(this, h, k, l);
        default:
          var n = null;
          if (3 < arguments.length) {
            n = 0;
            for (var p = Array(arguments.length - 3); n < p.length;) {
              p[n] = arguments[n + 3], ++n;
            }
            n = new cljs.core.IndexedSeq(p, 0, null);
          }
          return g.cljs$core$IFn$_invoke$arity$variadic(h, k, l, n);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    b.cljs$lang$maxFixedArity = 3;
    b.cljs$lang$applyTo = g.cljs$lang$applyTo;
    b.cljs$core$IFn$_invoke$arity$0 = c;
    b.cljs$core$IFn$_invoke$arity$1 = d;
    b.cljs$core$IFn$_invoke$arity$2 = e;
    b.cljs$core$IFn$_invoke$arity$3 = f;
    b.cljs$core$IFn$_invoke$arity$variadic = g.cljs$core$IFn$_invoke$arity$variadic;
    return b;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function() {
    var c = null, d = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null)], null);
    }, e = function(k) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(k) : b.call(null, k)], null);
    }, f = function(k, l) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(k, l) : a.call(null, k, l), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(k, l) : b.call(null, k, l)], null);
    }, g = function(k, l, m) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(k, l, m) : a.call(null, k, l, m), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, l, m) : b.call(null, k, l, m)], null);
    }, h = function() {
      var k = function(m, n, p, r) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, m, n, p, r), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, m, n, p, r)], null);
      }, l = function(m, n, p, r) {
        var u = null;
        if (3 < arguments.length) {
          u = 0;
          for (var z = Array(arguments.length - 3); u < z.length;) {
            z[u] = arguments[u + 3], ++u;
          }
          u = new cljs.core.IndexedSeq(z, 0, null);
        }
        return k.call(this, m, n, p, u);
      };
      l.cljs$lang$maxFixedArity = 3;
      l.cljs$lang$applyTo = function(m) {
        var n = cljs.core.first(m);
        m = cljs.core.next(m);
        var p = cljs.core.first(m);
        m = cljs.core.next(m);
        var r = cljs.core.first(m);
        m = cljs.core.rest(m);
        return k(n, p, r, m);
      };
      l.cljs$core$IFn$_invoke$arity$variadic = k;
      return l;
    }();
    c = function(k, l, m, n) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, k);
        case 2:
          return f.call(this, k, l);
        case 3:
          return g.call(this, k, l, m);
        default:
          var p = null;
          if (3 < arguments.length) {
            p = 0;
            for (var r = Array(arguments.length - 3); p < r.length;) {
              r[p] = arguments[p + 3], ++p;
            }
            p = new cljs.core.IndexedSeq(r, 0, null);
          }
          return h.cljs$core$IFn$_invoke$arity$variadic(k, l, m, p);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$lang$maxFixedArity = 3;
    c.cljs$lang$applyTo = h.cljs$lang$applyTo;
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    c.cljs$core$IFn$_invoke$arity$3 = g;
    c.cljs$core$IFn$_invoke$arity$variadic = h.cljs$core$IFn$_invoke$arity$variadic;
    return c;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return function() {
    var d = null, e = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null), c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)], null);
    }, f = function(l) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(l) : a.call(null, l), b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(l) : b.call(null, l), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(l) : c.call(null, l)], null);
    }, g = function(l, m) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(l, m) : a.call(null, l, m), b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(l, m) : b.call(null, l, m), c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(l, m) : c.call(null, l, m)], null);
    }, h = function(l, m, n) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a.cljs$core$IFn$_invoke$arity$3 ? a.cljs$core$IFn$_invoke$arity$3(l, m, n) : a.call(null, l, m, n), b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(l, m, n) : b.call(null, l, m, n), c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(l, m, n) : c.call(null, l, m, n)], null);
    }, k = function() {
      var l = function(n, p, r, u) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(a, n, p, r, u), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(b, n, p, r, u), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(c, n, p, r, u)], null);
      }, m = function(n, p, r, u) {
        var z = null;
        if (3 < arguments.length) {
          z = 0;
          for (var D = Array(arguments.length - 3); z < D.length;) {
            D[z] = arguments[z + 3], ++z;
          }
          z = new cljs.core.IndexedSeq(D, 0, null);
        }
        return l.call(this, n, p, r, z);
      };
      m.cljs$lang$maxFixedArity = 3;
      m.cljs$lang$applyTo = function(n) {
        var p = cljs.core.first(n);
        n = cljs.core.next(n);
        var r = cljs.core.first(n);
        n = cljs.core.next(n);
        var u = cljs.core.first(n);
        n = cljs.core.rest(n);
        return l(p, r, u, n);
      };
      m.cljs$core$IFn$_invoke$arity$variadic = l;
      return m;
    }();
    d = function(l, m, n, p) {
      switch(arguments.length) {
        case 0:
          return e.call(this);
        case 1:
          return f.call(this, l);
        case 2:
          return g.call(this, l, m);
        case 3:
          return h.call(this, l, m, n);
        default:
          var r = null;
          if (3 < arguments.length) {
            r = 0;
            for (var u = Array(arguments.length - 3); r < u.length;) {
              u[r] = arguments[r + 3], ++r;
            }
            r = new cljs.core.IndexedSeq(u, 0, null);
          }
          return k.cljs$core$IFn$_invoke$arity$variadic(l, m, n, r);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    d.cljs$lang$maxFixedArity = 3;
    d.cljs$lang$applyTo = k.cljs$lang$applyTo;
    d.cljs$core$IFn$_invoke$arity$0 = e;
    d.cljs$core$IFn$_invoke$arity$1 = f;
    d.cljs$core$IFn$_invoke$arity$2 = g;
    d.cljs$core$IFn$_invoke$arity$3 = h;
    d.cljs$core$IFn$_invoke$arity$variadic = k.cljs$core$IFn$_invoke$arity$variadic;
    return d;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  var e = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
  return function() {
    var f = null, g = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n, p) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(n, p.cljs$core$IFn$_invoke$arity$0 ? p.cljs$core$IFn$_invoke$arity$0() : p.call(null));
      }, cljs.core.PersistentVector.EMPTY, e);
    }, h = function(n) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p, r) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p, r.cljs$core$IFn$_invoke$arity$1 ? r.cljs$core$IFn$_invoke$arity$1(n) : r.call(null, n));
      }, cljs.core.PersistentVector.EMPTY, e);
    }, k = function(n, p) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, u) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r, u.cljs$core$IFn$_invoke$arity$2 ? u.cljs$core$IFn$_invoke$arity$2(n, p) : u.call(null, n, p));
      }, cljs.core.PersistentVector.EMPTY, e);
    }, l = function(n, p, r) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(u, z) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(u, z.cljs$core$IFn$_invoke$arity$3 ? z.cljs$core$IFn$_invoke$arity$3(n, p, r) : z.call(null, n, p, r));
      }, cljs.core.PersistentVector.EMPTY, e);
    }, m = function() {
      var n = function(r, u, z, D) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(H, L) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(H, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(L, r, u, z, D));
        }, cljs.core.PersistentVector.EMPTY, e);
      }, p = function(r, u, z, D) {
        var H = null;
        if (3 < arguments.length) {
          H = 0;
          for (var L = Array(arguments.length - 3); H < L.length;) {
            L[H] = arguments[H + 3], ++H;
          }
          H = new cljs.core.IndexedSeq(L, 0, null);
        }
        return n.call(this, r, u, z, H);
      };
      p.cljs$lang$maxFixedArity = 3;
      p.cljs$lang$applyTo = function(r) {
        var u = cljs.core.first(r);
        r = cljs.core.next(r);
        var z = cljs.core.first(r);
        r = cljs.core.next(r);
        var D = cljs.core.first(r);
        r = cljs.core.rest(r);
        return n(u, z, D, r);
      };
      p.cljs$core$IFn$_invoke$arity$variadic = n;
      return p;
    }();
    f = function(n, p, r, u) {
      switch(arguments.length) {
        case 0:
          return g.call(this);
        case 1:
          return h.call(this, n);
        case 2:
          return k.call(this, n, p);
        case 3:
          return l.call(this, n, p, r);
        default:
          var z = null;
          if (3 < arguments.length) {
            z = 0;
            for (var D = Array(arguments.length - 3); z < D.length;) {
              D[z] = arguments[z + 3], ++z;
            }
            z = new cljs.core.IndexedSeq(D, 0, null);
          }
          return m.cljs$core$IFn$_invoke$arity$variadic(n, p, r, z);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    f.cljs$lang$maxFixedArity = 3;
    f.cljs$lang$applyTo = m.cljs$lang$applyTo;
    f.cljs$core$IFn$_invoke$arity$0 = g;
    f.cljs$core$IFn$_invoke$arity$1 = h;
    f.cljs$core$IFn$_invoke$arity$2 = k;
    f.cljs$core$IFn$_invoke$arity$3 = l;
    f.cljs$core$IFn$_invoke$arity$variadic = m.cljs$core$IFn$_invoke$arity$variadic;
    return f;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  var d = cljs.core.next(c);
  c = cljs.core.first(d);
  d = cljs.core.next(d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = cljs.core.seq(a)) {
      a = cljs.core.next(a);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.seq(b) && 0 < a) {
      --a, b = cljs.core.next(b);
    } else {
      return null;
    }
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(a);
  return a;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(a, b);
  return b;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function(a) {
  return a instanceof RegExp;
};
cljs.core.re_matches = function(a, b) {
  if ("string" === typeof b) {
    return a = a.exec(b), null != a && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a[0], b) ? 1 === a.length ? a[0] : cljs.core.vec(a) : null;
  }
  throw new TypeError("re-matches must match against a string.");
};
cljs.core.re_find = function(a, b) {
  if ("string" === typeof b) {
    return a = a.exec(b), null == a ? null : 1 === a.length ? a[0] : cljs.core.vec(a);
  }
  throw new TypeError("re-find must match against a string.");
};
cljs.core.re_seq_STAR_ = function(a, b) {
  var c = a.exec(b);
  if (null == c) {
    return null;
  }
  var d = c[0], e = 1 === c.length ? d : cljs.core.vec(c);
  return cljs.core.cons(e, new cljs.core.LazySeq(null, function() {
    var f = d.length;
    f = c.index + (1 > f ? 1 : f);
    return f <= b.length ? (f = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(b, f), cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(a, f) : cljs.core.re_seq_STAR_.call(null, a, f)) : null;
  }, null, null));
};
cljs.core.re_seq = function(a, b) {
  if ("string" === typeof b) {
    return cljs.core.re_seq_STAR_(a, b);
  }
  throw new TypeError("re-seq must match against a string.");
};
cljs.core.re_pattern = function(a) {
  if (a instanceof RegExp) {
    return a;
  }
  var b = cljs.core.re_find(/^\(\?([idmsux]*)\)/, a), c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 0, null);
  b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(b, 1, null);
  a = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(a, null == c ? 0 : c.length);
  c = RegExp;
  b = cljs.core.truth_(b) ? b : "";
  return new c(a, b);
};
cljs.core.pr_sequential_writer = function(a, b, c, d, e, f, g) {
  var h = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = null == cljs.core._STAR_print_level_STAR_ ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (null != cljs.core._STAR_print_level_STAR_ && 0 > cljs.core._STAR_print_level_STAR_) {
      return cljs.core._write(a, "#");
    }
    cljs.core._write(a, c);
    if (0 === (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f)) {
      cljs.core.seq(g) && cljs.core._write(a, function() {
        var r = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
        return cljs.core.truth_(r) ? r : "...";
      }());
    } else {
      if (cljs.core.seq(g)) {
        var k = cljs.core.first(g);
        b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(k, a, f) : b.call(null, k, a, f);
      }
      for (var l = cljs.core.next(g), m = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(f) - 1;;) {
        if (!l || null != m && 0 === m) {
          cljs.core.seq(l) && 0 === m && (cljs.core._write(a, d), cljs.core._write(a, function() {
            var r = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(f);
            return cljs.core.truth_(r) ? r : "...";
          }()));
          break;
        } else {
          cljs.core._write(a, d);
          var n = cljs.core.first(l);
          c = a;
          g = f;
          b.cljs$core$IFn$_invoke$arity$3 ? b.cljs$core$IFn$_invoke$arity$3(n, c, g) : b.call(null, n, c, g);
          var p = cljs.core.next(l);
          c = m - 1;
          l = p;
          m = c;
        }
      }
    }
    return cljs.core._write(a, e);
  } finally {
    cljs.core._STAR_print_level_STAR_ = h;
  }
};
cljs.core.write_all = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.seq(b);
  for (var c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
      cljs.core._write(a, f);
      e += 1;
    } else {
      if (b = cljs.core.seq(b)) {
        c = b, cljs.core.chunked_seq_QMARK_(c) ? (b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f) : (f = cljs.core.first(c), cljs.core._write(a, f), b = cljs.core.next(c), c = null, d = 0), e = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.string_print = function(a) {
  if (null == cljs.core._STAR_print_fn_STAR_) {
    throw Error("No *print-fn* fn set for evaluation environment");
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_print_fn_STAR_.call(null, a);
  return null;
};
cljs.core.flush = function() {
  return null;
};
cljs.core.char_escapes = function() {
  return {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
}();
cljs.core.quote_string = function(a) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(b) {
    return cljs.core.char_escapes[b];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function(a, b) {
  return (a = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) ? (a = null != b ? b.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IMeta$ ? !0 : !1 : !1) ? null != cljs.core.meta(b) : a : a;
};
cljs.core.pr_writer_impl = function(a, b, c) {
  if (null == a) {
    return cljs.core._write(b, "nil");
  }
  cljs.core.print_meta_QMARK_(c, a) && (cljs.core._write(b, "^"), cljs.core.pr_writer(cljs.core.meta(a), b, c), cljs.core._write(b, " "));
  if (a.cljs$lang$type) {
    return a.cljs$lang$ctorPrWriter(a, b, c);
  }
  if (null != a ? a.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IPrintWithWriter$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, a)) {
    return cljs.core._pr_writer(a, b, c);
  }
  if (!0 === a || !1 === a) {
    return cljs.core._write(b, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  }
  if ("number" === typeof a) {
    return cljs.core._write(b, isNaN(a) ? "##NaN" : a === Number.POSITIVE_INFINITY ? "##Inf" : a === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  }
  if (cljs.core.object_QMARK_(a)) {
    return cljs.core._write(b, "#js "), cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(d) {
      var e = cljs.core.MapEntry;
      var f = null != cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, d) ? cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(d) : d;
      return new e(f, a[d], null);
    }, cljs.core.js_keys(a)), cljs.core.pr_writer, b, c);
  }
  if (cljs.core.array_QMARK_(a)) {
    return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#js [", " ", "]", c, a);
  }
  if ("string" === typeof a) {
    return cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core._write(b, cljs.core.quote_string(a)) : cljs.core._write(b, a);
  }
  if ("function" === typeof a) {
    return c = a.name, c = null == c || goog.string.isEmpty(c) ? "Function" : c, cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), '"'].join("") : "", "]"], 0));
  }
  if (a instanceof Date) {
    return c = function(d, e) {
      for (d = cljs.core.str.cljs$core$IFn$_invoke$arity$1(d);;) {
        if (d.length < e) {
          d = ["0", d].join("");
        } else {
          return d;
        }
      }
    }, cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', c(a.getUTCFullYear(), 4), "-", c(a.getUTCMonth() + 1, 2), "-", c(a.getUTCDate(), 2), "T", c(a.getUTCHours(), 2), ":", c(a.getUTCMinutes(), 2), ":", c(a.getUTCSeconds(), 2), ".", c(a.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
  }
  if (cljs.core.regexp_QMARK_(a)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', a.source, '"'], 0));
  }
  if (cljs.core.js_symbol_QMARK_(a)) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", a.toString(), "]"], 0));
  }
  if (cljs.core.truth_(function() {
    var d = null == a ? null : a.constructor;
    return null == d ? null : d.cljs$lang$ctorStr;
  }())) {
    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", a.constructor.cljs$lang$ctorStr.replace(RegExp("/", "g"), "."), "]"], 0));
  }
  c = function() {
    var d = null == a ? null : a.constructor;
    return null == d ? null : d.name;
  }();
  c = null == c || goog.string.isEmpty(c) ? "Object" : c;
  return null == a.constructor ? cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, "]"], 0)) : cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(b, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", c, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "]"], 0));
};
cljs.core.pr_writer = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(c);
  return cljs.core.truth_(d) ? (c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl), d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c)) : cljs.core.pr_writer_impl(a, b, c);
};
cljs.core.pr_seq_writer = function(a, b, c) {
  cljs.core.pr_writer(cljs.core.first(a), b, c);
  a = cljs.core.seq(cljs.core.next(a));
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = d.cljs$core$IIndexed$_nth$arity$2(null, f);
      cljs.core._write(b, " ");
      cljs.core.pr_writer(g, b, c);
      f += 1;
    } else {
      if (a = cljs.core.seq(a)) {
        d = a, cljs.core.chunked_seq_QMARK_(d) ? (a = cljs.core.chunk_first(d), e = cljs.core.chunk_rest(d), d = a, g = cljs.core.count(a), a = e, e = g) : (g = cljs.core.first(d), cljs.core._write(b, " "), cljs.core.pr_writer(g, b, c), a = cljs.core.next(d), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_sb_with_opts = function(a, b) {
  var c = new goog.string.StringBuffer(), d = new cljs.core.StringBufferWriter(c);
  cljs.core.pr_seq_writer(a, d, b);
  d.cljs$core$IWriter$_flush$arity$1(null);
  return c;
};
cljs.core.pr_str_with_opts = function(a, b) {
  return cljs.core.empty_QMARK_(a) ? "" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(a, b));
};
cljs.core.prn_str_with_opts = function(a, b) {
  if (cljs.core.empty_QMARK_(a)) {
    return "\n";
  }
  a = cljs.core.pr_sb_with_opts(a, b);
  a.append("\n");
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
};
cljs.core.pr_with_opts = function(a, b) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(a, b));
};
cljs.core.newline = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  cljs.core.string_print("\n");
  return cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(a, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939))) ? cljs.core.flush() : null;
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_with_opts(a, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.print = function() {
  var a = function(c) {
    return cljs.core.pr_with_opts(c, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}();
cljs.core.print_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.pr_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
  return cljs.core.truth_(cljs.core._STAR_print_newline_STAR_) ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.println_str = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.prn_str_with_opts(a, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), !1));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.pr_with_opts(a, cljs.core.pr_opts());
  return cljs.core.truth_(cljs.core._STAR_print_newline_STAR_) ? cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts()) : null;
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.strip_ns = function(a) {
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a)) : cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(a));
};
cljs.core.lift_ns = function(a) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var b = cljs.core.seq(a), c = cljs.core.seq(b), d = cljs.core.first(c);
    cljs.core.next(c);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(d, 1, null);
    c = cljs.core.empty(a);
    for (a = null;;) {
      d = a;
      b = cljs.core.seq(b);
      a = cljs.core.first(b);
      var e = cljs.core.next(b), f = a;
      a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 0, null);
      b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(f, 1, null);
      if (cljs.core.truth_(f)) {
        if (a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(d)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(d, cljs.core.namespace(a))) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          } else {
            if (d = cljs.core.namespace(a), cljs.core.truth_(d)) {
              c = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c, cljs.core.strip_ns(a), b), a = d, b = e;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
      }
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function(a, b, c, d, e) {
  return cljs.core.pr_sequential_writer(d, function(f, g, h) {
    var k = cljs.core.key(f);
    c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(k, g, h) : c.call(null, k, g, h);
    cljs.core._write(g, " ");
    f = cljs.core.val(f);
    return c.cljs$core$IFn$_invoke$arity$3 ? c.cljs$core$IFn$_invoke$arity$3(f, g, h) : c.call(null, f, g, h);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "{"].join(""), ", ", "}", e, cljs.core.seq(b));
};
cljs.core.print_map = function(a, b, c, d) {
  var e = cljs.core.map_QMARK_(a) ? cljs.core.lift_ns(a) : null, f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null);
  e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 1, null);
  return cljs.core.truth_(f) ? cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join(""), e, b, c, d) : cljs.core.print_prefix_map(null, a, b, c, d);
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#'");
  return cljs.core.pr_writer(this.sym, b, c);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#{", " ", "}", c, this);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), this.state], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "[", " ", "]", c, this);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "#queue [", " ", "]", c, cljs.core.seq(this));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.print_map(this, cljs.core.pr_writer, b, c);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (cljs.core.vector_QMARK_(b)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(this, b);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.alter_meta_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return a.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(b, a.meta, c);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a), c = cljs.core.next(a);
  a = cljs.core.first(c);
  c = cljs.core.next(c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.core.reset_meta_BANG_ = function(a, b) {
  return a.meta = b;
};
cljs.core.add_watch = function(a, b, c) {
  cljs.core._add_watch(a, b, c);
  return a;
};
cljs.core.remove_watch = function(a, b) {
  cljs.core._remove_watch(a, b);
  return a;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(a) {
  null == cljs.core.gensym_counter && (cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(a, b) {
  this.f = a;
  this.value = b;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(a) {
  cljs.core.truth_(this.f) && (this.value = this.f.cljs$core$IFn$_invoke$arity$0 ? this.f.cljs$core$IFn$_invoke$arity$0() : this.f.call(null), this.f = null);
  return this.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(a) {
  return cljs.core.not(this.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), null == this.f ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), this.value], null), b, c);
  return cljs.core._write(b, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.Delay.cljs$lang$type = !0;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function(a, b) {
  return new cljs.core.Delay(a, b);
};
cljs.core.delay_QMARK_ = function(a) {
  return a instanceof cljs.core.Delay;
};
cljs.core.force = function(a) {
  return cljs.core.delay_QMARK_(a) ? cljs.core.deref(a) : a;
};
cljs.core.realized_QMARK_ = function(a) {
  return cljs.core._realized_QMARK_(a);
};
cljs.core.preserving_reduced = function(a) {
  return function(b, c) {
    b = a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c);
    return cljs.core.reduced_QMARK_(b) ? cljs.core.reduced(b) : b;
  };
};
cljs.core.cat = function(a) {
  var b = cljs.core.preserving_reduced(a);
  return function() {
    var c = null, d = function() {
      return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
    }, e = function(g) {
      return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
    }, f = function(g, h) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(b, g, h);
    };
    c = function(g, h) {
      switch(arguments.length) {
        case 0:
          return d.call(this);
        case 1:
          return e.call(this, g);
        case 2:
          return f.call(this, g, h);
      }
      throw Error("Invalid arity: " + arguments.length);
    };
    c.cljs$core$IFn$_invoke$arity$0 = d;
    c.cljs$core$IFn$_invoke$arity$1 = e;
    c.cljs$core$IFn$_invoke$arity$2 = f;
    return c;
  }();
};
cljs.core.halt_when = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(a, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return function(c) {
    return function() {
      var d = null, e = function() {
        return c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null);
      }, f = function(h) {
        return cljs.core.map_QMARK_(h) && cljs.core.contains_QMARK_(h, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)) ? (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(h) : c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(h) : c.call(null, h);
      }, g = function(h, k) {
        if (cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(k) : a.call(null, k))) {
          var l = cljs.core, m = l.reduced, n = cljs.core.PersistentArrayMap, p = new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715);
          cljs.core.truth_(b) && (h = c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(h) : c.call(null, h), k = b.cljs$core$IFn$_invoke$arity$2 ? b.cljs$core$IFn$_invoke$arity$2(h, k) : b.call(null, h, k));
          return m.call(l, new n(null, 1, [p, k], null));
        }
        return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(h, k) : c.call(null, h, k);
      };
      d = function(h, k) {
        switch(arguments.length) {
          case 0:
            return e.call(this);
          case 1:
            return f.call(this, h);
          case 2:
            return g.call(this, h, k);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      d.cljs$core$IFn$_invoke$arity$0 = e;
      d.cljs$core$IFn$_invoke$arity$1 = f;
      d.cljs$core$IFn$_invoke$arity$2 = g;
      return d;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(a) {
    var b = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var c = null, d = function() {
        return a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null);
      }, e = function(g) {
        return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(g) : a.call(null, g);
      }, f = function(g, h) {
        var k = cljs.core.deref(b);
        cljs.core.vreset_BANG_(b, h);
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, h) ? g : a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(g, h) : a.call(null, g, h);
      };
      c = function(g, h) {
        switch(arguments.length) {
          case 0:
            return d.call(this);
          case 1:
            return e.call(this, g);
          case 2:
            return f.call(this, g, h);
        }
        throw Error("Invalid arity: " + arguments.length);
      };
      c.cljs$core$IFn$_invoke$arity$0 = d;
      c.cljs$core$IFn$_invoke$arity$1 = e;
      c.cljs$core$IFn$_invoke$arity$2 = f;
      return c;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), a);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(b) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(c) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < a;
  }, b);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(a, b) {
  this.xform = a;
  this.coll = b;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, 0);
  }, c = function(d, e) {
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var a = null, b = function(d) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, cljs.core.count(this));
  }, c = function(d, e) {
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(this, d, e);
  };
  a = function(d, e) {
    switch(arguments.length) {
      case 1:
        return b.call(this, d);
      case 2:
        return c.call(this, d, e);
    }
    throw Error("Invalid arity: " + arguments.length);
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  return a;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return cljs.core.TransformerIterator.create(this.xform, cljs.core.iter(this.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(this.xform, this.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(a, b) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(a, b, c) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(this.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(b), c, this.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer(b, cljs.core.pr_writer, "(", " ", ")", c, this);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = !0;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function(a, b) {
  return new cljs.core.Eduction(a, b);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  return cljs.core.es6_iterator(this);
};
cljs.core.eduction = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(a)), cljs.core.last(a));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(a));
};
cljs.core.run_BANG_ = function(a, b) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
  }, null, b);
  return null;
};
cljs.core.iteration = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.iteration.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.iteration.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.__destructure_map(b), d = cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "somef", "somef", -622590365), cljs.core.some_QMARK_), e = cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "vf", "vf", -321423269), cljs.core.identity), f = cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, "kf", "kf", 1608087589), cljs.core.identity), g = cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, new cljs.core.Keyword(null, 
  "initk", "initk", -1693342987), null);
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core.t_cljs$core12464) {
    cljs.core.t_cljs$core12464 = function(h, k, l, m, n, p, r, u) {
      this.step = h;
      this.p__12462 = k;
      this.map__12463 = l;
      this.somef = m;
      this.vf = n;
      this.kf = p;
      this.initk = r;
      this.meta12465 = u;
      this.cljs$lang$protocol_mask$partition0$ = 9306112;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.core.t_cljs$core12464.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(h, k) {
      return new cljs.core.t_cljs$core12464(this.step, this.p__12462, this.map__12463, this.somef, this.vf, this.kf, this.initk, k);
    }, cljs.core.t_cljs$core12464.prototype.cljs$core$IMeta$_meta$arity$1 = function(h) {
      return this.meta12465;
    }, cljs.core.t_cljs$core12464.prototype.cljs$core$ISeqable$_seq$arity$1 = function(h) {
      var k = this;
      return function n(m) {
        return cljs.core.truth_(k.somef.cljs$core$IFn$_invoke$arity$1 ? k.somef.cljs$core$IFn$_invoke$arity$1(m) : k.somef.call(null, m)) ? cljs.core.cons(k.vf.cljs$core$IFn$_invoke$arity$1 ? k.vf.cljs$core$IFn$_invoke$arity$1(m) : k.vf.call(null, m), function() {
          var p = k.kf.cljs$core$IFn$_invoke$arity$1 ? k.kf.cljs$core$IFn$_invoke$arity$1(m) : k.kf.call(null, m);
          return null == p ? null : new cljs.core.LazySeq(null, function() {
            return n(k.step.cljs$core$IFn$_invoke$arity$1 ? k.step.cljs$core$IFn$_invoke$arity$1(p) : k.step.call(null, p));
          }, null, null);
        }()) : null;
      }(k.step.cljs$core$IFn$_invoke$arity$1 ? k.step.cljs$core$IFn$_invoke$arity$1(k.initk) : k.step.call(null, k.initk));
    }, cljs.core.t_cljs$core12464.prototype.cljs$core$IReduce$_reduce$arity$3 = function(h, k, l) {
      for (h = this.step.cljs$core$IFn$_invoke$arity$1 ? this.step.cljs$core$IFn$_invoke$arity$1(this.initk) : this.step.call(null, this.initk);;) {
        if (cljs.core.truth_(this.somef.cljs$core$IFn$_invoke$arity$1 ? this.somef.cljs$core$IFn$_invoke$arity$1(h) : this.somef.call(null, h))) {
          var m = this.vf.cljs$core$IFn$_invoke$arity$1 ? this.vf.cljs$core$IFn$_invoke$arity$1(h) : this.vf.call(null, h);
          l = k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(l, m) : k.call(null, l, m);
          if (cljs.core.reduced_QMARK_(l)) {
            return cljs.core.deref(l);
          }
          h = this.kf.cljs$core$IFn$_invoke$arity$1 ? this.kf.cljs$core$IFn$_invoke$arity$1(h) : this.kf.call(null, h);
          if (null == h) {
            return l;
          }
          h = this.step.cljs$core$IFn$_invoke$arity$1 ? this.step.cljs$core$IFn$_invoke$arity$1(h) : this.step.call(null, h);
        } else {
          return l;
        }
      }
    }, cljs.core.t_cljs$core12464.getBasis = function() {
      return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "p__12462", "p__12462", 240312552, null), new cljs.core.Symbol(null, "map__12463", "map__12463", -4480099, null), new cljs.core.Symbol(null, "somef", "somef", 1017941162, null), new cljs.core.Symbol(null, "vf", "vf", 1319108258, null), new cljs.core.Symbol(null, "kf", "kf", -1046348180, null), new cljs.core.Symbol(null, 
      "initk", "initk", -52811460, null), new cljs.core.Symbol(null, "meta12465", "meta12465", -1111426819, null)], null);
    }, cljs.core.t_cljs$core12464.cljs$lang$type = !0, cljs.core.t_cljs$core12464.cljs$lang$ctorStr = "cljs.core/t_cljs$core12464", cljs.core.t_cljs$core12464.cljs$lang$ctorPrWriter = function(h, k, l) {
      return cljs.core._write(k, "cljs.core/t_cljs$core12464");
    }, cljs.core.__GT_t_cljs$core12464 = function(h, k, l, m, n, p, r, u) {
      return new cljs.core.t_cljs$core12464(h, k, l, m, n, p, r, u);
    };
  }
  return new cljs.core.t_cljs$core12464(a, b, c, d, e, f, g, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.iteration.cljs$lang$maxFixedArity = 1;
cljs.core.iteration.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.IEncodeJS = function() {
};
var cljs$core$IEncodeJS$_clj__GT_js$dyn_12476 = function(a) {
  var b = cljs.core._clj__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._clj__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", a);
};
cljs.core._clj__GT_js = function(a) {
  return null != a && null != a.cljs$core$IEncodeJS$_clj__GT_js$arity$1 ? a.cljs$core$IEncodeJS$_clj__GT_js$arity$1(a) : cljs$core$IEncodeJS$_clj__GT_js$dyn_12476(a);
};
var cljs$core$IEncodeJS$_key__GT_js$dyn_12477 = function(a) {
  var b = cljs.core._key__GT_js[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._key__GT_js._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", a);
};
cljs.core._key__GT_js = function(a) {
  return null != a && null != a.cljs$core$IEncodeJS$_key__GT_js$arity$1 ? a.cljs$core$IEncodeJS$_key__GT_js$arity$1(a) : cljs$core$IEncodeJS$_key__GT_js$dyn_12477(a);
};
cljs.core.key__GT_js = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(a, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return (null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEncodeJS$ || (a.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, a)) ? cljs.core._clj__GT_js(a) : "string" === typeof a || "number" === typeof a || a instanceof cljs.core.Keyword || a instanceof cljs.core.Symbol ? b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a) : cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a], 
  0));
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.__destructure_map(b);
  var c = cljs.core.get.cljs$core$IFn$_invoke$arity$3(b, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name), d = function g(f) {
    if (null == f) {
      return null;
    }
    if (null != f ? cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IEncodeJS$ || (f.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, f)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, f)) {
      return cljs.core._clj__GT_js(f);
    }
    if (f instanceof cljs.core.Keyword) {
      return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(f) : c.call(null, f);
    }
    if (f instanceof cljs.core.Symbol) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(f);
    }
    if (cljs.core.map_QMARK_(f)) {
      var h = {};
      f = cljs.core.seq(f);
      for (var k = null, l = 0, m = 0;;) {
        if (m < l) {
          var n = k.cljs$core$IIndexed$_nth$arity$2(null, m), p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(n, 0, null), r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(n, 1, null);
          n = h;
          p = cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(p, d);
          r = g(r);
          cljs.core.goog$module$goog$object.set.call(null, n, p, r);
          m += 1;
        } else {
          if (f = cljs.core.seq(f)) {
            cljs.core.chunked_seq_QMARK_(f) ? (l = cljs.core.chunk_first(f), f = cljs.core.chunk_rest(f), k = l, l = cljs.core.count(l)) : (k = cljs.core.first(f), l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(k, 0, null), m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(k, 1, null), k = h, l = cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(l, d), m = g(m), cljs.core.goog$module$goog$object.set.call(null, k, l, m), f = cljs.core.next(f), k = null, l = 0), m = 0;
          } else {
            break;
          }
        }
      }
      return h;
    }
    if (cljs.core.coll_QMARK_(f)) {
      h = [];
      f = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(g, f));
      k = null;
      for (m = l = 0;;) {
        if (m < l) {
          n = k.cljs$core$IIndexed$_nth$arity$2(null, m), h.push(n), m += 1;
        } else {
          if (f = cljs.core.seq(f)) {
            k = f, cljs.core.chunked_seq_QMARK_(k) ? (f = cljs.core.chunk_first(k), m = cljs.core.chunk_rest(k), k = f, l = cljs.core.count(f), f = m) : (f = cljs.core.first(k), h.push(f), f = cljs.core.next(k), k = null, l = 0), m = 0;
          } else {
            break;
          }
        }
      }
      return h;
    }
    return f;
  };
  return d(a);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.IEncodeClojure = function() {
};
var cljs$core$IEncodeClojure$_js__GT_clj$dyn_12611 = function(a, b) {
  var c = cljs.core._js__GT_clj[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._js__GT_clj._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", a);
};
cljs.core._js__GT_clj = function(a, b) {
  return null != a && null != a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 ? a.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(a, b) : cljs$core$IEncodeClojure$_js__GT_clj$dyn_12611(a, b);
};
cljs.core.js__GT_clj = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), !1], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.__destructure_map(b);
  c = cljs.core.get.cljs$core$IFn$_invoke$arity$2(c, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var d = cljs.core.truth_(c) ? cljs.core.keyword : cljs.core.str;
  return function g(f) {
    return (null != f ? cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IEncodeClojure$ || (f.cljs$lang$protocol_mask$partition$ ? 0 : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, f)) ? cljs.core._js__GT_clj(f, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, b)) : cljs.core.seq_QMARK_(f) ? cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(g, f)) : cljs.core.map_entry_QMARK_(f) ? 
    new cljs.core.MapEntry(g(cljs.core.key(f)), g(cljs.core.val(f)), null) : cljs.core.coll_QMARK_(f) ? cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(f), cljs.core.map.cljs$core$IFn$_invoke$arity$1(g), f) : cljs.core.array_QMARK_(f) ? cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(h, k) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(h, g(k));
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), f)) : cljs.core.type(f) === Object ? cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(h, k) {
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(h, d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(k) : d.call(null, k), g(cljs.core.goog$module$goog$object.get.call(null, f, k)));
    }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(f))) : f;
  }(a);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function(a) {
  var b = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var c = function(e) {
      var f = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(b), e, cljs.core.lookup_sentinel);
      return f === cljs.core.lookup_sentinel ? (f = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, e), cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(b, cljs.core.assoc, e, f), f) : f;
    }, d = function(e) {
      var f = null;
      if (0 < arguments.length) {
        f = 0;
        for (var g = Array(arguments.length - 0); f < g.length;) {
          g[f] = arguments[f + 0], ++f;
        }
        f = new cljs.core.IndexedSeq(g, 0, null);
      }
      return c.call(this, f);
    };
    d.cljs$lang$maxFixedArity = 0;
    d.cljs$lang$applyTo = function(e) {
      e = cljs.core.seq(e);
      return c(e);
    };
    d.cljs$core$IFn$_invoke$arity$variadic = c;
    return d;
  }();
};
cljs.core.trampoline = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(a) {
  for (;;) {
    if (a = a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), !cljs.core.fn_QMARK_(a)) {
      return a;
    }
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(a, b);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function(a) {
  switch(arguments.length) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return Math.random() * a;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function(a) {
  return Math.floor(Math.random() * a);
};
cljs.core.rand_nth = function(a) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(a, cljs.core.rand_int(cljs.core.count(a)));
};
cljs.core.group_by = function(a, b) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(c, d) {
    var e = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(d) : a.call(null, d);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, e, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(c, e, cljs.core.PersistentVector.EMPTY), d));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), b));
};
cljs.core.make_hierarchy = function() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function() {
  null == cljs.core._global_hierarchy && (cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy()));
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), a, b);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first(a);
  a = cljs.core.next(a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.core.isa_QMARK_ = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), a, b);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(b, c);
  if (d) {
    return d;
  }
  d = cljs.core;
  var e = d.contains_QMARK_;
  var f = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a);
  f = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(b) : f.call(null, b);
  if (!(d = e.call(d, f, c)) && (d = cljs.core.vector_QMARK_(c))) {
    if (d = cljs.core.vector_QMARK_(b)) {
      if (d = cljs.core.count(c) === cljs.core.count(b)) {
        for (d = !0, e = 0;;) {
          if (d && e !== cljs.core.count(c)) {
            d = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(a, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(e) : c.call(null, e)), e += 1;
          } else {
            return d;
          }
        }
      } else {
        return d;
      }
    } else {
      return d;
    }
  } else {
    return d;
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), a);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), b));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (!cljs.core.truth_(cljs.core.namespace(b))) {
    throw Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  if (!cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(b, c)) {
    throw Error("Assert failed: (not\x3d tag parent)");
  }
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), f = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), g = function(h, k, l, m, n) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p, r) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p, r, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(n, r, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(m, n.cljs$core$IFn$_invoke$arity$1 ? n.cljs$core$IFn$_invoke$arity$1(m) : n.call(null, m))));
    }, h, cljs.core.cons(k, l.cljs$core$IFn$_invoke$arity$1 ? l.cljs$core$IFn$_invoke$arity$1(k) : l.call(null, k)));
  };
  if (cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c)) {
    b = null;
  } else {
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(b) : f.call(null, b), c)) {
      throw Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "as ancestor"].join(""));
    }
    if (cljs.core.contains_QMARK_(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(c) : f.call(null, c), b)) {
      throw Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "as ancestor"].join(""));
    }
    b = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.PersistentHashSet.EMPTY), c)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), g((new cljs.core.Keyword(null, "ancestors", 
    "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(a), b, e, c, f), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), g((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(a), c, f, b, e)], null);
  }
  return cljs.core.truth_(b) ? b : a;
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.truth_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) : cljs.core.PersistentHashSet.EMPTY;
  e = cljs.core.truth_(cljs.core.not_empty(e)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, b, e) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(d, b);
  e = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(f) {
    return cljs.core.cons(cljs.core.first(f), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(f), cljs.core.second(f)));
  }, cljs.core.seq(e)));
  return cljs.core.contains_QMARK_(d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b), c) ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(f, g) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, f, g);
  }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, e)) : a;
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function(a, b, c, d) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, function(e) {
    return cljs.core.deref(b);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(c, function(e) {
    return cljs.core.deref(d);
  });
};
cljs.core.prefers_STAR_ = function(a, b, c) {
  var d = function() {
    var e = cljs.core.deref(c);
    return e.cljs$core$IFn$_invoke$arity$1 ? e.cljs$core$IFn$_invoke$arity$1(a) : e.call(null, a);
  }();
  d = cljs.core.truth_(cljs.core.truth_(d) ? d.cljs$core$IFn$_invoke$arity$1 ? d.cljs$core$IFn$_invoke$arity$1(b) : d.call(null, b) : d) ? !0 : null;
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var e = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(b);;) {
      if (0 < cljs.core.count(e)) {
        var f = cljs.core, g = f.truth_;
        var h = a;
        var k = cljs.core.first(e), l = c;
        h = cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(h, k, l) : cljs.core.prefers_STAR_.call(null, h, k, l);
        g.call(f, h);
        e = cljs.core.rest(e);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(d)) {
    return d;
  }
  d = function() {
    for (var e = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(a);;) {
      if (0 < cljs.core.count(e)) {
        var f = cljs.core, g = f.truth_;
        var h = cljs.core.first(e);
        var k = b, l = c;
        h = cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(h, k, l) : cljs.core.prefers_STAR_.call(null, h, k, l);
        g.call(f, h);
        e = cljs.core.rest(e);
      } else {
        return null;
      }
    }
  }();
  return cljs.core.truth_(d) ? d : !1;
};
cljs.core.dominates = function(a, b, c, d) {
  c = cljs.core.prefers_STAR_(a, b, c);
  return cljs.core.truth_(c) ? c : cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(d, a, b);
};
cljs.core.find_and_cache_best_method = function(a, b, c, d, e, f, g, h) {
  var k = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, n) {
    var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(n, 0, null);
    cljs.core.nth.cljs$core$IFn$_invoke$arity$3(n, 1, null);
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(c), b, p)) {
      m = null == m || cljs.core.dominates(p, cljs.core.first(m), e, cljs.core.deref(c)) ? n : m;
      if (!cljs.core.dominates(cljs.core.first(m), p, e, cljs.core.deref(c))) {
        throw Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(m)), ", and neither is preferred"].join(""));
      }
      return m;
    }
    return m;
  }, null, cljs.core.deref(d)), l = function() {
    var m;
    if (m = null == k) {
      m = cljs.core.deref(d), m = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(h) : m.call(null, h);
    }
    return cljs.core.truth_(m) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, m], null) : k;
  }();
  if (cljs.core.truth_(l)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(g), cljs.core.deref(c))) {
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(f, cljs.core.assoc, b, cljs.core.second(l)), cljs.core.second(l);
    }
    cljs.core.reset_cache(f, d, g, c);
    return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : cljs.core.find_and_cache_best_method.call(null, a, b, c, d, e, f, g, h);
  }
  return null;
};
cljs.core.IMultiFn = function() {
};
var cljs$core$IMultiFn$_reset$dyn_12683 = function(a) {
  var b = cljs.core._reset[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._reset._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-reset", a);
};
cljs.core._reset = function(a) {
  return null != a && null != a.cljs$core$IMultiFn$_reset$arity$1 ? a.cljs$core$IMultiFn$_reset$arity$1(a) : cljs$core$IMultiFn$_reset$dyn_12683(a);
};
var cljs$core$IMultiFn$_add_method$dyn_12684 = function(a, b, c) {
  var d = cljs.core._add_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._add_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-add-method", a);
};
cljs.core._add_method = function(a, b, c) {
  return null != a && null != a.cljs$core$IMultiFn$_add_method$arity$3 ? a.cljs$core$IMultiFn$_add_method$arity$3(a, b, c) : cljs$core$IMultiFn$_add_method$dyn_12684(a, b, c);
};
var cljs$core$IMultiFn$_remove_method$dyn_12685 = function(a, b) {
  var c = cljs.core._remove_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._remove_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-remove-method", a);
};
cljs.core._remove_method = function(a, b) {
  return null != a && null != a.cljs$core$IMultiFn$_remove_method$arity$2 ? a.cljs$core$IMultiFn$_remove_method$arity$2(a, b) : cljs$core$IMultiFn$_remove_method$dyn_12685(a, b);
};
var cljs$core$IMultiFn$_prefer_method$dyn_12686 = function(a, b, c) {
  var d = cljs.core._prefer_method[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  d = cljs.core._prefer_method._;
  if (null != d) {
    return d.cljs$core$IFn$_invoke$arity$3 ? d.cljs$core$IFn$_invoke$arity$3(a, b, c) : d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefer-method", a);
};
cljs.core._prefer_method = function(a, b, c) {
  return null != a && null != a.cljs$core$IMultiFn$_prefer_method$arity$3 ? a.cljs$core$IMultiFn$_prefer_method$arity$3(a, b, c) : cljs$core$IMultiFn$_prefer_method$dyn_12686(a, b, c);
};
var cljs$core$IMultiFn$_get_method$dyn_12687 = function(a, b) {
  var c = cljs.core._get_method[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  c = cljs.core._get_method._;
  if (null != c) {
    return c.cljs$core$IFn$_invoke$arity$2 ? c.cljs$core$IFn$_invoke$arity$2(a, b) : c.call(null, a, b);
  }
  throw cljs.core.missing_protocol("IMultiFn.-get-method", a);
};
cljs.core._get_method = function(a, b) {
  return null != a && null != a.cljs$core$IMultiFn$_get_method$arity$2 ? a.cljs$core$IMultiFn$_get_method$arity$2(a, b) : cljs$core$IMultiFn$_get_method$dyn_12687(a, b);
};
var cljs$core$IMultiFn$_methods$dyn_12688 = function(a) {
  var b = cljs.core._methods[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._methods._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-methods", a);
};
cljs.core._methods = function(a) {
  return null != a && null != a.cljs$core$IMultiFn$_methods$arity$1 ? a.cljs$core$IMultiFn$_methods$arity$1(a) : cljs$core$IMultiFn$_methods$dyn_12688(a);
};
var cljs$core$IMultiFn$_prefers$dyn_12689 = function(a) {
  var b = cljs.core._prefers[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._prefers._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-prefers", a);
};
cljs.core._prefers = function(a) {
  return null != a && null != a.cljs$core$IMultiFn$_prefers$arity$1 ? a.cljs$core$IMultiFn$_prefers$arity$1(a) : cljs$core$IMultiFn$_prefers$dyn_12689(a);
};
var cljs$core$IMultiFn$_default_dispatch_val$dyn_12690 = function(a) {
  var b = cljs.core._default_dispatch_val[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._default_dispatch_val._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", a);
};
cljs.core._default_dispatch_val = function(a) {
  return null != a && null != a.cljs$core$IMultiFn$_default_dispatch_val$arity$1 ? a.cljs$core$IMultiFn$_default_dispatch_val$arity$1(a) : cljs$core$IMultiFn$_default_dispatch_val$dyn_12690(a);
};
var cljs$core$IMultiFn$_dispatch_fn$dyn_12691 = function(a) {
  var b = cljs.core._dispatch_fn[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  b = cljs.core._dispatch_fn._;
  if (null != b) {
    return b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(a) : b.call(null, a);
  }
  throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", a);
};
cljs.core._dispatch_fn = function(a) {
  return null != a && null != a.cljs$core$IMultiFn$_dispatch_fn$arity$1 ? a.cljs$core$IMultiFn$_dispatch_fn$arity$1(a) : cljs$core$IMultiFn$_dispatch_fn$dyn_12691(a);
};
cljs.core.throw_no_method_error = function(a, b) {
  throw Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.MultiFn = function(a, b, c, d, e, f, g, h) {
  this.name = a;
  this.dispatch_fn = b;
  this.default_dispatch_val = c;
  this.hierarchy = d;
  this.method_table = e;
  this.prefer_table = f;
  this.method_cache = g;
  this.cached_hierarchy = h;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var a = null, b = function(q) {
    q = this;
    var t = q.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : q.dispatch_fn.call(null), v = this.cljs$core$IMultiFn$_get_method$arity$2(null, t);
    cljs.core.truth_(v) || cljs.core.throw_no_method_error(q.name, t);
    return v.cljs$core$IFn$_invoke$arity$0 ? v.cljs$core$IFn$_invoke$arity$0() : v.call(null);
  }, c = function(q, t) {
    q = this;
    var v = q.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$1(t) : q.dispatch_fn.call(null, t), w = this.cljs$core$IMultiFn$_get_method$arity$2(null, v);
    cljs.core.truth_(w) || cljs.core.throw_no_method_error(q.name, v);
    return w.cljs$core$IFn$_invoke$arity$1 ? w.cljs$core$IFn$_invoke$arity$1(t) : w.call(null, t);
  }, d = function(q, t, v) {
    q = this;
    var w = q.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$2(t, v) : q.dispatch_fn.call(null, t, v), x = this.cljs$core$IMultiFn$_get_method$arity$2(null, w);
    cljs.core.truth_(x) || cljs.core.throw_no_method_error(q.name, w);
    return x.cljs$core$IFn$_invoke$arity$2 ? x.cljs$core$IFn$_invoke$arity$2(t, v) : x.call(null, t, v);
  }, e = function(q, t, v, w) {
    q = this;
    var x = q.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$3(t, v, w) : q.dispatch_fn.call(null, t, v, w), y = this.cljs$core$IMultiFn$_get_method$arity$2(null, x);
    cljs.core.truth_(y) || cljs.core.throw_no_method_error(q.name, x);
    return y.cljs$core$IFn$_invoke$arity$3 ? y.cljs$core$IFn$_invoke$arity$3(t, v, w) : y.call(null, t, v, w);
  }, f = function(q, t, v, w, x) {
    q = this;
    var y = q.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$4(t, v, w, x) : q.dispatch_fn.call(null, t, v, w, x), A = this.cljs$core$IMultiFn$_get_method$arity$2(null, y);
    cljs.core.truth_(A) || cljs.core.throw_no_method_error(q.name, y);
    return A.cljs$core$IFn$_invoke$arity$4 ? A.cljs$core$IFn$_invoke$arity$4(t, v, w, x) : A.call(null, t, v, w, x);
  }, g = function(q, t, v, w, x, y) {
    q = this;
    var A = q.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$5(t, v, w, x, y) : q.dispatch_fn.call(null, t, v, w, x, y), B = this.cljs$core$IMultiFn$_get_method$arity$2(null, A);
    cljs.core.truth_(B) || cljs.core.throw_no_method_error(q.name, A);
    return B.cljs$core$IFn$_invoke$arity$5 ? B.cljs$core$IFn$_invoke$arity$5(t, v, w, x, y) : B.call(null, t, v, w, x, y);
  }, h = function(q, t, v, w, x, y, A) {
    q = this;
    var B = q.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$6(t, v, w, x, y, A) : q.dispatch_fn.call(null, t, v, w, x, y, A), C = this.cljs$core$IMultiFn$_get_method$arity$2(null, B);
    cljs.core.truth_(C) || cljs.core.throw_no_method_error(q.name, B);
    return C.cljs$core$IFn$_invoke$arity$6 ? C.cljs$core$IFn$_invoke$arity$6(t, v, w, x, y, A) : C.call(null, t, v, w, x, y, A);
  }, k = function(q, t, v, w, x, y, A, B) {
    q = this;
    var C = q.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$7(t, v, w, x, y, A, B) : q.dispatch_fn.call(null, t, v, w, x, y, A, B), E = this.cljs$core$IMultiFn$_get_method$arity$2(null, C);
    cljs.core.truth_(E) || cljs.core.throw_no_method_error(q.name, C);
    return E.cljs$core$IFn$_invoke$arity$7 ? E.cljs$core$IFn$_invoke$arity$7(t, v, w, x, y, A, B) : E.call(null, t, v, w, x, y, A, B);
  }, l = function(q, t, v, w, x, y, A, B, C) {
    q = this;
    var E = q.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$8(t, v, w, x, y, A, B, C) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C), F = this.cljs$core$IMultiFn$_get_method$arity$2(null, E);
    cljs.core.truth_(F) || cljs.core.throw_no_method_error(q.name, E);
    return F.cljs$core$IFn$_invoke$arity$8 ? F.cljs$core$IFn$_invoke$arity$8(t, v, w, x, y, A, B, C) : F.call(null, t, v, w, x, y, A, B, C);
  }, m = function(q, t, v, w, x, y, A, B, C, E) {
    q = this;
    var F = q.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$9(t, v, w, x, y, A, B, C, E) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E), G = this.cljs$core$IMultiFn$_get_method$arity$2(null, F);
    cljs.core.truth_(G) || cljs.core.throw_no_method_error(q.name, F);
    return G.cljs$core$IFn$_invoke$arity$9 ? G.cljs$core$IFn$_invoke$arity$9(t, v, w, x, y, A, B, C, E) : G.call(null, t, v, w, x, y, A, B, C, E);
  }, n = function(q, t, v, w, x, y, A, B, C, E, F) {
    q = this;
    var G = q.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$10(t, v, w, x, y, A, B, C, E, F) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F), I = this.cljs$core$IMultiFn$_get_method$arity$2(null, G);
    cljs.core.truth_(I) || cljs.core.throw_no_method_error(q.name, G);
    return I.cljs$core$IFn$_invoke$arity$10 ? I.cljs$core$IFn$_invoke$arity$10(t, v, w, x, y, A, B, C, E, F) : I.call(null, t, v, w, x, y, A, B, C, E, F);
  }, p = function(q, t, v, w, x, y, A, B, C, E, F, G) {
    q = this;
    var I = q.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$11(t, v, w, x, y, A, B, C, E, F, G) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G), J = this.cljs$core$IMultiFn$_get_method$arity$2(null, I);
    cljs.core.truth_(J) || cljs.core.throw_no_method_error(q.name, I);
    return J.cljs$core$IFn$_invoke$arity$11 ? J.cljs$core$IFn$_invoke$arity$11(t, v, w, x, y, A, B, C, E, F, G) : J.call(null, t, v, w, x, y, A, B, C, E, F, G);
  }, r = function(q, t, v, w, x, y, A, B, C, E, F, G, I) {
    q = this;
    var J = q.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$12(t, v, w, x, y, A, B, C, E, F, G, I) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I), K = this.cljs$core$IMultiFn$_get_method$arity$2(null, J);
    cljs.core.truth_(K) || cljs.core.throw_no_method_error(q.name, J);
    return K.cljs$core$IFn$_invoke$arity$12 ? K.cljs$core$IFn$_invoke$arity$12(t, v, w, x, y, A, B, C, E, F, G, I) : K.call(null, t, v, w, x, y, A, B, C, E, F, G, I);
  }, u = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J) {
    q = this;
    var K = q.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$13(t, v, w, x, y, A, B, C, E, F, G, I, J) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J), M = this.cljs$core$IMultiFn$_get_method$arity$2(null, K);
    cljs.core.truth_(M) || cljs.core.throw_no_method_error(q.name, K);
    return M.cljs$core$IFn$_invoke$arity$13 ? M.cljs$core$IFn$_invoke$arity$13(t, v, w, x, y, A, B, C, E, F, G, I, J) : M.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J);
  }, z = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K) {
    q = this;
    var M = q.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$14(t, v, w, x, y, A, B, C, E, F, G, I, J, K) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K), N = this.cljs$core$IMultiFn$_get_method$arity$2(null, M);
    cljs.core.truth_(N) || cljs.core.throw_no_method_error(q.name, M);
    return N.cljs$core$IFn$_invoke$arity$14 ? N.cljs$core$IFn$_invoke$arity$14(t, v, w, x, y, A, B, C, E, F, G, I, J, K) : N.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
  }, D = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) {
    q = this;
    var N = q.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$15(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M), O = this.cljs$core$IMultiFn$_get_method$arity$2(null, N);
    cljs.core.truth_(O) || cljs.core.throw_no_method_error(q.name, N);
    return O.cljs$core$IFn$_invoke$arity$15 ? O.cljs$core$IFn$_invoke$arity$15(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) : O.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
  }, H = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) {
    q = this;
    var O = q.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$16(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N), Q = this.cljs$core$IMultiFn$_get_method$arity$2(null, O);
    cljs.core.truth_(Q) || cljs.core.throw_no_method_error(q.name, O);
    return Q.cljs$core$IFn$_invoke$arity$16 ? Q.cljs$core$IFn$_invoke$arity$16(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) : Q.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
  }, L = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) {
    q = this;
    var Q = q.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$17(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O), R = this.cljs$core$IMultiFn$_get_method$arity$2(null, Q);
    cljs.core.truth_(R) || cljs.core.throw_no_method_error(q.name, Q);
    return R.cljs$core$IFn$_invoke$arity$17 ? R.cljs$core$IFn$_invoke$arity$17(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O) : R.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
  }, P = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) {
    q = this;
    var R = q.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$18(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q), T = this.cljs$core$IMultiFn$_get_method$arity$2(null, R);
    cljs.core.truth_(T) || cljs.core.throw_no_method_error(q.name, R);
    return T.cljs$core$IFn$_invoke$arity$18 ? T.cljs$core$IFn$_invoke$arity$18(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q) : T.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
  }, S = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) {
    q = this;
    var T = q.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$19(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R), W = this.cljs$core$IMultiFn$_get_method$arity$2(null, T);
    cljs.core.truth_(W) || cljs.core.throw_no_method_error(q.name, T);
    return W.cljs$core$IFn$_invoke$arity$19 ? W.cljs$core$IFn$_invoke$arity$19(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) : W.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
  }, U = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) {
    q = this;
    var W = q.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? q.dispatch_fn.cljs$core$IFn$_invoke$arity$20(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : q.dispatch_fn.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T), X = this.cljs$core$IMultiFn$_get_method$arity$2(null, W);
    cljs.core.truth_(X) || cljs.core.throw_no_method_error(q.name, W);
    return X.cljs$core$IFn$_invoke$arity$20 ? X.cljs$core$IFn$_invoke$arity$20(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T) : X.call(null, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
  }, V = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    q = this;
    var X = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(q.dispatch_fn, t, v, w, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W], 0)), ca = this.cljs$core$IMultiFn$_get_method$arity$2(null, X);
    cljs.core.truth_(ca) || cljs.core.throw_no_method_error(q.name, X);
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(ca, t, v, w, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W], 0));
  };
  a = function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W) {
    switch(arguments.length) {
      case 1:
        return b.call(this, q);
      case 2:
        return c.call(this, q, t);
      case 3:
        return d.call(this, q, t, v);
      case 4:
        return e.call(this, q, t, v, w);
      case 5:
        return f.call(this, q, t, v, w, x);
      case 6:
        return g.call(this, q, t, v, w, x, y);
      case 7:
        return h.call(this, q, t, v, w, x, y, A);
      case 8:
        return k.call(this, q, t, v, w, x, y, A, B);
      case 9:
        return l.call(this, q, t, v, w, x, y, A, B, C);
      case 10:
        return m.call(this, q, t, v, w, x, y, A, B, C, E);
      case 11:
        return n.call(this, q, t, v, w, x, y, A, B, C, E, F);
      case 12:
        return p.call(this, q, t, v, w, x, y, A, B, C, E, F, G);
      case 13:
        return r.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I);
      case 14:
        return u.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J);
      case 15:
        return z.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K);
      case 16:
        return D.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M);
      case 17:
        return H.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N);
      case 18:
        return L.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O);
      case 19:
        return P.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q);
      case 20:
        return S.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R);
      case 21:
        return U.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T);
      case 22:
        return V.call(this, q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W);
    }
    throw Error("Invalid arity: " + (arguments.length - 1));
  };
  a.cljs$core$IFn$_invoke$arity$1 = b;
  a.cljs$core$IFn$_invoke$arity$2 = c;
  a.cljs$core$IFn$_invoke$arity$3 = d;
  a.cljs$core$IFn$_invoke$arity$4 = e;
  a.cljs$core$IFn$_invoke$arity$5 = f;
  a.cljs$core$IFn$_invoke$arity$6 = g;
  a.cljs$core$IFn$_invoke$arity$7 = h;
  a.cljs$core$IFn$_invoke$arity$8 = k;
  a.cljs$core$IFn$_invoke$arity$9 = l;
  a.cljs$core$IFn$_invoke$arity$10 = m;
  a.cljs$core$IFn$_invoke$arity$11 = n;
  a.cljs$core$IFn$_invoke$arity$12 = p;
  a.cljs$core$IFn$_invoke$arity$13 = r;
  a.cljs$core$IFn$_invoke$arity$14 = u;
  a.cljs$core$IFn$_invoke$arity$15 = z;
  a.cljs$core$IFn$_invoke$arity$16 = D;
  a.cljs$core$IFn$_invoke$arity$17 = H;
  a.cljs$core$IFn$_invoke$arity$18 = L;
  a.cljs$core$IFn$_invoke$arity$19 = P;
  a.cljs$core$IFn$_invoke$arity$20 = S;
  a.cljs$core$IFn$_invoke$arity$21 = U;
  a.cljs$core$IFn$_invoke$arity$22 = V;
  return a;
}();
cljs.core.MultiFn.prototype.apply = function(a, b) {
  var c = cljs.core.aclone(b);
  a = this.call;
  b = a.apply;
  var d = [this], e = d.concat;
  if (20 < c.length) {
    var f = c.slice(0, 20);
    f.push(c.slice(20));
    c = f;
  }
  return b.call(a, this, e.call(d, c));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var a = this.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : this.dispatch_fn.call(null), b = this.cljs$core$IMultiFn$_get_method$arity$2(null, a);
  cljs.core.truth_(b) || cljs.core.throw_no_method_error(this.name, a);
  return b.cljs$core$IFn$_invoke$arity$0 ? b.cljs$core$IFn$_invoke$arity$0() : b.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = this.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : this.dispatch_fn.call(null, a), c = this.cljs$core$IMultiFn$_get_method$arity$2(null, b);
  cljs.core.truth_(c) || cljs.core.throw_no_method_error(this.name, b);
  return c.cljs$core$IFn$_invoke$arity$1 ? c.cljs$core$IFn$_invoke$arity$1(a) : c.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = this.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : this.dispatch_fn.call(null, a, b), d = this.cljs$core$IMultiFn$_get_method$arity$2(null, c);
  cljs.core.truth_(d) || cljs.core.throw_no_method_error(this.name, c);
  return d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(a, b) : d.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = this.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : this.dispatch_fn.call(null, a, b, c), e = this.cljs$core$IMultiFn$_get_method$arity$2(null, d);
  cljs.core.truth_(e) || cljs.core.throw_no_method_error(this.name, d);
  return e.cljs$core$IFn$_invoke$arity$3 ? e.cljs$core$IFn$_invoke$arity$3(a, b, c) : e.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = this.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : this.dispatch_fn.call(null, a, b, c, d), f = this.cljs$core$IMultiFn$_get_method$arity$2(null, e);
  cljs.core.truth_(f) || cljs.core.throw_no_method_error(this.name, e);
  return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : f.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var f = this.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : this.dispatch_fn.call(null, a, b, c, d, e), g = this.cljs$core$IMultiFn$_get_method$arity$2(null, f);
  cljs.core.truth_(g) || cljs.core.throw_no_method_error(this.name, f);
  return g.cljs$core$IFn$_invoke$arity$5 ? g.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : g.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var g = this.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : this.dispatch_fn.call(null, a, b, c, d, e, f), h = this.cljs$core$IMultiFn$_get_method$arity$2(null, g);
  cljs.core.truth_(h) || cljs.core.throw_no_method_error(this.name, g);
  return h.cljs$core$IFn$_invoke$arity$6 ? h.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : h.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var h = this.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : this.dispatch_fn.call(null, a, b, c, d, e, f, g), k = this.cljs$core$IMultiFn$_get_method$arity$2(null, h);
  cljs.core.truth_(k) || cljs.core.throw_no_method_error(this.name, h);
  return k.cljs$core$IFn$_invoke$arity$7 ? k.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : k.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var k = this.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h), l = this.cljs$core$IMultiFn$_get_method$arity$2(null, k);
  cljs.core.truth_(l) || cljs.core.throw_no_method_error(this.name, k);
  return l.cljs$core$IFn$_invoke$arity$8 ? l.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : l.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, k) {
  var l = this.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k), m = this.cljs$core$IMultiFn$_get_method$arity$2(null, l);
  cljs.core.truth_(m) || cljs.core.throw_no_method_error(this.name, l);
  return m.cljs$core$IFn$_invoke$arity$9 ? m.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, k) : m.call(null, a, b, c, d, e, f, g, h, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, k, l) {
  var m = this.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l), n = this.cljs$core$IMultiFn$_get_method$arity$2(null, m);
  cljs.core.truth_(n) || cljs.core.throw_no_method_error(this.name, m);
  return n.cljs$core$IFn$_invoke$arity$10 ? n.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, k, l) : n.call(null, a, b, c, d, e, f, g, h, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, k, l, m) {
  var n = this.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m), p = this.cljs$core$IMultiFn$_get_method$arity$2(null, n);
  cljs.core.truth_(p) || cljs.core.throw_no_method_error(this.name, n);
  return p.cljs$core$IFn$_invoke$arity$11 ? p.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, k, l, m) : p.call(null, a, b, c, d, e, f, g, h, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, k, l, m, n) {
  var p = this.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n), r = this.cljs$core$IMultiFn$_get_method$arity$2(null, p);
  cljs.core.truth_(r) || cljs.core.throw_no_method_error(this.name, p);
  return r.cljs$core$IFn$_invoke$arity$12 ? r.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, k, l, m, n) : r.call(null, a, b, c, d, e, f, g, h, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  var r = this.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p), u = this.cljs$core$IMultiFn$_get_method$arity$2(null, r);
  cljs.core.truth_(u) || cljs.core.throw_no_method_error(this.name, r);
  return u.cljs$core$IFn$_invoke$arity$13 ? u.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, k, l, m, n, p) : u.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r) {
  var u = this.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r), z = this.cljs$core$IMultiFn$_get_method$arity$2(null, u);
  cljs.core.truth_(z) || cljs.core.throw_no_method_error(this.name, u);
  return z.cljs$core$IFn$_invoke$arity$14 ? z.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, k, l, m, n, p, r) : z.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) {
  var z = this.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u), D = this.cljs$core$IMultiFn$_get_method$arity$2(null, z);
  cljs.core.truth_(D) || cljs.core.throw_no_method_error(this.name, z);
  return D.cljs$core$IFn$_invoke$arity$15 ? D.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u) : D.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) {
  var D = this.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z), H = this.cljs$core$IMultiFn$_get_method$arity$2(null, D);
  cljs.core.truth_(H) || cljs.core.throw_no_method_error(this.name, D);
  return H.cljs$core$IFn$_invoke$arity$16 ? H.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z) : H.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) {
  var H = this.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D), L = this.cljs$core$IMultiFn$_get_method$arity$2(null, H);
  cljs.core.truth_(L) || cljs.core.throw_no_method_error(this.name, H);
  return L.cljs$core$IFn$_invoke$arity$17 ? L.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D) : L.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) {
  var L = this.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H), P = this.cljs$core$IMultiFn$_get_method$arity$2(null, L);
  cljs.core.truth_(P) || cljs.core.throw_no_method_error(this.name, L);
  return P.cljs$core$IFn$_invoke$arity$18 ? P.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H) : P.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) {
  var P = this.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L), S = this.cljs$core$IMultiFn$_get_method$arity$2(null, P);
  cljs.core.truth_(S) || cljs.core.throw_no_method_error(this.name, P);
  return S.cljs$core$IFn$_invoke$arity$19 ? S.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L) : S.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) {
  var S = this.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? this.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : this.dispatch_fn.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P), U = this.cljs$core$IMultiFn$_get_method$arity$2(null, S);
  cljs.core.truth_(U) || cljs.core.throw_no_method_error(this.name, S);
  return U.cljs$core$IFn$_invoke$arity$20 ? U.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P) : U.call(null, a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S) {
  var U = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(this.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S], 0)), V = this.cljs$core$IMultiFn$_get_method$arity$2(null, U);
  cljs.core.truth_(V) || cljs.core.throw_no_method_error(this.name, U);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(V, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, k, l, m, n, p, r, u, z, D, H, L, P, S], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(a, b, c) {
  if (cljs.core.truth_(cljs.core.prefers_STAR_(c, b, this.prefer_table))) {
    throw Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(d) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(d, b, cljs.core.PersistentHashSet.EMPTY), c));
  });
  return cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(a) {
  return this.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(a, b) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(this.method_table, cljs.core.dissoc, b);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(a) {
  return cljs.core.deref(this.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(a) {
  return cljs.core.deref(this.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(a) {
  return this.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(a, b, c) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(this.method_table, cljs.core.assoc, b, c);
  cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(a) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_table, function(b) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.method_cache, function(b) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.prefer_table, function(b) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(this.cached_hierarchy, function(b) {
    return null;
  });
  return this;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(a, b) {
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(this.cached_hierarchy), cljs.core.deref(this.hierarchy)) || cljs.core.reset_cache(this.method_cache, this.method_table, this.cached_hierarchy, this.hierarchy);
  a = cljs.core.deref(this.method_cache);
  a = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
  return cljs.core.truth_(a) ? a : cljs.core.find_and_cache_best_method(this.name, b, this.hierarchy, this.method_table, this.prefer_table, this.method_cache, this.cached_hierarchy, this.default_dispatch_val);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(a) {
  return cljs.core._name(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(a) {
  return cljs.core._namespace(this.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return goog.getUid(this);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = !0;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function(a, b, c, d, e, f, g, h) {
  return new cljs.core.MultiFn(a, b, c, d, e, f, g, h);
};
cljs.core.remove_all_methods = function(a) {
  return cljs.core._reset(a);
};
cljs.core.remove_method = function(a, b) {
  return cljs.core._remove_method(a, b);
};
cljs.core.prefer_method = function(a, b, c) {
  return cljs.core._prefer_method(a, b, c);
};
cljs.core.methods$ = function(a) {
  return cljs.core._methods(a);
};
cljs.core.get_method = function(a, b) {
  return cljs.core._get_method(a, b);
};
cljs.core.prefers = function(a) {
  return cljs.core._prefers(a);
};
cljs.core.default_dispatch_val = function(a) {
  return cljs.core._default_dispatch_val(a);
};
cljs.core.dispatch_fn = function(a) {
  return cljs.core._dispatch_fn(a);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(a, b) {
  this.uuid = a;
  this.__hash = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  return this.uuid;
};
cljs.core.UUID.prototype.equiv = function(a) {
  return this.cljs$core$IEquiv$_equiv$arity$2(null, a);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return (a = null != b ? cljs.core.PROTOCOL_SENTINEL === b.cljs$core$IUUID$ ? !0 : !1 : !1) ? this.uuid === b.uuid : a;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core._write(b, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  null == this.__hash && (this.__hash = cljs.core.hash(this.uuid));
  return this.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(a, b) {
  if (b instanceof cljs.core.UUID) {
    return cljs.core.goog$module$goog$array.defaultCompare.call(null, this.uuid, b.uuid);
  }
  throw Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), !0], null))], null);
};
cljs.core.UUID.cljs$lang$type = !0;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function(a, b) {
  return new cljs.core.UUID(a, b);
};
cljs.core.uuid = function(a) {
  if ("string" !== typeof a) {
    throw Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(a.toLowerCase(), null);
};
cljs.core.random_uuid = function() {
  var a = function() {
    return cljs.core.rand_int(16).toString(16);
  }, b = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(a())].join(""));
};
cljs.core.uuid_QMARK_ = function(a) {
  return null != a ? cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IUUID$ ? !0 : !1 : !1;
};
cljs.core.pr_writer_ex_info = function(a, b, c) {
  cljs.core._write(b, "#error {:message ");
  cljs.core.pr_writer(a.message, b, c);
  cljs.core.truth_(a.data) && (cljs.core._write(b, ", :data "), cljs.core.pr_writer(a.data, b, c));
  cljs.core.truth_(a.cause) && (cljs.core._write(b, ", :cause "), cljs.core.pr_writer(a.cause, b, c));
  return cljs.core._write(b, "}");
};
cljs.core.ExceptionInfo = function(a, b, c) {
  var d = Error(a);
  this.message = a;
  this.data = b;
  this.cause = c;
  this.name = d.name;
  this.description = d.description;
  this.number = d.number;
  this.fileName = d.fileName;
  this.lineNumber = d.lineNumber;
  this.columnNumber = d.columnNumber;
  this.stack = d.stack;
  return this;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_writer_ex_info(this, b, c);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.ex_info = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(a, b, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  return new cljs.core.ExceptionInfo(a, b, c);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.data : null;
};
cljs.core.ex_message = function(a) {
  return a instanceof Error ? a.message : null;
};
cljs.core.ex_cause = function(a) {
  return a instanceof cljs.core.ExceptionInfo ? a.cause : null;
};
cljs.core.comparator = function(a) {
  return function(b, c) {
    return cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(b, c) : a.call(null, b, c)) ? -1 : cljs.core.truth_(a.cljs$core$IFn$_invoke$arity$2 ? a.cljs$core$IFn$_invoke$arity$2(c, b) : a.call(null, c, b)) ? 1 : 0;
  };
};
cljs.core.special_symbol_QMARK_ = function(a) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), a);
};
cljs.core.test = function(a) {
  a = a.cljs$lang$test;
  return cljs.core.truth_(a) ? (a.cljs$core$IFn$_invoke$arity$0 ? a.cljs$core$IFn$_invoke$arity$0() : a.call(null), new cljs.core.Keyword(null, "ok", "ok", 967785236)) : new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
};
cljs.core.TaggedLiteral = function(a, b) {
  this.tag = a;
  this.form = b;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  return cljs.core.pr_str_STAR_(this);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.tag, b.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.form, b.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return 31 * cljs.core.hash(this.tag) + cljs.core.hash(this.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "tag":
      return this.tag;
    case "form":
      return this.form;
    default:
      return c;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  cljs.core._write(b, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.tag), " "].join(""));
  return cljs.core.pr_writer(this.form, b, c);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = !0;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function(a, b) {
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.tagged_literal_QMARK_ = function(a) {
  return a instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function(a, b) {
  if (!(a instanceof cljs.core.Symbol)) {
    throw Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(a, b);
};
cljs.core.js_reserved_arr = "arguments abstract await boolean break byte case catch char class const continue debugger default delete do double else enum export extends final finally float for function goto if implements import in instanceof int interface let long native new package private protected public return short static super switch synchronized this throw throws transient try typeof var void volatile while with yield methods null constructor".split(" ");
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function(a) {
  null == cljs.core.js_reserved && (cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(b, c) {
    cljs.core.goog$module$goog$object.set.call(null, b, c, !0);
    return b;
  }, {}, cljs.core.js_reserved_arr));
  return cljs.core.js_reserved.hasOwnProperty(a);
};
cljs.core.demunge_pattern = function() {
  cljs.core.truth_(cljs.core.DEMUNGE_PATTERN) || (cljs.core.DEMUNGE_PATTERN = function() {
    for (var a = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(e, f) {
      return f.length - e.length;
    }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP)), b = "";;) {
      if (cljs.core.seq(a)) {
        var c = cljs.core.next(a), d = [function() {
          var e = b;
          return "" !== b ? [e, "|"].join("") : e;
        }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(a))].join("");
        a = c;
        b = d;
      } else {
        return [b, "|\\$"].join("");
      }
    }
  }());
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function(a) {
  for (var b = new goog.string.StringBuffer(), c = 0;;) {
    if (c < a.length) {
      var d = a.charAt(c), e = cljs.core.goog$module$goog$object.get.call(null, cljs.core.CHAR_MAP, d);
      null != e ? b.append(e) : b.append(d);
      c += 1;
    } else {
      break;
    }
  }
  return b.toString();
};
cljs.core.munge = function(a) {
  var b = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  b = ".." === b ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(b)) ? [b, "$"].join("") : b;
  return a instanceof cljs.core.Symbol ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(b) : b;
};
cljs.core.demunge_str = function(a) {
  var b = new RegExp(cljs.core.demunge_pattern(), "g");
  a = goog.string.endsWith(a, "$") ? a.substring(0, a.length - 1) : a;
  for (var c = "", d = 0;;) {
    var e = b.exec(a);
    if (cljs.core.truth_(e)) {
      e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(e, 0, null), c = [c, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, b.lastIndex - e.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1("$" === e ? "/" : cljs.core.goog$module$goog$object.get.call(null, cljs.core.DEMUNGE_MAP, e))].join(""), d = b.lastIndex;
    } else {
      return [c, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.substring(d, a.length))].join("");
    }
  }
};
cljs.core.demunge = function(a) {
  var b = cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
  b = "_DOT__DOT_" === b ? ".." : cljs.core.demunge_str(b);
  a = a instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(b) : a.call(null, b);
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core.tapset) {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function() {
  return null == cljs.core.tapset ? cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY) : null;
};
cljs.core.add_tap = function(a) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, a);
  return null;
};
cljs.core.remove_tap = function(a) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, a);
  return null;
};
cljs.core.tap_GT_ = function(a) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    for (var b = cljs.core.seq(cljs.core.deref(cljs.core.tapset)), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
        try {
          f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
        } catch (g) {
          if (!(g instanceof Error)) {
            throw g;
          }
        }
        e += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          c = b;
          if (cljs.core.chunked_seq_QMARK_(c)) {
            b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f;
          } else {
            f = cljs.core.first(c);
            try {
              f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
            } catch (g) {
              if (!(g instanceof Error)) {
                throw g;
              }
            }
            b = cljs.core.next(c);
            c = null;
            d = 0;
          }
          e = 0;
        } else {
          return null;
        }
      }
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    for (var b = cljs.core.seq(cljs.core.deref(cljs.core.tapset)), c = null, d = 0, e = 0;;) {
      if (e < d) {
        var f = c.cljs$core$IIndexed$_nth$arity$2(null, e);
        try {
          f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
        } catch (g) {
          if (!(g instanceof Error)) {
            throw g;
          }
        }
        e += 1;
      } else {
        if (b = cljs.core.seq(b)) {
          c = b;
          if (cljs.core.chunked_seq_QMARK_(c)) {
            b = cljs.core.chunk_first(c), d = cljs.core.chunk_rest(c), c = b, f = cljs.core.count(b), b = d, d = f;
          } else {
            f = cljs.core.first(c);
            try {
              f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a) : f.call(null, a);
            } catch (g) {
              if (!(g instanceof Error)) {
                throw g;
              }
            }
            b = cljs.core.next(c);
            c = null;
            d = 0;
          }
          e = 0;
        } else {
          return null;
        }
      }
    }
  });
};
cljs.core.update_vals = function(a, b) {
  return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce_kv(function(c, d, e) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(c, d, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e));
  }, null != a && (a.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IEditableCollection$) ? cljs.core.transient$(a) : cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a)), cljs.core.meta(a));
};
cljs.core.update_keys = function(a, b) {
  var c = cljs.core.persistent_BANG_(cljs.core.reduce_kv(function(d, e, f) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(d, b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(e) : b.call(null, e), f);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), a));
  return cljs.core.with_meta(c, cljs.core.meta(a));
};
cljs.core.ns_lookup = function(a, b) {
  return function() {
    return cljs.core.goog$module$goog$object.get.call(null, a, b);
  };
};
cljs.core.Namespace = function(a, b) {
  this.obj = a;
  this.name = b;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(a) {
  var b = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  if (cljs.core.goog$module$goog$object.containsKey.call(null, this.obj, b)) {
    a = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
    var c = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this], null);
    return new cljs.core.Var(cljs.core.ns_lookup(this.obj, b), a, c);
  }
  return null;
};
cljs.core.Namespace.prototype.getName = function() {
  return this.name;
};
cljs.core.Namespace.prototype.toString = function() {
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(this.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return b instanceof cljs.core.Namespace ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this.name, b.name) : !1;
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  return cljs.core.hash(this.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = !0;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(a, b, c) {
  return cljs.core._write(b, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function(a, b) {
  return new cljs.core.Namespace(a, b);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function(a, b) {
  for (;;) {
    if (null == a) {
      return null;
    }
    if (null == b) {
      return a;
    }
    var c = cljs.core.first(b);
    a = cljs.core.goog$module$goog$object.get.call(null, a, c);
    b = cljs.core.next(b);
  }
};
cljs.core.find_ns_obj = function(a) {
  var b = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)).split(".");
  switch(cljs.core._STAR_target_STAR_) {
    case "nodejs":
      return COMPILED ? cljs.core.find_ns_obj_STAR_(function() {
        try {
          var c = eval(cljs.core.first(b));
          return cljs.core.truth_(cljs.core.truth_(c) ? cljs.core.object_QMARK_(c) : c) ? c : null;
        } catch (d) {
          if (d instanceof ReferenceError) {
            return null;
          }
          throw d;
        }
      }(), cljs.core.next(b)) : cljs.core.find_ns_obj_STAR_(goog.global, b);
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, b);
    default:
      throw Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function(a) {
  var b = cljs.core.find_ns_obj(a), c = new cljs.core.Namespace(b, a);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(d, e) {
    var f = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(e));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, f, new cljs.core.Var(function() {
      return cljs.core.goog$module$goog$object.get.call(null, b, e);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), c], null)));
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(b));
};
cljs.core.create_ns = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, cljs.core.find_ns_obj(a));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return new cljs.core.Namespace(b, a);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.find_macros_ns = function(a) {
  null == cljs.core.NS_CACHE && (cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));
  var b = cljs.core.str.cljs$core$IFn$_invoke$arity$1(a);
  a = goog.string.contains(b, "$macros") ? a : cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([b, "$macros"].join(""));
  b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), a);
  if (null != b) {
    return b;
  }
  b = cljs.core.find_ns_obj(a);
  if (null == b) {
    return null;
  }
  b = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(a, b);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, a, b);
  return b;
};
cljs.core.ns_name = function(a) {
  return a.name;
};
cljs.core.uri_QMARK_ = function(a) {
  return a instanceof goog.Uri;
};
cljs.core.NaN_QMARK_ = function(a) {
  return isNaN(a);
};
cljs.core.parsing_err = function(a) {
  return ["Expected string, got: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(null == a ? "nil" : goog.typeOf(a))].join("");
};
cljs.core.parse_long = function(a) {
  if ("string" === typeof a) {
    var b = cljs.core.re_matches(/[+-]?\d+/, a);
    return cljs.core.truth_(b) ? (a = parseInt(a), a <= Number.MAX_SAFE_INTEGER && a >= Number.MIN_SAFE_INTEGER ? a : null) : b;
  }
  throw Error(cljs.core.parsing_err(a));
};
cljs.core.parse_double = function(a) {
  if ("string" === typeof a) {
    return cljs.core.re_matches(/[\x00-\x20]*[+-]?NaN[\x00-\x20]*/, a) ? NaN : cljs.core.re_matches(/[\x00-\x20]*[+-]?(Infinity|((\d+\.?\d*|\.\d+)([eE][+-]?\d+)?)[dDfF]?)[\x00-\x20]*/, a) ? parseFloat(a) : null;
  }
  throw Error(cljs.core.parsing_err(a));
};
cljs.core.uuid_regex = /^[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]$/;
cljs.core.parse_uuid = function(a) {
  if ("string" === typeof a) {
    return cljs.core.re_matches(cljs.core.uuid_regex, a) ? cljs.core.uuid(a) : null;
  }
  throw Error(cljs.core.parsing_err(a));
};
cljs.core.parse_boolean = function(a) {
  if ("string" === typeof a) {
    switch(a) {
      case "true":
        return !0;
      case "false":
        return !1;
      default:
        return null;
    }
  } else {
    throw Error(cljs.core.parsing_err(a));
  }
};
cljs.core.maybe_enable_print_BANG_ = function() {
  if ("undefined" !== typeof console) {
    return cljs.core.enable_console_print_BANG_();
  }
  if ("nashorn" === cljs.core._STAR_target_STAR_ || "graaljs" === cljs.core._STAR_target_STAR_) {
    var a = Java.type("java.lang.System");
    cljs.core._STAR_print_newline_STAR_ = !1;
    cljs.core.set_print_fn_BANG_(function() {
      var b = arguments;
      b = cljs.core.goog$module$goog$array.clone.call(null, b).join("");
      return a.out.println(b);
    });
    return cljs.core.set_print_err_fn_BANG_(function() {
      var b = arguments;
      b = cljs.core.goog$module$goog$array.clone.call(null, b).join("");
      return a.error.println(b);
    });
  }
  return null;
};
cljs.core.maybe_enable_print_BANG_();
if ("undefined" === typeof cljs || "undefined" === typeof cljs.core || "undefined" === typeof cljs.core._STAR_eval_STAR_) {
  cljs.core._STAR_eval_STAR_ = function(a) {
    throw Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function(a) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(a) : cljs.core._STAR_eval_STAR_.call(null, a);
};
COMPILED && ("nodejs" === cljs.core._STAR_target_STAR_ && (goog.global = global), "window" === cljs.core._STAR_global_STAR_ ? goog.global = window : "self" === cljs.core._STAR_global_STAR_ ? goog.global = self : "global" === cljs.core._STAR_global_STAR_ && (goog.global = global));
var process = {env:{}};
process.env.NODE_ENV = "production";
var clojure = {set:{}};
clojure.set.bubble_max_key = function(a, b) {
  var c = cljs.core.apply.call(null, cljs.core.max_key, a, b);
  return cljs.core.cons.call(null, c, cljs.core.remove.call(null, function(d) {
    return c === d;
  }, b));
};
clojure.set.union = function(a) {
  switch(arguments.length) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, cljs.core.conj, b, a) : cljs.core.reduce.call(null, cljs.core.conj, a, b);
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.union.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  for (;;) {
    if (cljs.core.count.call(null, b) < cljs.core.count.call(null, a)) {
      var c = a;
      a = b;
      b = c;
    } else {
      return cljs.core.reduce.call(null, function(d, e) {
        return function(f, g) {
          return cljs.core.contains_QMARK_.call(null, e, g) ? f : cljs.core.disj.call(null, f, g);
        };
      }(a, b), a, a);
    }
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = clojure.set.bubble_max_key.call(null, function(d) {
    return -cljs.core.count.call(null, d);
  }, cljs.core.conj.call(null, c, b, a));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, a), cljs.core.rest.call(null, a));
};
clojure.set.intersection.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      for (var b = [], c = arguments.length, d = 0;;) {
        if (d < c) {
          b.push(arguments[d]), d += 1;
        } else {
          break;
        }
      }
      b = new cljs.core.IndexedSeq(b.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return a;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return cljs.core.count.call(null, a) < cljs.core.count.call(null, b) ? cljs.core.reduce.call(null, function(c, d) {
    return cljs.core.contains_QMARK_.call(null, b, d) ? cljs.core.disj.call(null, c, d) : c;
  }, a, a) : cljs.core.reduce.call(null, cljs.core.disj, a, b);
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return cljs.core.reduce.call(null, clojure.set.difference, a, cljs.core.conj.call(null, c, b));
};
clojure.set.difference.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function(a, b) {
  return cljs.core.reduce.call(null, function(c, d) {
    return cljs.core.truth_(a.call(null, d)) ? c : cljs.core.disj.call(null, c, d);
  }, b, b);
};
clojure.set.project = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(c) {
    return cljs.core.select_keys.call(null, c, b);
  }, a));
};
clojure.set.rename_keys = function(a, b) {
  return cljs.core.reduce.call(null, function(c, d) {
    var e = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    return cljs.core.contains_QMARK_.call(null, a, e) ? cljs.core.assoc.call(null, c, d, cljs.core.get.call(null, a, e)) : c;
  }, cljs.core.apply.call(null, cljs.core.dissoc, a, cljs.core.keys.call(null, b)), b);
};
clojure.set.rename = function(a, b) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(c) {
    return clojure.set.rename_keys.call(null, c, b);
  }, a));
};
clojure.set.index = function(a, b) {
  return cljs.core.reduce.call(null, function(c, d) {
    var e = cljs.core.select_keys.call(null, d, b);
    return cljs.core.assoc.call(null, c, e, cljs.core.conj.call(null, cljs.core.get.call(null, c, e, cljs.core.PersistentHashSet.EMPTY), d));
  }, cljs.core.PersistentArrayMap.EMPTY, a);
};
clojure.set.map_invert = function(a) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce_kv.call(null, function(b, c, d) {
    return cljs.core.assoc_BANG_.call(null, b, d, c);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), a));
};
clojure.set.join = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq.call(null, a) && cljs.core.seq.call(null, b)) {
    var c = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, b))));
    b = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
    a = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    var d = clojure.set.index.call(null, a, c);
    return cljs.core.reduce.call(null, function(e, f) {
      var g = d.call(null, cljs.core.select_keys.call(null, f, c));
      return cljs.core.truth_(g) ? cljs.core.reduce.call(null, function(h, k) {
        return cljs.core.conj.call(null, h, cljs.core.merge.call(null, k, f));
      }, e, g) : e;
    }, cljs.core.PersistentHashSet.EMPTY, b);
  }
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, clojure.set.map_invert.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, c], null);
  b = cljs.core.nth.call(null, a, 0, null);
  c = cljs.core.nth.call(null, a, 1, null);
  var d = cljs.core.nth.call(null, a, 2, null), e = clojure.set.index.call(null, b, cljs.core.vals.call(null, d));
  return cljs.core.reduce.call(null, function(f, g) {
    var h = e.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, g, cljs.core.keys.call(null, d)), d));
    return cljs.core.truth_(h) ? cljs.core.reduce.call(null, function(k, l) {
      return cljs.core.conj.call(null, k, cljs.core.merge.call(null, l, g));
    }, f, h) : f;
  }, cljs.core.PersistentHashSet.EMPTY, c);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) <= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(c) {
    return cljs.core.contains_QMARK_.call(null, b, c);
  }, a);
};
clojure.set.superset_QMARK_ = function(a, b) {
  return cljs.core.count.call(null, a) >= cljs.core.count.call(null, b) && cljs.core.every_QMARK_.call(null, function(c) {
    return cljs.core.contains_QMARK_.call(null, a, c);
  }, b);
};
clojure.string = {};
clojure.string.seq_reverse = function(a) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, a);
};
clojure.string.re_surrogate_pair = RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function(a) {
  return a.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function(a, b, c) {
  var d = RegExp, e = b.source;
  var f = cljs.core.truth_(b.ignoreCase) ? "gi" : "g";
  f = cljs.core.truth_(b.multiline) ? [f, "m"].join("") : f;
  b = cljs.core.truth_(b.unicode) ? [f, "u"].join("") : f;
  d = new d(e, b);
  return a.replace(d, c);
};
clojure.string.replace_with = function(a) {
  return function() {
    var b = function(d) {
      d = cljs.core.drop_last.call(null, 2, d);
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, d), 1) ? a.call(null, cljs.core.first.call(null, d)) : a.call(null, cljs.core.vec.call(null, d));
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
};
clojure.string.replace = function(a, b, c) {
  if ("string" === typeof b) {
    return a.replace(new RegExp(goog.string.regExpEscape(b), "g"), c);
  }
  if (b instanceof RegExp) {
    return "string" === typeof c ? clojure.string.replace_all.call(null, a, b, c) : clojure.string.replace_all.call(null, a, b, clojure.string.replace_with.call(null, c));
  }
  throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
};
clojure.string.replace_first = function(a, b, c) {
  return a.replace(b, c);
};
clojure.string.join = function(a) {
  switch(arguments.length) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer();
  for (a = cljs.core.seq.call(null, a);;) {
    if (null != a) {
      b = b.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))), a = cljs.core.next.call(null, a);
    } else {
      return b.toString();
    }
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = new goog.string.StringBuffer();
  for (b = cljs.core.seq.call(null, b);;) {
    if (null != b) {
      c.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, b))), b = cljs.core.next.call(null, b), null != b && c.append(a);
    } else {
      return c.toString();
    }
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function(a) {
  return a.toUpperCase();
};
clojure.string.lower_case = function(a) {
  return a.toLowerCase();
};
clojure.string.capitalize = function(a) {
  return goog.string.capitalize(a);
};
clojure.string.pop_last_while_empty = function(a) {
  for (;;) {
    if ("" === cljs.core.peek.call(null, a)) {
      a = cljs.core.pop.call(null, a);
    } else {
      return a;
    }
  }
};
clojure.string.discard_trailing_if_needed = function(a, b) {
  return 0 === a && 1 < cljs.core.count.call(null, b) ? clojure.string.pop_last_while_empty.call(null, b) : b;
};
clojure.string.split_with_empty_regex = function(a, b) {
  if (0 >= b || b >= 2 + cljs.core.count.call(null, a)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a)))), "");
  }
  var c = cljs.core._EQ__EQ_;
  if (cljs.core.truth_(c.call(null, 1, b))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
  if (cljs.core.truth_(c.call(null, 2, b))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", a], null);
  }
  b -= 2;
  return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, a))), 0, b))), cljs.core.subs.call(null, a, b));
};
clojure.string.split = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.string.split.call(null, a, b, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = clojure.string.discard_trailing_if_needed, e = d.call;
  if ("/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)) {
    b = clojure.string.split_with_empty_regex.call(null, a, c);
  } else {
    if (1 > c) {
      b = cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a).split(b));
    } else {
      a: {
        for (var f = c, g = cljs.core.PersistentVector.EMPTY;;) {
          if (1 === f) {
            b = cljs.core.conj.call(null, g, a);
            break a;
          } else {
            var h = cljs.core.re_find.call(null, b, a);
            if (null != h) {
              var k = a.indexOf(h);
              h = a.substring(k + cljs.core.count.call(null, h));
              --f;
              g = cljs.core.conj.call(null, g, a.substring(0, k));
              a = h;
            } else {
              b = cljs.core.conj.call(null, g, a);
              break a;
            }
          }
        }
      }
    }
  }
  return e.call(d, null, c, b);
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function(a) {
  return clojure.string.split.call(null, a, /\n|\r\n/);
};
clojure.string.trim = function(a) {
  return goog.string.trim(a);
};
clojure.string.triml = function(a) {
  return goog.string.trimLeft(a);
};
clojure.string.trimr = function(a) {
  return goog.string.trimRight(a);
};
clojure.string.trim_newline = function(a) {
  for (var b = a.length;;) {
    if (0 === b) {
      return "";
    }
    var c = cljs.core.get.call(null, a, b - 1);
    if ("\n" === c || "\r" === c) {
      --b;
    } else {
      return a.substring(0, b);
    }
  }
};
clojure.string.blank_QMARK_ = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
clojure.string.escape = function(a, b) {
  for (var c = new goog.string.StringBuffer(), d = a.length, e = 0;;) {
    if (d === e) {
      return c.toString();
    }
    var f = a.charAt(e), g = cljs.core.get.call(null, b, f);
    null != g ? c.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(g)) : c.append(f);
    e += 1;
  }
};
clojure.string.index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a.indexOf(b);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.indexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function(a) {
  switch(arguments.length) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  a = a.lastIndexOf(b);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = a.lastIndexOf(b, c);
  return 0 > a ? null : a;
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function(a, b) {
  return goog.string.startsWith(a, b);
};
clojure.string.ends_with_QMARK_ = function(a, b) {
  return goog.string.endsWith(a, b);
};
clojure.string.includes_QMARK_ = function(a, b) {
  return goog.string.contains(a, b);
};
var dumdom = {element:{}};
dumdom.element._STAR_handle_event_STAR_ = null;
dumdom.element.event_handler = function(a) {
  if (cljs.core.fn_QMARK_.call(null, a)) {
    return a;
  }
  var b = dumdom.element._STAR_handle_event_STAR_;
  return cljs.core.truth_(b) ? function(c) {
    return b.call(null, c, a);
  } : "string" === typeof a ? a : null;
};
dumdom.element.event_entry = function(a, b) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, cljs.core.name.call(null, b), /^on/, "").toLowerCase(), dumdom.element.event_handler.call(null, a.call(null, b))], null);
};
dumdom.element.camelCase = function(a) {
  a = clojure.string.split.call(null, a, /-/);
  var b = cljs.core.seq.call(null, a);
  a = cljs.core.first.call(null, b);
  b = cljs.core.next.call(null, b);
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), clojure.string.join.call(null, "", cljs.core.map.call(null, clojure.string.capitalize, b))].join("");
};
dumdom.element.camel_key = function(a) {
  return cljs.core.keyword.call(null, dumdom.element.camelCase.call(null, cljs.core.name.call(null, a)));
};
dumdom.element.skip_pixelize_attrs = cljs.core.set.call(null, cljs.core.mapcat.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, dumdom.element.camel_key.call(null, a)], null);
}, new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "animation-iteration-count", "animation-iteration-count", -1410888227), new cljs.core.Keyword(null, "box-flex", "box-flex", -831196194), new cljs.core.Keyword(null, "box-flex-group", "box-flex-group", -1468550335), new cljs.core.Keyword(null, "box-ordinal-group", "box-ordinal-group", 201694774), new cljs.core.Keyword(null, "column-count", "column-count", 1235131236), new cljs.core.Keyword(null, 
"fill-opacity", "fill-opacity", -537571170), new cljs.core.Keyword(null, "flex", "flex", -1425124628), new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), new cljs.core.Keyword(null, "flex-positive", "flex-positive", -239614242), new cljs.core.Keyword(null, "flex-shrink", "flex-shrink", 1481146383), new cljs.core.Keyword(null, "flex-negative", "flex-negative", -1543996476), new cljs.core.Keyword(null, "flex-order", "flex-order", -621251126), new cljs.core.Keyword(null, "font-weight", 
"font-weight", 2085804583), new cljs.core.Keyword(null, "line-clamp", "line-clamp", -1079334403), new cljs.core.Keyword(null, "line-height", "line-height", 1870784992), new cljs.core.Keyword(null, "opacity", "opacity", 397153780), new cljs.core.Keyword(null, "order", "order", -1254677256), new cljs.core.Keyword(null, "orphans", "orphans", 1913357231), new cljs.core.Keyword(null, "stop-opacity", "stop-opacity", -2018003729), new cljs.core.Keyword(null, "stroke-dashoffset", "stroke-dashoffset", -782320340), 
new cljs.core.Keyword(null, "stroke-opacity", "stroke-opacity", -1191543159), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "tab-size", "tab-size", -1265790523), new cljs.core.Keyword(null, "widows", "widows", 1989591025), new cljs.core.Keyword(null, "z-index", "z-index", 1892827090), new cljs.core.Keyword(null, "zoom", "zoom", -1827487038)], null)));
dumdom.element.normalize_styles = function(a) {
  return cljs.core.reduce.call(null, function(b, c) {
    var d = cljs.core.nth.call(null, c, 0, null);
    return "number" === typeof cljs.core.nth.call(null, c, 1, null) ? cljs.core.truth_(dumdom.element.skip_pixelize_attrs.call(null, d)) ? cljs.core.update.call(null, b, d, cljs.core.str) : cljs.core.update.call(null, b, d, cljs.core.str, "px") : b;
  }, a, a);
};
dumdom.element.attr_mappings = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "pointerEvents", "pointerEvents", -1429289472), new cljs.core.Keyword(null, "fontVariant", "fontVariant", -726343072), new cljs.core.Keyword(null, "dirName", "dirName", 1496612544), new cljs.core.Keyword(null, "overlineThickness", "overlineThickness", 1054951168), new cljs.core.Keyword(null, "stopOpacity", "stopOpacity", -480120864), new cljs.core.Keyword(null, "alignmentBaseline", "alignmentBaseline", 
391161089), new cljs.core.Keyword(null, "strokeOpacity", "strokeOpacity", -565583263), new cljs.core.Keyword(null, "httpEquiv", "httpEquiv", 789868321), new cljs.core.Keyword(null, "vectorEffect", "vectorEffect", -2006517919), new cljs.core.Keyword(null, "xmlSpace", "xmlSpace", -52614622), new cljs.core.Keyword(null, "rowSpan", "rowSpan", 826884002), new cljs.core.Keyword(null, "xlinkActuate", "xlinkActuate", 1909485123), new cljs.core.Keyword(null, "vertOriginX", "vertOriginX", -721682845), new cljs.core.Keyword(null, 
"noValidate", "noValidate", 1502261891), new cljs.core.Keyword(null, "unitsPerEm", "unitsPerEm", 1686693571), new cljs.core.Keyword(null, "wordSpacing", "wordSpacing", 1190332323), new cljs.core.Keyword(null, "lightingColor", "lightingColor", 232670308), new cljs.core.Keyword(null, "tabIndex", "tabIndex", -169286716), new cljs.core.Keyword(null, "dropZone", "dropZone", -660515868), new cljs.core.Keyword(null, "baselineShift", "baselineShift", -1675988987), new cljs.core.Keyword(null, "xlinkShow", 
"xlinkShow", 1817099301), new cljs.core.Keyword(null, "underlineThickness", "underlineThickness", -566140827), new cljs.core.Keyword(null, "mountedStyle", "mountedStyle", -1211069883), new cljs.core.Keyword(null, "fillRule", "fillRule", -1827524923), new cljs.core.Keyword(null, "vMathematical", "vMathematical", -770251931), new cljs.core.Keyword(null, "glyphName", "glyphName", 602150918), new cljs.core.Keyword(null, "itemProp", "itemProp", -772543418), new cljs.core.Keyword(null, "capHeight", "capHeight", 
-1748931994), new cljs.core.Keyword(null, "accentHeight", "accentHeight", -2141415802), new cljs.core.Keyword(null, "xlinkRole", "xlinkRole", -1641848122), new cljs.core.Keyword(null, "autoFocus", "autoFocus", -552622425), new cljs.core.Keyword(null, "preLoad", "preLoad", -892114041), new cljs.core.Keyword(null, "strikethroughPosition", "strikethroughPosition", 759001768), new cljs.core.Keyword(null, "vHanging", "vHanging", 2028697384), new cljs.core.Keyword(null, "autoComplete", "autoComplete", 
-219243415), new cljs.core.Keyword(null, "panose1", "panose1", 1116592233), new cljs.core.Keyword(null, "xlinkHref", "xlinkHref", -1814059639), new cljs.core.Keyword(null, "fontSizeAdjust", "fontSizeAdjust", 897836777), new cljs.core.Keyword(null, "radioGroup", "radioGroup", 759101257), new cljs.core.Keyword(null, "overlinePosition", "overlinePosition", 1360684937), new cljs.core.Keyword(null, "markerStart", "markerStart", 2012500042), new cljs.core.Keyword(null, "srcLang", "srcLang", -1345696502), 
new cljs.core.Keyword(null, "renderingIntent", "renderingIntent", 1988940074), new cljs.core.Keyword(null, "paintOrder", "paintOrder", 541756202), new cljs.core.Keyword(null, "vIdeographic", "vIdeographic", 969873771), new cljs.core.Keyword(null, "clipPath", "clipPath", -934619797), new cljs.core.Keyword(null, "xHeight", "xHeight", 1051932171), new cljs.core.Keyword(null, "imageRendering", "imageRendering", -1692730837), new cljs.core.Keyword(null, "keyType", "keyType", 592582283), new cljs.core.Keyword(null, 
"strokeDashoffset", "strokeDashoffset", -421034101), new cljs.core.Keyword(null, "fontStretch", "fontStretch", -1740143701), new cljs.core.Keyword(null, "textAnchor", "textAnchor", -917689429), new cljs.core.Keyword(null, "unicodeRange", "unicodeRange", 1101836236), new cljs.core.Keyword(null, "fillOpacity", "fillOpacity", 619211981), new cljs.core.Keyword(null, "markerMid", "markerMid", 1196449357), new cljs.core.Keyword(null, "minLength", "minLength", -1538722770), new cljs.core.Keyword(null, "underlinePosition", 
"underlinePosition", 669958894), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "xlinkTitle", "xlinkTitle", 924841391), new cljs.core.Keyword(null, "colorProfile", "colorProfile", -998990033), new cljs.core.Keyword(null, "xlinkType", "xlinkType", 619754512), new cljs.core.Keyword(null, "xmlBase", "xmlBase", 790885328), new cljs.core.Keyword(null, "fontFamily", "fontFamily", 1493518353), new cljs.core.Keyword(null, "dateTime", "dateTime", -2108171151), 
new cljs.core.Keyword(null, "glyphOrientationHorizontal", "glyphOrientationHorizontal", -874420079), new cljs.core.Keyword(null, "xlinkArcrole", "xlinkArcrole", 1335294641), new cljs.core.Keyword(null, "writingMode", "writingMode", 1680665553), new cljs.core.Keyword(null, "markerEnd", "markerEnd", -1727198190), new cljs.core.Keyword(null, "crossOrigin", "crossOrigin", 558883890), new cljs.core.Keyword(null, "floodColor", "floodColor", 836634770), new cljs.core.Keyword(null, "colSpan", "colSpan", 
872137394), new cljs.core.Keyword(null, "hrefLang", "hrefLang", 1040962546), new cljs.core.Keyword(null, "letterSpacing", "letterSpacing", -1331934989), new cljs.core.Keyword(null, "readOnly", "readOnly", -1749118317), new cljs.core.Keyword(null, "acceptCharset", "acceptCharset", 560792243), new cljs.core.Keyword(null, "colorRendering", "colorRendering", -1824731469), new cljs.core.Keyword(null, "strikethroughThickness", "strikethroughThickness", 1068914579), new cljs.core.Keyword(null, "formAction", 
"formAction", 774624276), new cljs.core.Keyword(null, "strokeWidth", "strokeWidth", -2130848332), new cljs.core.Keyword(null, "strokeLinejoin", "strokeLinejoin", -721488076), new cljs.core.Keyword(null, "fontStyle", "fontStyle", 1246842165), new cljs.core.Keyword(null, "fontWeight", "fontWeight", 166450581), new cljs.core.Keyword(null, "placeHolder", "placeHolder", 1359734165), new cljs.core.Keyword(null, "strokeDasharray", "strokeDasharray", 1664678421), new cljs.core.Keyword(null, "accessKey", 
"accessKey", -2031675627), new cljs.core.Keyword(null, "srcSet", "srcSet", -1378415466), new cljs.core.Keyword(null, "strokeMiterlimit", "strokeMiterlimit", 2119685398), new cljs.core.Keyword(null, "spellCheck", "spellCheck", 331078550), new cljs.core.Keyword(null, "autoPlay", "autoPlay", -561263241), new cljs.core.Keyword(null, "horizAdvX", "horizAdvX", -2121877033), new cljs.core.Keyword(null, "maxLength", "maxLength", -1633020073), new cljs.core.Keyword(null, "contentEditable", "contentEditable", 
-823191689), new cljs.core.Keyword(null, "vertOriginY", "vertOriginY", -1836567561), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), new cljs.core.Keyword(null, "unicodeBidi", "unicodeBidi", -1804080584), new cljs.core.Keyword(null, "shapeRendering", "shapeRendering", -1384014248), new cljs.core.Keyword(null, "arabicForm", "arabicForm", 275023832), new cljs.core.Keyword(null, "useMap", "useMap", -852270120), new cljs.core.Keyword(null, "fontSize", "fontSize", 919623033), new cljs.core.Keyword(null, 
"encType", "encType", 1733182873), new cljs.core.Keyword(null, "textRendering", "textRendering", 1698597337), new cljs.core.Keyword(null, "stopColor", "stopColor", 265518586), new cljs.core.Keyword(null, "contextMenu", "contextMenu", -566126918), new cljs.core.Keyword(null, "vAlphabetic", "vAlphabetic", -373115078), new cljs.core.Keyword(null, "dominantBaseline", "dominantBaseline", 2071607258), new cljs.core.Keyword(null, "floodOpacity", "floodOpacity", -1332086757), new cljs.core.Keyword(null, 
"bgColor", "bgColor", -125329317), new cljs.core.Keyword(null, "disappearingStyle", "disappearingStyle", -1447140965), new cljs.core.Keyword(null, "strokeLinecap", "strokeLinecap", -1974748357), new cljs.core.Keyword(null, "glyphOrientationVertical", "glyphOrientationVertical", 812176604), new cljs.core.Keyword(null, "enableBackground", "enableBackground", -1352387332), new cljs.core.Keyword(null, "srcDoc", "srcDoc", 1635765309), new cljs.core.Keyword(null, "textDecoration", "textDecoration", 418180221), 
new cljs.core.Keyword(null, "isMap", "isMap", -249743779), new cljs.core.Keyword(null, "xmlLang", "xmlLang", 675834142), new cljs.core.Keyword(null, "horizOriginX", "horizOriginX", 727960958), new cljs.core.Keyword(null, "colorInterpolation", "colorInterpolation", -540228866), new cljs.core.Keyword(null, "vertAdvY", "vertAdvY", -1347098882), new cljs.core.Keyword(null, "clipRule", "clipRule", -1943443682), new cljs.core.Keyword(null, "autoCapitalize", "autoCapitalize", 438011742), new cljs.core.Keyword(null, 
"leavingStyle", "leavingStyle", 1768293791), new cljs.core.Keyword(null, "codeBase", "codeBase", 537481055), new cljs.core.Keyword(null, "colorInterpolationFilters", "colorInterpolationFilters", 1748426751)], [new cljs.core.Keyword(null, "pointer-events", "pointer-events", -1053858853), new cljs.core.Keyword(null, "font-variant", "font-variant", 1251503591), new cljs.core.Keyword(null, "dirname", "dirname", 1314834844), new cljs.core.Keyword(null, "overline-thickness", "overline-thickness", -1687103105), 
new cljs.core.Keyword(null, "stop-opacity", "stop-opacity", -2018003729), new cljs.core.Keyword(null, "alignment-baseline", "alignment-baseline", -311060879), new cljs.core.Keyword(null, "stroke-opacity", "stroke-opacity", -1191543159), new cljs.core.Keyword(null, "http-equiv", "http-equiv", -433976463), new cljs.core.Keyword(null, "vector-effect", "vector-effect", -616736349), new cljs.core.Keyword(null, "xml:space", "xml:space", -1976466326), new cljs.core.Keyword(null, "rowspan", "rowspan", 1059521478), 
new cljs.core.Keyword(null, "xlink:actuate", "xlink:actuate", 1846130965), new cljs.core.Keyword(null, "vert-origin-x", "vert-origin-x", 1437952844), new cljs.core.Keyword(null, "novalidate", "novalidate", -572717086), new cljs.core.Keyword(null, "units-per-em", "units-per-em", 1845580082), new cljs.core.Keyword(null, "word-spacing", "word-spacing", -1211711602), new cljs.core.Keyword(null, "lighting-color", "lighting-color", -1324714767), new cljs.core.Keyword(null, "tabindex", "tabindex", 338877510), 
new cljs.core.Keyword(null, "dropzone", "dropzone", -36573991), new cljs.core.Keyword(null, "baseline-shift", "baseline-shift", -2068063947), new cljs.core.Keyword(null, "xlink:show", "xlink:show", 1334818180), new cljs.core.Keyword(null, "underline-thickness", "underline-thickness", 1528492621), new cljs.core.Keyword(null, "mounted-style", "mounted-style", 783212842), new cljs.core.Keyword(null, "fill-rule", "fill-rule", -1824841598), new cljs.core.Keyword(null, "v-mathematical", "v-mathematical", 
-639453547), new cljs.core.Keyword(null, "glyph-name", "glyph-name", -1290126189), new cljs.core.Keyword(null, "itemprop", "itemprop", 1166204046), new cljs.core.Keyword(null, "cap-height", "cap-height", 1034322643), new cljs.core.Keyword(null, "accent-height", "accent-height", -1189857342), new cljs.core.Keyword(null, "xlink:role", "xlink:role", -556206369), new cljs.core.Keyword(null, "autofocus", "autofocus", -712814732), new cljs.core.Keyword(null, "preload", "preload", 1646824722), new cljs.core.Keyword(null, 
"strikethrough-position", "strikethrough-position", 402256746), new cljs.core.Keyword(null, "v-hanging", "v-hanging", -956218086), new cljs.core.Keyword(null, "autocomplete", "autocomplete", 1041133913), new cljs.core.Keyword(null, "panose-1", "panose-1", -1528382164), new cljs.core.Keyword(null, "xlink:href", "xlink:href", 828777205), new cljs.core.Keyword(null, "font-size-adjust", "font-size-adjust", -104156772), new cljs.core.Keyword(null, "radiogroup", "radiogroup", 1109767410), new cljs.core.Keyword(null, 
"overline-position", "overline-position", 1793937810), new cljs.core.Keyword(null, "marker-start", "marker-start", -56273582), new cljs.core.Keyword(null, "srclang", "srclang", -1282812164), new cljs.core.Keyword(null, "rendering-intent", "rendering-intent", -45468422), new cljs.core.Keyword(null, "paint-order", "paint-order", 1313558207), new cljs.core.Keyword(null, "v-ideographic", "v-ideographic", -1846578533), new cljs.core.Keyword(null, "clip-path", "clip-path", -439959120), new cljs.core.Keyword(null, 
"x-height", "x-height", 1735436609), new cljs.core.Keyword(null, "image-rendering", "image-rendering", 770251905), new cljs.core.Keyword(null, "keytype", "keytype", -1800018904), new cljs.core.Keyword(null, "stroke-dashoffset", "stroke-dashoffset", -782320340), new cljs.core.Keyword(null, "font-stretch", "font-stretch", -1432788830), new cljs.core.Keyword(null, "text-anchor", "text-anchor", 585613696), new cljs.core.Keyword(null, "unicode-range", "unicode-range", -2014392944), new cljs.core.Keyword(null, 
"fill-opacity", "fill-opacity", -537571170), new cljs.core.Keyword(null, "marker-mid", "marker-mid", -505338277), new cljs.core.Keyword(null, "minlength", "minlength", 259053545), new cljs.core.Keyword(null, "underline-position", "underline-position", 2105325589), new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "xlink:title", "xlink:title", 244078426), new cljs.core.Keyword(null, "color-profile", "color-profile", 1755323818), new cljs.core.Keyword(null, "xlink:type", 
"xlink:type", -1668107217), new cljs.core.Keyword(null, "xml:base", "xml:base", 1209393887), new cljs.core.Keyword(null, "font-family", "font-family", -667419874), new cljs.core.Keyword(null, "datetime", "datetime", 494675702), new cljs.core.Keyword(null, "glyph-orientation-horizontal", "glyph-orientation-horizontal", 436217892), new cljs.core.Keyword(null, "xlink:arcrole", "xlink:arcrole", -376517951), new cljs.core.Keyword(null, "writing-mode", "writing-mode", -1707110905), new cljs.core.Keyword(null, 
"marker-end", "marker-end", 341488703), new cljs.core.Keyword(null, "crossorigin", "crossorigin", -418026140), new cljs.core.Keyword(null, "flood-color", "flood-color", 1622703322), new cljs.core.Keyword(null, "colspan", "colspan", -1512420934), new cljs.core.Keyword(null, "hreflang", "hreflang", 1405893356), new cljs.core.Keyword(null, "letter-spacing", "letter-spacing", -948993767), new cljs.core.Keyword(null, "readonly", "readonly", -1101398934), new cljs.core.Keyword(null, "accept-charset", "accept-charset", 
-1667839372), new cljs.core.Keyword(null, "color-rendering", "color-rendering", -891830687), new cljs.core.Keyword(null, "strikethrough-thickness", "strikethrough-thickness", 2087500993), new cljs.core.Keyword(null, "formaction", "formaction", 405331853), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "font-style", "font-style", -773672352), new cljs.core.Keyword(null, 
"font-weight", "font-weight", 2085804583), new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), new cljs.core.Keyword(null, "stroke-dasharray", "stroke-dasharray", -942933855), new cljs.core.Keyword(null, "accesskey", "accesskey", 1009130381), new cljs.core.Keyword(null, "srcset", "srcset", 710050500), new cljs.core.Keyword(null, "stroke-miterlimit", "stroke-miterlimit", 1151270808), new cljs.core.Keyword(null, "spellcheck", "spellcheck", -508643726), new cljs.core.Keyword(null, 
"autoplay", "autoplay", -1319501991), new cljs.core.Keyword(null, "horiz-adv-x", "horiz-adv-x", 1555956653), new cljs.core.Keyword(null, "maxlength", "maxlength", -1163911985), new cljs.core.Keyword(null, "contenteditable", "contenteditable", -770210530), new cljs.core.Keyword(null, "vert-origin-y", "vert-origin-y", -1770906134), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "unicode-bidi", "unicode-bidi", 310629754), new cljs.core.Keyword(null, "shape-rendering", 
"shape-rendering", 955846315), new cljs.core.Keyword(null, "arabic-form", "arabic-form", -246736017), new cljs.core.Keyword(null, "usemap", "usemap", 898470438), new cljs.core.Keyword(null, "font-size", "font-size", -1847940346), new cljs.core.Keyword(null, "enctype", "enctype", -2053093795), new cljs.core.Keyword(null, "text-rendering", "text-rendering", 872518208), new cljs.core.Keyword(null, "stop-color", "stop-color", 316173955), new cljs.core.Keyword(null, "contextmenu", "contextmenu", -15887481), 
new cljs.core.Keyword(null, "v-alphabetic", "v-alphabetic", -552236578), new cljs.core.Keyword(null, "dominant-baseline", "dominant-baseline", 609259826), new cljs.core.Keyword(null, "flood-opacity", "flood-opacity", -479030608), new cljs.core.Keyword(null, "bgcolor", "bgcolor", 1996633770), new cljs.core.Keyword(null, "disappearing-style", "disappearing-style", 1006098271), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "glyph-orientation-vertical", 
"glyph-orientation-vertical", 1701745981), new cljs.core.Keyword(null, "enable-background", "enable-background", -858721379), new cljs.core.Keyword(null, "srcdoc", "srcdoc", 1490493414), new cljs.core.Keyword(null, "text-decoration", "text-decoration", 1836813207), new cljs.core.Keyword(null, "ismap", "ismap", -338082918), new cljs.core.Keyword(null, "xml:lang", "xml:lang", -1485113568), new cljs.core.Keyword(null, "horiz-origin-x", "horiz-origin-x", 1522984617), new cljs.core.Keyword(null, "color-interpolation", 
"color-interpolation", -1276247587), new cljs.core.Keyword(null, "vert-adv-y", "vert-adv-y", -641097319), new cljs.core.Keyword(null, "clip-rule", "clip-rule", 335492201), new cljs.core.Keyword(null, "autocapitalize", "autocapitalize", 1015077767), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.Keyword(null, "codebase", "codebase", 1837164787), new cljs.core.Keyword(null, "color-interpolation-filters", "color-interpolation-filters", -519168139)]);
dumdom.element.data_attr_QMARK_ = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  cljs.core.nth.call(null, a, 1, null);
  return cljs.core.re_find.call(null, /^data-/, cljs.core.name.call(null, b));
};
dumdom.element.event_handler_QMARK_ = function(a) {
  return cljs.core.re_find.call(null, /on[A-Z]/, cljs.core.name.call(null, a));
};
dumdom.element.prep_attrs = function(a) {
  var b = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, cljs.core.name.call(null, f), /^data-/, ""), e], null);
  }, cljs.core.filter.call(null, dumdom.element.data_attr_QMARK_, a)));
  a = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, function(e) {
    cljs.core.nth.call(null, e, 0, null);
    return null == cljs.core.nth.call(null, e, 1, null);
  }, cljs.core.map.call(null, function(e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dumdom.element.camel_key.call(null, f), e], null);
  }, cljs.core.remove.call(null, dumdom.element.data_attr_QMARK_, a))));
  var c = clojure.set.rename_keys.call(null, a, dumdom.element.attr_mappings), d = cljs.core.filter.call(null, dumdom.element.event_handler_QMARK_, cljs.core.keys.call(null, c));
  a = function() {
    var e = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(e) ? e : cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", -554971138)) ? cljs.core.hash.call(null, (new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", -554971138)).cljs$core$IFn$_invoke$arity$1(c)) : null;
  }();
  b = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.apply.call(null, cljs.core.dissoc, c, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.Keyword(null, "mounted-style", "mounted-style", 783212842), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.Keyword(null, "disappearing-style", "disappearing-style", 1006098271), new cljs.core.Keyword(null, "component", "component", 
  1555936782), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "ref", "ref", 1289896967), new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", -554971138), d), new cljs.core.Keyword(null, "props", "props", 453281727), function() {
    var e = cljs.core.PersistentArrayMap.EMPTY;
    e = cljs.core.truth_((new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "value", "value", 305978217), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(c)) : e;
    return cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", -554971138)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "__html", "__html", 674048345)) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "innerHTML", "innerHTML", -1856751343), (new cljs.core.Keyword(null, "__html", "__html", 674048345)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "dangerouslySetInnerHTML", "dangerouslySetInnerHTML", 
    -554971138)).cljs$core$IFn$_invoke$arity$1(c))) : e;
  }(), new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.merge.call(null, dumdom.element.normalize_styles.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(c)), function() {
    var e = (new cljs.core.Keyword(null, "mounted-style", "mounted-style", 783212842)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "delayed", "delayed", 251992229), dumdom.element.normalize_styles.call(null, e)], null) : null;
  }(), function() {
    var e = (new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "remove", "remove", -131428414), dumdom.element.normalize_styles.call(null, e)], null) : null;
  }(), function() {
    var e = (new cljs.core.Keyword(null, "disappearing-style", "disappearing-style", 1006098271)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "destroy", "destroy", -843660405), dumdom.element.normalize_styles.call(null, e)], null) : null;
  }()), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapv.call(null, function(e) {
    return dumdom.element.event_entry.call(null, c, e);
  }, d)), new cljs.core.Keyword(null, "hook", "hook", 750265408), cljs.core.merge.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var e = (new cljs.core.Keyword(null, "ref", "ref", 1289896967)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "insert", "insert", 1286475395), function(f) {
      return e.call(null, f.elm);
    }, new cljs.core.Keyword(null, "destroy", "destroy", -843660405), function() {
      return e.call(null, null);
    }], null) : null;
  }()), new cljs.core.Keyword(null, "dataset", "dataset", 1159262238), b], null);
  return cljs.core.truth_(a) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "key", "key", -1516042587), a) : b;
};
dumdom.element.hiccup_QMARK_ = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) && !cljs.core.map_entry_QMARK_.call(null, a) && (cljs.core.first.call(null, a) instanceof cljs.core.Keyword || cljs.core.fn_QMARK_.call(null, cljs.core.first.call(null, a)));
};
dumdom.element.class_list = function(a) {
  if (a instanceof cljs.core.Keyword) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, a)], null);
  }
  if ("string" === typeof a) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null);
  }
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return cljs.core.PersistentVector.EMPTY;
  }
  if (cljs.core.coll_QMARK_.call(null, a)) {
    return cljs.core.map.call(null, function(b) {
      return b instanceof cljs.core.Keyword ? cljs.core.name.call(null, b) : b;
    }, a);
  }
  if (null == a) {
    return cljs.core.PersistentVector.EMPTY;
  }
  throw cljs.core.ex_info.call(null, "Received class name that is neither string, keyword, or a collection of those", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "classes", "classes", 2037804510), a], null));
};
dumdom.element.parse_hiccup_symbol = function(a, b) {
  var c = cljs.core.re_find.call(null, /#([^\.#]+)/, a);
  cljs.core.nth.call(null, c, 0, null);
  var d = cljs.core.nth.call(null, c, 1, null);
  a = clojure.string.split.call(null, clojure.string.replace.call(null, a, /#([^#\.]+)/, ""), /\./);
  c = cljs.core.seq.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  var e = cljs.core.remove.call(null, cljs.core.empty_QMARK_, cljs.core.concat.call(null, dumdom.element.class_list.call(null, (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(b)), dumdom.element.class_list.call(null, (new cljs.core.Keyword(null, "className", "className", -1983287057)).cljs$core$IFn$_invoke$arity$1(b)), c));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, function() {
    var f = cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057));
    f = cljs.core.truth_(d) ? cljs.core.assoc.call(null, f, new cljs.core.Keyword(null, "id", "id", -1388402092), d) : f;
    return cljs.core.seq.call(null, e) ? cljs.core.update.call(null, f, new cljs.core.Keyword(null, "className", "className", -1983287057), function(g) {
      return clojure.string.join.call(null, " ", cljs.core.truth_(g) ? cljs.core.conj.call(null, e, g) : e);
    }) : f;
  }()], null);
};
dumdom.element.explode_styles = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(b) {
    var c = cljs.core.map.call(null, clojure.string.trim, clojure.string.split.call(null, b, /:/));
    b = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null);
  }, clojure.string.split.call(null, a, /;/)));
};
dumdom.element.prep_hiccup_attrs = function(a) {
  return "string" === typeof(new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(a) ? cljs.core.update.call(null, a, new cljs.core.Keyword(null, "style", "style", -496642736), dumdom.element.explode_styles) : a;
};
dumdom.element.flatten_seqs = function(a) {
  var b = cljs.core.PersistentVector.EMPTY, c = cljs.core.seq.call(null, a);
  cljs.core.first.call(null, c);
  for (cljs.core.next.call(null, c);;) {
    c = cljs.core.seq.call(null, a);
    a = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    var d = a;
    a = c;
    if (null == a && null == d) {
      return cljs.core.seq.call(null, b);
    }
    b = cljs.core.seq_QMARK_.call(null, d) ? cljs.core.into.call(null, b, dumdom.element.flatten_seqs.call(null, d)) : cljs.core.conj.call(null, b, d);
  }
};
dumdom.element.add_namespace = function(a) {
  var b = cljs.core.not_EQ_.call(null, "foreignObject", (new cljs.core.Keyword(null, "sel", "sel", -1686154807)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "ns", "ns", 441598760)], null), "http://www.w3.org/2000/svg") : a;
  return cljs.core.truth_((new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.update.call(null, b, new cljs.core.Keyword(null, "children", "children", -940561982), function(c) {
    return cljs.core.map.call(null, dumdom.element.add_namespace, c);
  }) : b;
};
dumdom.element.svg_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, "s", cljs.core.nth.call(null, a, 0)) && cljs.core._EQ_.call(null, "v", cljs.core.nth.call(null, a, 1)) && cljs.core._EQ_.call(null, "g", cljs.core.nth.call(null, a, 2)) && (cljs.core._EQ_.call(null, 3, cljs.core.count.call(null, a)) || cljs.core._EQ_.call(null, ".", cljs.core.nth.call(null, a, 3)) || cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, a, 3)));
};
dumdom.element.primitive_QMARK_ = function(a) {
  return "string" === typeof a || "number" === typeof a;
};
dumdom.element.convert_primitive_children = function(a) {
  return function d(c) {
    return new cljs.core.LazySeq(null, function() {
      for (;;) {
        var e = cljs.core.seq.call(null, c);
        if (e) {
          if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
            var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
            a: {
              for (var k = 0;;) {
                if (k < g) {
                  var l = cljs.core._nth.call(null, f, k);
                  cljs.core.chunk_append.call(null, h, dumdom.element.primitive_QMARK_.call(null, l) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", -1790561697), l], null) : l);
                  k += 1;
                } else {
                  f = !0;
                  break a;
                }
              }
            }
            return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
          }
          h = cljs.core.first.call(null, e);
          return cljs.core.cons.call(null, dumdom.element.primitive_QMARK_.call(null, h) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "text", "text", -1790561697), h], null) : h, d.call(null, cljs.core.rest.call(null, e)));
        }
        return null;
      }
    }, null, null);
  }.call(null, a);
};
dumdom.element.create_vdom_node = function(a, b, c) {
  var d = cljs.core.map_QMARK_.call(null, c), e = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "sel", "sel", -1686154807), a, new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.dissoc.call(null, b, new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376)), new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376), (new cljs.core.Keyword("dumdom", 
  "component-key", "dumdom/component-key", -1206270376)).cljs$core$IFn$_invoke$arity$1(b)], null);
  e = dumdom.element.primitive_QMARK_.call(null, c) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "text", "text", -1790561697), c) : e;
  e = d ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "children", "children", -940561982), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)) : e;
  c = cljs.core.seq_QMARK_.call(null, c) && !d ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "children", "children", -940561982), c) : e;
  c = cljs.core.update.call(null, c, new cljs.core.Keyword(null, "children", "children", -940561982), dumdom.element.convert_primitive_children);
  a = dumdom.element.svg_QMARK_.call(null, a) ? dumdom.element.add_namespace.call(null, c) : c;
  return cljs.core.truth_((new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(b)) : a;
};
dumdom.element.inflate_hiccup = function(a) {
  if (null == a) {
    return dumdom.element.create_vdom_node.call(null, "!", cljs.core.PersistentArrayMap.EMPTY, "nil");
  }
  if (dumdom.element.hiccup_QMARK_.call(null, a)) {
    var b = cljs.core.first.call(null, a), c = cljs.core.rest.call(null, a);
    c = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, c)) ? c : cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY], null), c);
    if (cljs.core.fn_QMARK_.call(null, b)) {
      return cljs.core.apply.call(null, b, cljs.core.rest.call(null, a));
    }
    b = dumdom.element.parse_hiccup_symbol.call(null, cljs.core.name.call(null, b), cljs.core.first.call(null, c));
    a = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return cljs.core.apply.call(null, dumdom.element.create, a, dumdom.element.prep_hiccup_attrs.call(null, b), dumdom.element.flatten_seqs.call(null, cljs.core.rest.call(null, c)));
  }
  return a;
};
dumdom.element.enumerate_key = function(a, b) {
  b = "string" === typeof b ? b : cljs.core.str.cljs$core$IFn$_invoke$arity$1(b);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.get.call(null, a, b, 0)], null);
};
dumdom.element.realize_children = function(a, b) {
  b = cljs.core.seq.call(null, b);
  for (var c = cljs.core.PersistentVector.EMPTY, d = cljs.core.PersistentArrayMap.EMPTY;;) {
    if (null == b) {
      return cljs.core.seq.call(null, c);
    }
    var e = cljs.core.first.call(null, b), f = cljs.core.fn_QMARK_.call(null, e) ? e.call(null, a, d) : e;
    b = cljs.core.next.call(null, b);
    c = cljs.core.conj.call(null, c, f);
    d = e = function() {
      var g = (new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376)).cljs$core$IFn$_invoke$arity$1(f), h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null), l = (new cljs.core.Keyword("dumdom", "lookup-key", "dumdom/lookup-key", 234912017)).cljs$core$IFn$_invoke$arity$1(f);
      g = cljs.core.nth.call(null, l, 0, null);
      var m = cljs.core.nth.call(null, l, 1, null);
      h = cljs.core.assoc.call(null, d, h, function() {
        var n = cljs.core.truth_(k) ? k : 0;
        return null == n ? null : n + 1;
      }());
      return cljs.core.truth_(g) ? cljs.core.assoc.call(null, h, g, function() {
        var n = cljs.core.truth_(m) ? m : 0;
        return null == n ? null : n + 1;
      }()) : h;
    }();
  }
};
dumdom.element.add_comment_node = function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword("dumdom", "component-name", "dumdom/component-name", 19850734));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword("dumdom", "render-comments?", "dumdom/render-comments?", 877432722));
  b = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null);
  var d = cljs.core, e = d.truth_;
  c = cljs.core.truth_(c) ? a : c;
  return e.call(d, c) ? cljs.core.cons.call(null, dumdom.element.create_vdom_node.call(null, "!", cljs.core.PersistentArrayMap.EMPTY, a), b) : b;
};
dumdom.element.create = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return dumdom.element.create.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
dumdom.element.create.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  return function(d, e) {
    var f = dumdom.element.prep_attrs.call(null, b), g = dumdom.element.enumerate_key.call(null, e, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(f)), h = cljs.core.conj.call(null, d, g);
    return dumdom.element.create_vdom_node.call(null, a, function() {
      var k = cljs.core.truth_((new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(f)) ? cljs.core.assoc.call(null, f, new cljs.core.Keyword(null, "key", "key", -1516042587), clojure.string.join.call(null, ".", g)) : f, l = cljs.core.truth_(g) ? cljs.core.assoc.call(null, k, new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376), g) : k;
      return cljs.core.assoc_in.call(null, l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "hook", "hook", 750265408), new cljs.core.Keyword(null, "update", "update", 1045576396)], null), function(m, n) {
        m = cljs.core.seq.call(null, cljs.core.filter.call(null, function(z, D, H, L, P, S) {
          return function(U) {
            return null == U ? null : U.willEnter;
          };
        }(f, k, l, f, g, h), n.children));
        for (var p = null, r = 0, u = 0;;) {
          if (u < r) {
            cljs.core._nth.call(null, p, u).willEnter.call(null), u += 1;
          } else {
            if (m = cljs.core.seq.call(null, m)) {
              p = m, cljs.core.chunked_seq_QMARK_.call(null, p) ? (m = cljs.core.chunk_first.call(null, p), u = cljs.core.chunk_rest.call(null, p), p = m, r = cljs.core.count.call(null, m), m = u) : (cljs.core.first.call(null, p).willEnter.call(null), m = cljs.core.next.call(null, p), p = null, r = 0), u = 0;
            } else {
              break;
            }
          }
        }
        n = cljs.core.seq.call(null, cljs.core.filter.call(null, function(z, D, H, L, P, S) {
          return function(U) {
            return null == U ? null : U.willAppear;
          };
        }(f, k, l, f, g, h), n.children));
        m = null;
        for (u = r = 0;;) {
          if (u < r) {
            p = cljs.core._nth.call(null, m, u), p.willAppear.call(null), u += 1;
          } else {
            if (n = cljs.core.seq.call(null, n)) {
              m = n, cljs.core.chunked_seq_QMARK_.call(null, m) ? (n = cljs.core.chunk_first.call(null, m), r = cljs.core.chunk_rest.call(null, m), m = n, p = cljs.core.count.call(null, n), n = r, r = p) : (p = cljs.core.first.call(null, m), p.willAppear.call(null), n = cljs.core.next.call(null, m), m = null, r = 0), u = 0;
            } else {
              return null;
            }
          }
        }
      });
    }(), cljs.core.mapcat.call(null, dumdom.element.add_comment_node, dumdom.element.realize_children.call(null, h, cljs.core.map.call(null, dumdom.element.inflate_hiccup, cljs.core.mapcat.call(null, function(k) {
      return cljs.core.seq_QMARK_.call(null, k) ? k : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null);
    }, c)))));
  };
};
dumdom.element.create.cljs$lang$maxFixedArity = 2;
dumdom.element.create.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
dumdom.component = {};
dumdom.component._STAR_render_eagerly_QMARK__STAR_ = !1;
dumdom.component._STAR_render_comments_QMARK__STAR_ = !1;
dumdom.component.eager_render_required_QMARK_ = cljs.core.atom.call(null, !1);
dumdom.component.should_component_update_QMARK_ = function(a, b) {
  var c = !cljs.core.contains_QMARK_.call(null, a, new cljs.core.Keyword(null, "data", "data", -232669377));
  if (c) {
    return c;
  }
  if (a = cljs.core.not_EQ_.call(null, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a), b)) {
    return a;
  }
  a = dumdom.component._STAR_render_eagerly_QMARK__STAR_;
  return cljs.core.truth_(a) ? cljs.core.deref.call(null, dumdom.component.eager_render_required_QMARK_) : a;
};
dumdom.component.setup_animation_hooks = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "will-enter", "will-enter", -692415624));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096));
  cljs.core.truth_(c) && cljs.core.swap_BANG_.call(null, b, cljs.core.assoc, new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096), c);
  a = cljs.core.truth_(d) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "willEnter", "willEnter", -70990441), function() {
    return cljs.core.swap_BANG_.call(null, b, cljs.core.assoc, new cljs.core.Keyword(null, "will-enter", "will-enter", -692415624), d);
  }) : a;
  return cljs.core.truth_(c) ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "willAppear", "willAppear", -1052339861), function() {
    return cljs.core.swap_BANG_.call(null, b, cljs.core.dissoc, new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096));
  }) : a;
};
dumdom.component.setup_mount_hook = function(a, b, c, d, e) {
  b = cljs.core.__destructure_map.call(null, b);
  var f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-render", "on-render", 2096729391)), h = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096)), k = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "did-appear", "did-appear", 2048737572)), l = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "will-enter", "will-enter", -692415624)), 
  m = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "did-enter", "did-enter", -1814731189));
  return cljs.core.truth_(cljs.core.truth_(f) ? f : cljs.core.truth_(g) ? g : cljs.core.truth_(l) ? l : h) ? cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "hook", "hook", 750265408), new cljs.core.Keyword(null, "insert", "insert", 1286475395)], null), function(n) {
    return function(p) {
      cljs.core.truth_(n) && n.call(null, p);
      cljs.core.truth_(f) && cljs.core.apply.call(null, f, p.elm, c, d);
      cljs.core.truth_(g) && cljs.core.apply.call(null, g, p.elm, c, null, d);
      var r = cljs.core.deref.call(null, e);
      r = cljs.core.__destructure_map.call(null, r);
      var u = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "will-enter", "will-enter", -692415624));
      r = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096));
      var z = cljs.core.truth_(u) ? u : r;
      return cljs.core.truth_(z) ? (cljs.core.swap_BANG_.call(null, e, cljs.core.assoc, new cljs.core.Keyword(null, "ready?", "ready?", -105765697), !1), cljs.core.apply.call(null, z, p.elm, function() {
        cljs.core.swap_BANG_.call(null, e, cljs.core.assoc, new cljs.core.Keyword(null, "ready?", "ready?", -105765697), !0);
        var D = cljs.core._EQ_.call(null, z, u) ? m : k;
        return cljs.core.truth_(D) ? cljs.core.apply.call(null, D, p.elm, c, d) : null;
      }, c, d)) : null;
    };
  }) : a;
};
dumdom.component.setup_update_hook = function(a, b, c, d, e) {
  b = cljs.core.__destructure_map.call(null, b);
  var f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-update", "on-update", 1680216496)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-render", "on-render", 2096729391));
  return cljs.core.truth_(cljs.core.truth_(f) ? f : g) ? cljs.core.assoc_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "hook", "hook", 750265408), new cljs.core.Keyword(null, "update", "update", 1045576396)], null), function m(k, l) {
    if (cljs.core.truth_(m.called)) {
      return null;
    }
    m.called = !0;
    cljs.core.truth_(f) && cljs.core.apply.call(null, f, l.elm, c, d, e);
    return cljs.core.truth_(g) ? cljs.core.apply.call(null, g, l.elm, c, d, e) : null;
  }) : a;
};
dumdom.component.setup_unmount_hook = function(a, b, c, d, e, f) {
  a = cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "hook", "hook", 750265408), new cljs.core.Keyword(null, "destroy", "destroy", -843660405)], null), function(g) {
    return function(h) {
      var k = (new cljs.core.Keyword(null, "on-unmount", "on-unmount", 245689269)).cljs$core$IFn$_invoke$arity$1(b);
      cljs.core.truth_(k) && cljs.core.apply.call(null, k, h.elm, c, d);
      cljs.core.truth_(g) && g.call(null, h);
      return f.call(null);
    };
  });
  return cljs.core.truth_((new cljs.core.Keyword(null, "will-leave", "will-leave", -1009838517)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.assoc_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "hook", "hook", 750265408), new cljs.core.Keyword(null, "remove", "remove", -131428414)], null), function(g, h) {
    var k = function() {
      var l = (new cljs.core.Keyword(null, "did-leave", "did-leave", 1577156642)).cljs$core$IFn$_invoke$arity$1(b);
      cljs.core.truth_(l) && cljs.core.apply.call(null, l, g.elm, c, d);
      return h.call(null);
    };
    return cljs.core.truth_((new cljs.core.Keyword(null, "ready?", "ready?", -105765697)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, e))) ? cljs.core.apply.call(null, (new cljs.core.Keyword(null, "will-leave", "will-leave", -1009838517)).cljs$core$IFn$_invoke$arity$1(b), g.elm, k, c, d) : cljs.core.add_watch.call(null, e, new cljs.core.Keyword(null, "leave", "leave", 1022579443), function(l, m, n, p) {
      return cljs.core.truth_((new cljs.core.Keyword(null, "ready?", "ready?", -105765697)).cljs$core$IFn$_invoke$arity$1(p)) ? (cljs.core.remove_watch.call(null, e, new cljs.core.Keyword(null, "leave", "leave", 1022579443)), cljs.core.apply.call(null, (new cljs.core.Keyword(null, "will-leave", "will-leave", -1009838517)).cljs$core$IFn$_invoke$arity$1(b), g.elm, k, c, d)) : null;
    });
  }) : a;
};
dumdom.component.resolve_key = function(a, b, c, d) {
  var e = dumdom.element.enumerate_key, f = e.call, g = clojure.string.join, h = g.call, k = cljs.core.remove, l = k.call, m = cljs.core.empty_QMARK_, n = cljs.core.PersistentVector, p = cljs.core.PersistentVector.EMPTY_NODE;
  c = cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
  var r = (new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376)).cljs$core$IFn$_invoke$arity$1(a);
  r = null == r ? null : cljs.core.first.call(null, r);
  b = f.call(e, null, d, h.call(g, null, ".", l.call(k, null, m, new n(null, 3, 5, p, [b, c, r], null))));
  return cljs.core.assoc.call(null, a, new cljs.core.Keyword("dumdom", "component-key", "dumdom/component-key", -1206270376), b, new cljs.core.Keyword(null, "key", "key", -1516042587), clojure.string.join.call(null, ".", b));
};
dumdom.component.component = function(a) {
  switch(arguments.length) {
    case 1:
      return dumdom.component.component.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return dumdom.component.component.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
dumdom.component.component.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return dumdom.component.component.call(null, a, cljs.core.PersistentArrayMap.EMPTY);
};
dumdom.component.component.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.core.truth_(dumdom.component._STAR_render_eagerly_QMARK__STAR_) && cljs.core.reset_BANG_.call(null, dumdom.component.eager_render_required_QMARK_, !0);
  var c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = function() {
    var e = (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(b);
    if (cljs.core.truth_(e)) {
      return e;
    }
    e = cljs.core.not_empty.call(null, a.name);
    return cljs.core.truth_(e) ? e : cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.random_uuid.call(null));
  }();
  return function() {
    var e = function(g, h) {
      var k = function(l, m) {
        var n = function() {
          var H = (new cljs.core.Keyword(null, "keyfn", "keyfn", 780060332)).cljs$core$IFn$_invoke$arity$1(b);
          return cljs.core.truth_(H) ? H.call(null, g) : null;
        }(), p = dumdom.element.enumerate_key.call(null, m, n), r = cljs.core.conj.call(null, l, p);
        l = cljs.core.deref.call(null, c).call(null, r);
        var u = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ready?", "ready?", -105765697), !0], null));
        if (cljs.core.truth_(dumdom.component.should_component_update_QMARK_.call(null, l, g))) {
          var z = function() {
            var H = function() {
              var L = cljs.core.apply.call(null, a, g, h);
              return cljs.core.truth_(L) ? dumdom.element.inflate_hiccup.call(null, L).call(null, r, cljs.core.PersistentArrayMap.EMPTY) : null;
            }();
            H = null == H ? null : dumdom.component.resolve_key.call(null, H, d, n, m);
            H = null == H ? null : cljs.core.assoc.call(null, H, new cljs.core.Keyword("dumdom", "render-comments?", "dumdom/render-comments?", 877432722), dumdom.component._STAR_render_comments_QMARK__STAR_, new cljs.core.Keyword("dumdom", "lookup-key", "dumdom/lookup-key", 234912017), p);
            H = null == H ? null : cljs.core.update.call(null, H, new cljs.core.Keyword("dumdom", "component-name", "dumdom/component-name", 19850734), function(L) {
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), cljs.core.truth_(L) ? ["/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(L)].join("") : null].join("");
            });
            H = null == H ? null : dumdom.component.setup_animation_hooks.call(null, H, u, b);
            return null == H ? null : dumdom.component.setup_unmount_hook.call(null, H, b, g, h, u, function() {
              return cljs.core.swap_BANG_.call(null, c, cljs.core.dissoc, r);
            });
          }();
          cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, r, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "vdom", "vdom", 953162958), z, new cljs.core.Keyword(null, "data", "data", -232669377), g], null));
          var D = cljs.core.truth_(z) ? dumdom.component.setup_mount_hook.call(null, z, b, g, h, u) : z;
          return cljs.core.truth_(cljs.core.truth_(z) ? l : z) ? dumdom.component.setup_update_hook.call(null, D, b, g, (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(l), h) : D;
        }
        return (new cljs.core.Keyword(null, "vdom", "vdom", 953162958)).cljs$core$IFn$_invoke$arity$1(l);
      };
      k.dumdom = !0;
      return k;
    }, f = function(g, h) {
      var k = null;
      if (1 < arguments.length) {
        k = 0;
        for (var l = Array(arguments.length - 1); k < l.length;) {
          l[k] = arguments[k + 1], ++k;
        }
        k = new cljs.core.IndexedSeq(l, 0, null);
      }
      return e.call(this, g, k);
    };
    f.cljs$lang$maxFixedArity = 1;
    f.cljs$lang$applyTo = function(g) {
      var h = cljs.core.first(g);
      g = cljs.core.rest(g);
      return e(h, g);
    };
    f.cljs$core$IFn$_invoke$arity$variadic = e;
    return f;
  }();
};
dumdom.component.component.cljs$lang$maxFixedArity = 2;
dumdom.component.single_child_QMARK_ = function(a) {
  return cljs.core.fn_QMARK_.call(null, a) || cljs.core.vector_QMARK_.call(null, a) && cljs.core.first.call(null, a) instanceof cljs.core.Keyword;
};
dumdom.component.TransitionGroup = function(a, b, c) {
  c = dumdom.component.single_child_QMARK_.call(null, c) ? new cljs.core.List(null, c, null, 1, null) : cljs.core.seq.call(null, c);
  if (cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(b))) {
    return (new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(b).call(null, c);
  }
  var d = cljs.core.apply, e = d.call;
  var f = (new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(b);
  f = cljs.core.truth_(f) ? f : "span";
  return e.call(d, null, a, f, b, c);
};
dumdom.component.complete_transition = function(a, b, c) {
  if (cljs.core.truth_(b)) {
    return setTimeout(c, b);
  }
  var d = cljs.core.atom.call(null, null);
  b = function() {
    c.call(null);
    return a.removeEventListener("transitionend", cljs.core.deref.call(null, d));
  };
  cljs.core.reset_BANG_.call(null, d, b);
  return a.addEventListener("transitionend", b);
};
dumdom.component.transition_classes = function(a, b) {
  if ("string" === typeof a) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[a, "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""), [a, "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "-active"].join("")], null);
  }
  var c = cljs.core.keyword.call(null, b);
  b = cljs.core.keyword.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "Active"].join(""));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.call(null, a), cljs.core.get.call(null, a, b, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c.call(null, a)), "-active"].join(""))], null);
};
dumdom.component.animate = function(a, b) {
  b = cljs.core.__destructure_map.call(null, b);
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "enabled-by-default?", "enabled-by-default?", -973479851)), d = cljs.core.keyword.call(null, ["transition", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "Timeout"].join(""));
  return function(e, f, g) {
    g = cljs.core.__destructure_map.call(null, g);
    var h = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "transitionName", "transitionName", -654288740));
    if (cljs.core.truth_(cljs.core.get.call(null, g, cljs.core.keyword.call(null, ["transition", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")), c))) {
      h = dumdom.component.transition_classes.call(null, h, a.toLowerCase());
      var k = cljs.core.nth.call(null, h, 0, null), l = cljs.core.nth.call(null, h, 1, null);
      e.classList.add(k);
      dumdom.component.complete_transition.call(null, e, cljs.core.get.call(null, g, d), f);
      return setTimeout(function() {
        return e.classList.add(l);
      }, 0);
    }
    return f.call(null);
  };
};
dumdom.component.cleanup_animation = function(a) {
  return function(b, c) {
    c = cljs.core.__destructure_map.call(null, c);
    c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "transitionName", "transitionName", -654288740));
    b.classList.remove([cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
    return b.classList.remove([cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "-active"].join(""));
  };
};
dumdom.component.TransitioningElement = dumdom.component.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  return cljs.core.get.call(null, a, new cljs.core.Keyword(null, "child", "child", 623967545));
}, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "will-appear", "will-appear", 579342096), dumdom.component.animate.call(null, "Appear", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enabled-by-default?", "enabled-by-default?", -973479851), !1], null)), new cljs.core.Keyword(null, "did-appear", "did-appear", 2048737572), dumdom.component.cleanup_animation.call(null, "appear"), new cljs.core.Keyword(null, "will-enter", "will-enter", -692415624), dumdom.component.animate.call(null, 
"Enter", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enabled-by-default?", "enabled-by-default?", -973479851), !0], null)), new cljs.core.Keyword(null, "did-enter", "did-enter", -1814731189), dumdom.component.cleanup_animation.call(null, "enter"), new cljs.core.Keyword(null, "will-leave", "will-leave", -1009838517), dumdom.component.animate.call(null, "Leave", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enabled-by-default?", "enabled-by-default?", 
-973479851), !0], null))], null));
dumdom.component.CSSTransitionGroup = function(a, b, c) {
  c = dumdom.component.single_child_QMARK_.call(null, c) ? new cljs.core.List(null, c, null, 1, null) : cljs.core.seq.call(null, c);
  return dumdom.component.TransitionGroup.call(null, a, b, cljs.core.map.call(null, function(d) {
    return dumdom.component.TransitioningElement.call(null, cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "child", "child", 623967545), d));
  }, c));
};
dumdom.component.component_QMARK_ = function(a) {
  return cljs.core.truth_(a) ? a.dumdom : a;
};
var portfolio = {homeless:{}};
portfolio.homeless.debounce = function(a, b) {
  var c = cljs.core.atom.call(null, null);
  return function() {
    var d = function(f) {
      var g = cljs.core.deref.call(null, c);
      null != g && clearTimeout(g);
      return cljs.core.reset_BANG_.call(null, c, setTimeout(function() {
        return cljs.core.apply.call(null, a, f);
      }, b));
    }, e = function(f) {
      var g = null;
      if (0 < arguments.length) {
        g = 0;
        for (var h = Array(arguments.length - 0); g < h.length;) {
          h[g] = arguments[g + 0], ++g;
        }
        g = new cljs.core.IndexedSeq(h, 0, null);
      }
      return d.call(this, g);
    };
    e.cljs$lang$maxFixedArity = 0;
    e.cljs$lang$applyTo = function(f) {
      f = cljs.core.seq(f);
      return d(f);
    };
    e.cljs$core$IFn$_invoke$arity$variadic = d;
    return e;
  }();
};
portfolio.data = {};
portfolio.data.scenes = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
portfolio.data.scene_order = cljs.core.atom.call(null, 0);
portfolio.data.namespaces = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
portfolio.data.collections = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
portfolio.data.get_deleted_scenes = function(a) {
  return cljs.core.mapcat.call(null, function(b) {
    cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return cljs.core.keep.call(null, cljs.core.second, cljs.core.drop_while.call(null, function(c) {
      var d = cljs.core.nth.call(null, c, 0, null);
      c = cljs.core.nth.call(null, c, 1, null);
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "idx", "idx", 1053688473)).cljs$core$IFn$_invoke$arity$1(d) - (new cljs.core.Keyword(null, "idx", "idx", 1053688473)).cljs$core$IFn$_invoke$arity$1(c), 1);
    }, cljs.core.partition_all.call(null, 2, 1, cljs.core.reverse.call(null, cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "idx", "idx", 1053688473), b)))));
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, cljs.core.namespace, new cljs.core.Keyword(null, "id", "id", -1388402092)), cljs.core.vals.call(null, a)));
};
portfolio.data.purge_removed_scenes = function() {
  return cljs.core.swap_BANG_.call(null, portfolio.data.scenes, function(a) {
    return cljs.core.apply.call(null, cljs.core.dissoc, a, cljs.core.map.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), portfolio.data.get_deleted_scenes.call(null, a)));
  });
};
portfolio.data.eventually_purge_scenes = portfolio.homeless.debounce.call(null, portfolio.data.purge_removed_scenes, 50);
portfolio.data.get_scene_context = function(a, b) {
  return cljs.core._EQ_.call(null, 1, (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(b)) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 212345235), (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "idx", "idx", 1053688473), function() {
    var c = (new cljs.core.Keyword(null, "idx", "idx", 1053688473)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? c : cljs.core.swap_BANG_.call(null, portfolio.data.scene_order, cljs.core.inc);
  }()], null) : new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "line", "line", 212345235), function() {
    var c = (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(c) ? c : (new cljs.core.Keyword(null, "line", "line", 212345235)).cljs$core$IFn$_invoke$arity$1(a);
  }(), new cljs.core.Keyword(null, "idx", "idx", 1053688473), cljs.core.swap_BANG_.call(null, portfolio.data.scene_order, cljs.core.inc)], null);
};
portfolio.data.register_scene_BANG_ = function(a) {
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a))) {
    throw cljs.core.ex_info.call(null, "Cannot register scene without :id", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), a], null));
  }
  var b = portfolio.data.get_scene_context.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, portfolio.data.scenes), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a)], null)), a);
  b = cljs.core.__destructure_map.call(null, b);
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "idx", "idx", 1053688473)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "line", "line", 212345235));
  b = cljs.core.swap_BANG_;
  var e = b.call, f = portfolio.data.scenes, g = cljs.core.assoc, h = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), d, new cljs.core.Keyword(null, "idx", "idx", 1053688473), c, new cljs.core.Keyword(null, "updated-at", "updated-at", -1592622336), (new Date()).getTime());
  a = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "title", "title", 636505583), cljs.core.name.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a))) : c;
  e.call(b, null, f, g, h, a);
  portfolio.data.eventually_purge_scenes.call(null);
  return null;
};
portfolio.data.register_namespace_BANG_ = function(a) {
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(a))) {
    throw cljs.core.ex_info.call(null, "Cannot register namespace without :namespace", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), a], null));
  }
  return cljs.core.swap_BANG_.call(null, portfolio.data.namespaces, cljs.core.assoc, (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(a), a);
};
portfolio.data.register_collection_BANG_ = function(a) {
  if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a))) {
    throw cljs.core.ex_info.call(null, "Cannot register collection without :id", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), a], null));
  }
  return cljs.core.swap_BANG_.call(null, portfolio.data.collections, cljs.core.assoc, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), a);
};
clojure.walk = {};
clojure.walk.walk = function(a, b, c) {
  return cljs.core.list_QMARK_.call(null, c) ? b.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, a, c))) : cljs.core.map_entry_QMARK_.call(null, c) ? b.call(null, new cljs.core.MapEntry(a.call(null, cljs.core.key.call(null, c)), a.call(null, cljs.core.val.call(null, c)), null)) : cljs.core.seq_QMARK_.call(null, c) ? b.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, a, c))) : cljs.core.record_QMARK_.call(null, c) ? b.call(null, cljs.core.reduce.call(null, 
  function(d, e) {
    return cljs.core.conj.call(null, d, a.call(null, e));
  }, c, c)) : cljs.core.coll_QMARK_.call(null, c) ? b.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, c), cljs.core.map.call(null, a, c))) : b.call(null, c);
};
clojure.walk.postwalk = function(a, b) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, a), a, b);
};
clojure.walk.prewalk = function(a, b) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, a), cljs.core.identity, a.call(null, b));
};
clojure.walk.keywordize_keys = function(a) {
  var b = function(c) {
    var d = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    return "string" === typeof d ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, d), c], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
  };
  return clojure.walk.postwalk.call(null, function(c) {
    return cljs.core.map_QMARK_.call(null, c) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, b, c)) : c;
  }, a);
};
clojure.walk.stringify_keys = function(a) {
  var b = function(c) {
    var d = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    return d instanceof cljs.core.Keyword ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, d), c], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null);
  };
  return clojure.walk.postwalk.call(null, function(c) {
    return cljs.core.map_QMARK_.call(null, c) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, b, c)) : c;
  }, a);
};
clojure.walk.prewalk_replace = function(a, b) {
  return clojure.walk.prewalk.call(null, function(c) {
    return cljs.core.contains_QMARK_.call(null, a, c) ? a.call(null, c) : c;
  }, b);
};
clojure.walk.postwalk_replace = function(a, b) {
  return clojure.walk.postwalk.call(null, function(c) {
    return cljs.core.contains_QMARK_.call(null, a, c) ? a.call(null, c) : c;
  }, b);
};
cljs.pprint = {};
cljs.pprint.print = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, a));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.println = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.print, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.print_char = function(a) {
  var b = cljs.core._write, c = b.call, d = cljs.core._STAR_out_STAR_, e = cljs.core._EQ_;
  a = cljs.core.truth_(e.call(null, "\b", a)) ? "\\backspace" : cljs.core.truth_(e.call(null, " ", a)) ? "\\space" : cljs.core.truth_(e.call(null, "\t", a)) ? "\\tab" : cljs.core.truth_(e.call(null, "\n", a)) ? "\\newline" : cljs.core.truth_(e.call(null, "\f", a)) ? "\\formfeed" : cljs.core.truth_(e.call(null, "\r", a)) ? "\\return" : cljs.core.truth_(e.call(null, '"', a)) ? '\\"' : cljs.core.truth_(e.call(null, "\\", a)) ? "\\\\" : ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  return c.call(b, null, d, a);
};
cljs.pprint.pr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, a));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.prn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(b);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  cljs.core.apply.call(null, cljs.pprint.pr, a);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
cljs.pprint.float_QMARK_ = function(a) {
  return "number" === typeof a && !isNaN(a) && Infinity !== a && parseFloat(a) !== parseInt(a, 10);
};
cljs.pprint.char_code = function(a) {
  if ("number" === typeof a) {
    return a;
  }
  if ("string" === typeof a && 1 === a.length) {
    return a.charCodeAt(0);
  }
  throw Error("Argument to char must be a character or number");
};
cljs.pprint.map_passing_context = function(a, b, c) {
  var d = c;
  for (c = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
    }
    var e = cljs.core.first.call(null, d);
    d = cljs.core.next.call(null, d);
    e = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, b], null));
    b = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    c = cljs.core.conj.call(null, c, b);
    b = e;
  }
};
cljs.pprint.consume = function(a, b) {
  var c = b;
  for (b = cljs.core.PersistentVector.EMPTY;;) {
    var d = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null));
    c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    if (cljs.core.not.call(null, c)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, d], null);
    }
    b = cljs.core.conj.call(null, b, c);
    c = d;
  }
};
cljs.pprint.consume_while = function(a, b) {
  for (var c = cljs.core.PersistentVector.EMPTY;;) {
    var d = cljs.core.apply.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)), e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
    d = cljs.core.nth.call(null, d, 2, null);
    if (cljs.core.not.call(null, f)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
    }
    b = d;
    c = cljs.core.conj.call(null, c, e);
  }
};
cljs.pprint.unzip_map = function(a) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(c) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, c);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k), m = cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    var n = cljs.core.nth.call(null, l, 0, null);
                    cljs.core.nth.call(null, l, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, n], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, e);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            g = cljs.core.nth.call(null, f, 0, null);
            cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, g], null), d.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function d(c) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, c);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k), m = cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.nth.call(null, l, 0, null);
                    l = cljs.core.nth.call(null, l, 1, null);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, l], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            f = cljs.core.first.call(null, e);
            h = cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            cljs.core.nth.call(null, f, 0, null);
            f = cljs.core.nth.call(null, f, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, f], null), d.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }())], null);
};
cljs.pprint.tuple_map = function(a, b) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    return function e(d) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, d);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l), n = cljs.core.nth.call(null, m, 0, null);
                    m = cljs.core.nth.call(null, m, 1, null);
                    cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, b], null)], null));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            g = cljs.core.first.call(null, f);
            k = cljs.core.nth.call(null, g, 0, null);
            g = cljs.core.nth.call(null, g, 1, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, b], null)], null), e.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }());
};
cljs.pprint.rtrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, cljs.core.count.call(null, a) - 1), b)) {
    for (--c;;) {
      if (0 > c) {
        return "";
      }
      if (cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, c), b)) {
        --c;
      } else {
        return cljs.core.subs.call(null, a, 0, c + 1);
      }
    }
  } else {
    return a;
  }
};
cljs.pprint.ltrim = function(a, b) {
  var c = cljs.core.count.call(null, a);
  if (0 < c && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), b)) {
    for (var d = 0;;) {
      if (cljs.core._EQ_.call(null, d, c) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, d), b)) {
        return cljs.core.subs.call(null, a, d);
      }
      d += 1;
    }
  } else {
    return a;
  }
};
cljs.pprint.prefix_count = function(a, b) {
  b = cljs.core.coll_QMARK_.call(null, b) ? cljs.core.set.call(null, b) : cljs.core.PersistentHashSet.createAsIfByAssoc([b]);
  for (var c = 0;;) {
    if (cljs.core._EQ_.call(null, c, cljs.core.count.call(null, a)) || cljs.core.not.call(null, b.call(null, cljs.core.nth.call(null, a, c)))) {
      return c;
    }
    c += 1;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
var cljs$pprint$IPrettyFlush$_ppflush$dyn_14287 = function(a) {
  var b = cljs.pprint._ppflush[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = cljs.pprint._ppflush._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", a);
};
cljs.pprint._ppflush = function(a) {
  return null != a && null != a.cljs$pprint$IPrettyFlush$_ppflush$arity$1 ? a.cljs$pprint$IPrettyFlush$_ppflush$arity$1(a) : cljs$pprint$IPrettyFlush$_ppflush$dyn_14287.call(null, a);
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function(a, b) {
  return b.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint.set_field = function(a, b, c) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, b, c);
};
cljs.pprint.get_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function(a, b) {
  cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "max", "max", 61366548), b);
  return null;
};
cljs.pprint.get_writer = function(a) {
  return cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function(a, b) {
  cljs.core._EQ_.call(null, b, "\n") ? (cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0), cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1)) : cljs.pprint.set_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 
  1);
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, a, new cljs.core.Keyword(null, "base", "base", 185279322)), b);
};
cljs.pprint.column_writer = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.column_writer.call(null, a, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), b, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), a], null));
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14291) {
    cljs.pprint.t_cljs$pprint14291 = function(d, e, f, g) {
      this.writer = d;
      this.max_columns = e;
      this.fields = f;
      this.meta14292 = g;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14291.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(d, e) {
      return new cljs.pprint.t_cljs$pprint14291(this.writer, this.max_columns, this.fields, e);
    }, cljs.pprint.t_cljs$pprint14291.prototype.cljs$core$IMeta$_meta$arity$1 = function(d) {
      return this.meta14292;
    }, cljs.pprint.t_cljs$pprint14291.prototype.cljs$core$IDeref$_deref$arity$1 = function(d) {
      return this.fields;
    }, cljs.pprint.t_cljs$pprint14291.prototype.cljs$core$IWriter$_flush$arity$1 = function(d) {
      return cljs.core._flush.call(null, this.writer);
    }, cljs.pprint.t_cljs$pprint14291.prototype.cljs$core$IWriter$_write$arity$2 = function(d, e) {
      d = cljs.core._EQ_;
      var f = cljs.core.type.call(null, e);
      if (cljs.core.truth_(d.call(null, String, f))) {
        return d = e.lastIndexOf("\n"), 0 > d ? cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, e)) : (cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, e) - d - 1), cljs.pprint.set_field.call(null, this, new cljs.core.Keyword(null, "line", "line", 212345235), 
        cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(g) {
          return cljs.core._EQ_.call(null, g, "\n");
        }, e)))), cljs.core._write.call(null, cljs.pprint.get_field.call(null, this, new cljs.core.Keyword(null, "base", "base", 185279322)), e);
      }
      if (cljs.core.truth_(d.call(null, Number, f))) {
        return cljs.pprint.c_write_char.call(null, this, e);
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)].join(""));
    }, cljs.pprint.t_cljs$pprint14291.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta14292", "meta14292", 1083237550, null)], null);
    }, cljs.pprint.t_cljs$pprint14291.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14291.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14291", cljs.pprint.t_cljs$pprint14291.cljs$lang$ctorPrWriter = function(d, e, f) {
      return cljs.core._write.call(null, e, "cljs.pprint/t_cljs$pprint14291");
    }, cljs.pprint.__GT_t_cljs$pprint14291 = function(d, e, f, g) {
      return new cljs.pprint.t_cljs$pprint14291(d, e, f, g);
    };
  }
  return new cljs.pprint.t_cljs$pprint14291(a, b, c, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(a, b, c, d, e, f, g, h, k, l, m, n, p) {
  this.parent = a;
  this.section = b;
  this.start_col = c;
  this.indent = d;
  this.done_nl = e;
  this.intra_block_nl = f;
  this.prefix = g;
  this.per_line_prefix = h;
  this.suffix = k;
  this.logical_block_callback = l;
  this.__meta = m;
  this.__extmap = n;
  this.__hash = p;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "parent":
      return this.parent;
    case "section":
      return this.section;
    case "start-col":
      return this.start_col;
    case "indent":
      return this.indent;
    case "done-nl":
      return this.done_nl;
    case "intra-block-nl":
      return this.intra_block_nl;
    case "prefix":
      return this.prefix;
    case "per-line-prefix":
      return this.per_line_prefix;
    case "suffix":
      return this.suffix;
    case "logical-block-callback":
      return this.logical_block_callback;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.logical-block{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), this.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), this.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), this.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback], null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 10 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = 1977012399 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.parent, b.parent) && cljs.core._EQ_.call(null, this.section, b.section) && cljs.core._EQ_.call(null, this.start_col, b.start_col) && cljs.core._EQ_.call(null, this.indent, b.indent) && cljs.core._EQ_.call(null, this.done_nl, b.done_nl) && cljs.core._EQ_.call(null, this.intra_block_nl, b.intra_block_nl) && cljs.core._EQ_.call(null, this.prefix, b.prefix) && cljs.core._EQ_.call(null, this.per_line_prefix, b.per_line_prefix) && 
  cljs.core._EQ_.call(null, this.suffix, b.suffix) && cljs.core._EQ_.call(null, this.logical_block_callback, b.logical_block_callback) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "parent":
    case "section":
    case "start-col":
    case "indent":
    case "done-nl":
    case "intra-block-nl":
    case "prefix":
    case "per-line-prefix":
    case "suffix":
    case "logical-block-callback":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), b)) ? new cljs.pprint.logical_block(c, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), b)) ? new cljs.pprint.logical_block(this.parent, c, this.start_col, this.indent, 
  this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), b)) ? new cljs.pprint.logical_block(this.parent, this.section, c, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "indent", "indent", -148200125), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, c, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, c, this.intra_block_nl, 
  this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, c, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "prefix", "prefix", -265908465), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, c, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, 
  c, this.suffix, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, c, this.logical_block_callback, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 
  1612691194), b)) ? new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, c, this.__meta, this.__extmap, null) : new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), this.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), this.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), this.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), this.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), this.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), this.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), this.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), this.per_line_prefix, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), this.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), this.logical_block_callback, null)], null), this.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.logical_block(this.parent, this.section, this.start_col, this.indent, this.done_nl, this.intra_block_nl, this.prefix, this.per_line_prefix, this.suffix, this.logical_block_callback, b, this.__extmap, this.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = !0;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function(a, b, c, d, e, f, g, h, k, l) {
  return new cljs.pprint.logical_block(a, b, c, d, e, f, g, h, k, l, null, null, null);
};
cljs.pprint.map__GT_logical_block = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, 
  "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), 
  (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.ancestor_QMARK_ = function(a, b) {
  for (b = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b);;) {
    if (null == b) {
      return !1;
    }
    if (a === b) {
      return !0;
    }
    b = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b);
  }
};
cljs.pprint.buffer_length = function(a) {
  return (a = cljs.core.seq.call(null, a)) ? (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, a)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a)) : 0;
};
cljs.pprint.buffer_blob = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.data = b;
  this.trailing_white_space = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "data":
      return this.data;
    case "trailing-white-space":
      return this.trailing_white_space;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.buffer-blob{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), this.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], 
  null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? 
  cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = 1809113693 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.data, b.data) && cljs.core._EQ_.call(null, this.trailing_white_space, b.trailing_white_space) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
    case "data":
    case "trailing-white-space":
    case "start-pos":
    case "end-pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.buffer_blob(c, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), b)) ? new cljs.pprint.buffer_blob(this.type_tag, c, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), this.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), this.trailing_white_space, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.buffer_blob(this.type_tag, this.data, this.trailing_white_space, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = !0;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function(a, b, c, d, e) {
  return new cljs.pprint.buffer_blob(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.make_buffer_blob = function(a, b, c, d) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), a, b, c, d, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(a, b, c, d, e, f, g, h) {
  this.type_tag = a;
  this.type = b;
  this.logical_block = c;
  this.start_pos = d;
  this.end_pos = e;
  this.__meta = f;
  this.__extmap = g;
  this.__hash = h;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "type":
      return this.type;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.nl-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), this.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), 
  this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, 
  this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 5 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = -1640656800 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.type, b.type) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? 
  cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
    case "type":
    case "logical-block":
    case "start-pos":
    case "end-pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.nl_t(c, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), b)) ? new cljs.pprint.nl_t(this.type_tag, c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.nl_t(this.type_tag, 
  this.type, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), this.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.nl_t(this.type_tag, this.type, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = !0;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function(a, b, c, d, e) {
  return new cljs.pprint.nl_t(a, b, c, d, e, null, null, null);
};
cljs.pprint.map__GT_nl_t = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), 
  null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.make_nl_t = function(a, b, c, d) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), a, b, c, d, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.start-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = -414877272 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
    case "logical-block":
    case "start-pos":
    case "end-pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.start_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.start_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.start_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = !0;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function(a, b, c, d) {
  return new cljs.pprint.start_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.make_start_block_t = function(a, b, c) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), a, b, c, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(a, b, c, d, e, f, g) {
  this.type_tag = a;
  this.logical_block = b;
  this.start_pos = c;
  this.end_pos = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.end-block-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = 1365867980 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, 
  cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
    case "logical-block":
    case "start-pos":
    case "end-pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.end_block_t(c, this.logical_block, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.end_block_t(this.type_tag, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, 
  this.__extmap, b, c), null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.end_block_t(this.type_tag, this.logical_block, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = !0;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function(a, b, c, d) {
  return new cljs.pprint.end_block_t(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.make_end_block_t = function(a, b, c) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), a, b, c, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(a, b, c, d, e, f, g, h, k) {
  this.type_tag = a;
  this.logical_block = b;
  this.relative_to = c;
  this.offset = d;
  this.start_pos = e;
  this.end_pos = f;
  this.__meta = g;
  this.__extmap = h;
  this.__hash = k;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
      return this.type_tag;
    case "logical-block":
      return this.logical_block;
    case "relative-to":
      return this.relative_to;
    case "offset":
      return this.offset;
    case "start-pos":
      return this.start_pos;
    case "end-pos":
      return this.end_pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.indent-t{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), 
  this.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos], null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 6 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = -1602780238 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.type_tag, b.type_tag) && cljs.core._EQ_.call(null, this.logical_block, b.logical_block) && cljs.core._EQ_.call(null, this.relative_to, b.relative_to) && cljs.core._EQ_.call(null, this.offset, b.offset) && cljs.core._EQ_.call(null, this.start_pos, b.start_pos) && cljs.core._EQ_.call(null, this.end_pos, b.end_pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "type-tag":
    case "logical-block":
    case "relative-to":
    case "offset":
    case "start-pos":
    case "end-pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), b)) ? new cljs.pprint.indent_t(c, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), b)) ? new cljs.pprint.indent_t(this.type_tag, c, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : 
  cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, c, this.offset, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, c, this.start_pos, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, c, this.end_pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), b)) ? new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, c, this.__meta, this.__extmap, null) : new cljs.pprint.indent_t(this.type_tag, 
  this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), this.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), this.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), this.relative_to, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "offset", "offset", 296498311), this.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), this.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), this.end_pos, null)], null), this.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.indent_t(this.type_tag, this.logical_block, this.relative_to, this.offset, this.start_pos, this.end_pos, b, this.__extmap, this.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = !0;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function(a, b, c, d, e, f) {
  return new cljs.pprint.indent_t(a, b, c, d, e, f, null, null, null);
};
cljs.pprint.map__GT_indent_t = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "start-pos", "start-pos", 
  668789086)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.make_indent_t = function(a, b, c, d, e) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), a, b, c, d, e, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function() {
  return "\n";
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.write_token) {
  cljs.pprint.write_token = function() {
    var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(f, g) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  b = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  c = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(b), a);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(b), a);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  cljs.core.truth_(c) && c.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  b = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(b) ? cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b) : null;
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(a, b) {
  var c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b), d = cljs.core.reset_BANG_, e = d.call, f = (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(c), g = (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(b);
  var h = cljs.core._EQ_;
  b = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(b);
  if (cljs.core.truth_(h.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), b))) {
    a = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(c));
  } else {
    if (cljs.core.truth_(h.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), b))) {
      a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
    } else {
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
    }
  }
  return e.call(d, null, f, g + a);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(a, b) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(b));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(a, b) {
  var c = cljs.core, d = c.truth_;
  var e = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
  e || (e = (e = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "fill", "fill", 883462889))) ? cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b))) : e);
  d.call(c, e) ? cljs.pprint.emit_nl.call(null, a, b) : (b = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b));
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function(a, b, c) {
  b = cljs.core.seq.call(null, b);
  for (var d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var h = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
        cljs.core.truth_(h) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), h);
      }
      cljs.pprint.write_token.call(null, a, g);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g));
      g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
      cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null));
      f += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        cljs.core.chunked_seq_QMARK_.call(null, b) ? (d = cljs.core.chunk_first.call(null, b), b = cljs.core.chunk_rest.call(null, b), g = d, e = cljs.core.count.call(null, d), d = g) : (g = cljs.core.first.call(null, b), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114)) || (d = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.core.truth_(d) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d)), cljs.pprint.write_token.call(null, a, g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", 
        "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(g)), g = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(cljs.core.truth_(c) ? g : c) && (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), g), cljs.core.swap_BANG_.call(null, 
        cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)), b = cljs.core.next.call(null, b), d = null, e = 0), f = 0;
      } else {
        return null;
      }
    }
  }
};
cljs.pprint.tokens_fit_QMARK_ = function(a, b) {
  var c = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return null == c || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))) + cljs.pprint.buffer_length.call(null, b) < c;
};
cljs.pprint.linear_nl_QMARK_ = function(a, b, c) {
  b = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(b));
  return cljs.core.truth_(b) ? b : !cljs.pprint.tokens_fit_QMARK_.call(null, a, c);
};
cljs.pprint.miser_nl_QMARK_ = function(a, b, c) {
  var d = cljs.pprint.get_miser_width.call(null, a), e = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
  return cljs.core.truth_(d) ? cljs.core.truth_(e) ? (d = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(b)) >= e - d) ? cljs.pprint.linear_nl_QMARK_.call(null, a, b, c) : d : e : d;
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.emit_nl_QMARK_) {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(f, g, h, k) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(f);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.linear_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(a, b, c, d) {
  a = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(a);
  var e = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a));
  return cljs.core.truth_(e) ? e : (d = !cljs.pprint.tokens_fit_QMARK_.call(null, b, d)) ? d : cljs.pprint.miser_nl_QMARK_.call(null, b, a, c);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(a, b, c, d) {
  return !0;
});
cljs.pprint.get_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(d) {
    return !(cljs.pprint.nl_t_QMARK_.call(null, d) && cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(d), c));
  }, cljs.core.next.call(null, a)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b) + 1, a))], null);
};
cljs.pprint.get_sub_section = function(a) {
  var b = cljs.core.first.call(null, a), c = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.seq.call(null, cljs.core.take_while.call(null, function(d) {
    var e = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(d);
    return !(cljs.pprint.nl_t_QMARK_.call(null, d) && (cljs.core._EQ_.call(null, e, c) || cljs.pprint.ancestor_QMARK_.call(null, e, c)));
  }, cljs.core.next.call(null, a)));
};
cljs.pprint.update_nl_state = function(a) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0);
  for (a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);;) {
    if (cljs.core.truth_(a)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(a), !0), cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(a), !0), a = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(a);
    } else {
      return null;
    }
  }
};
cljs.pprint.emit_nl = function(a, b) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  b = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(b);
  var c = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  c = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(b)) - cljs.core.count.call(null, c), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
  return cljs.pprint.update_nl_state.call(null, b);
};
cljs.pprint.split_at_newline = function(a) {
  var b = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(c) {
    return !cljs.pprint.nl_t_QMARK_.call(null, c);
  }, a));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, b), a))], null);
};
cljs.pprint.write_token_string = function(a, b) {
  var c = cljs.pprint.split_at_newline.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  var d = cljs.core.nth.call(null, c, 1, null);
  cljs.core.truth_(b) && cljs.pprint.write_tokens.call(null, a, b, !1);
  if (cljs.core.truth_(d)) {
    c = cljs.pprint.get_section.call(null, d);
    b = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    var e = cljs.core.first.call(null, d), f = cljs.pprint.emit_nl_QMARK_.call(null, e, a, b, cljs.pprint.get_sub_section.call(null, d));
    cljs.core.truth_(f) && (cljs.pprint.emit_nl.call(null, a, e), d = cljs.core.next.call(null, d));
    cljs.pprint.tokens_fit_QMARK_.call(null, a, d) ? a = d : (d = cljs.pprint.write_token_string.call(null, a, b), cljs.core._EQ_.call(null, d, b) ? (cljs.pprint.write_tokens.call(null, a, b, !1), a = c) : a = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, d, c)));
    return a;
  }
  return null;
};
cljs.pprint.write_line = function(a) {
  for (var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));;) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, b));
    if (cljs.pprint.tokens_fit_QMARK_.call(null, a, b)) {
      return null;
    }
    var c = cljs.pprint.write_token_string.call(null, a, b);
    if (b !== c) {
      b = c;
    } else {
      return null;
    }
  }
};
cljs.pprint.add_to_buffer = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b));
  return cljs.pprint.tokens_fit_QMARK_.call(null, a, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))) ? null : cljs.pprint.write_line.call(null, a);
};
cljs.pprint.write_buffered_output = function(a) {
  cljs.pprint.write_line.call(null, a);
  var b = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.pprint.write_tokens.call(null, a, b, !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : null;
};
cljs.pprint.write_white_space = function(a) {
  var b = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.core.truth_(b) ? (cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null)) : null;
};
cljs.pprint.write_initial_lines = function(a, b) {
  var c = clojure.string.split.call(null, b, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, c), 1)) {
    return b;
  }
  b = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))));
  var d = cljs.core.first.call(null, c);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))))) {
    var e = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), f = e + cljs.core.count.call(null, d);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), f);
    cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, d, null, e, f));
    cljs.pprint.write_buffered_output.call(null, a);
  } else {
    cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d);
  }
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), "\n");
  d = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, c)));
  e = null;
  for (var g = f = 0;;) {
    if (g < f) {
      var h = cljs.core._nth.call(null, e, g);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), h);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null));
      cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b);
      g += 1;
    } else {
      if (d = cljs.core.seq.call(null, d)) {
        e = d, cljs.core.chunked_seq_QMARK_.call(null, e) ? (d = cljs.core.chunk_first.call(null, e), g = cljs.core.chunk_rest.call(null, e), e = d, f = cljs.core.count.call(null, d), d = g) : (d = cljs.core.first.call(null, e), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
        cljs.core.deref.call(null, a))), cljs.pprint.pp_newline.call(null)), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b), d = cljs.core.next.call(null, e), e = null, f = 0), g = 0;
      } else {
        break;
      }
    }
  }
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
  return cljs.core.last.call(null, c);
};
cljs.pprint.p_write_char = function(a, b) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), b);
  }
  if (cljs.core._EQ_.call(null, b, "\n")) {
    return cljs.pprint.write_initial_lines.call(null, a, "\n");
  }
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), d = c + 1;
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), d);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, b), null, c, d));
};
cljs.pprint.pretty_writer = function(a, b, c) {
  var d = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), null, null, null, null, null, null, null), e = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), 
  new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", 
  "buffer", 617295198)], [d, c, d, !0, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, a, b), 1, cljs.core.PersistentVector.EMPTY]));
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14475) {
    cljs.pprint.t_cljs$pprint14475 = function(f, g, h, k, l, m) {
      this.writer = f;
      this.max_columns = g;
      this.miser_width = h;
      this.lb = k;
      this.fields = l;
      this.meta14476 = m;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(f, g) {
      return new cljs.pprint.t_cljs$pprint14475(this.writer, this.max_columns, this.miser_width, this.lb, this.fields, g);
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$core$IMeta$_meta$arity$1 = function(f) {
      return this.meta14476;
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$core$IDeref$_deref$arity$1 = function(f) {
      return this.fields;
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$core$IWriter$_write$arity$2 = function(f, g) {
      f = cljs.core._EQ_;
      var h = cljs.core.type.call(null, g);
      if (cljs.core.truth_(f.call(null, String, h))) {
        h = cljs.pprint.write_initial_lines.call(null, this, g);
        g = clojure.string.replace_first.call(null, h, /\s+$/, "");
        f = cljs.core.subs.call(null, h, g.length);
        var k = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        if (cljs.core._EQ_.call(null, k, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          return cljs.pprint.write_white_space.call(null, this), cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), g), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), f);
        }
        k = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this)));
        h = k + cljs.core.count.call(null, h);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), h);
        return cljs.pprint.add_to_buffer.call(null, this, cljs.pprint.make_buffer_blob.call(null, g, f, k, h));
      }
      if (cljs.core.truth_(f.call(null, Number, h))) {
        return cljs.pprint.p_write_char.call(null, this, g);
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h)].join(""));
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$core$IWriter$_flush$arity$1 = function(f) {
      cljs.pprint._ppflush.call(null, this);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))));
    }, cljs.pprint.t_cljs$pprint14475.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL, cljs.pprint.t_cljs$pprint14475.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(f) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613)) ? (cljs.pprint.write_tokens.call(null, this, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this))), !0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, 
      this), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY)) : cljs.pprint.write_white_space.call(null, this);
    }, cljs.pprint.t_cljs$pprint14475.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta14476", "meta14476", -1816855907, 
      null)], null);
    }, cljs.pprint.t_cljs$pprint14475.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14475.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14475", cljs.pprint.t_cljs$pprint14475.cljs$lang$ctorPrWriter = function(f, g, h) {
      return cljs.core._write.call(null, g, "cljs.pprint/t_cljs$pprint14475");
    }, cljs.pprint.__GT_t_cljs$pprint14475 = function(f, g, h, k, l, m) {
      return new cljs.pprint.t_cljs$pprint14475(f, g, h, k, l, m);
    };
  }
  return new cljs.pprint.t_cljs$pprint14475(a, b, c, d, e, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function(a, b, c, d) {
  c = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, !1), cljs.core.atom.call(null, !1), b, c, d, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), c);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    return cljs.pprint.write_white_space.call(null, a), d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "start", "start", -355208981)), cljs.core.truth_(b) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, 
    cljs.core.deref.call(null, a))), b), a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)))), cljs.core.reset_BANG_.call(null, c.start_col, a), cljs.core.reset_BANG_.call(null, c.indent, a);
  }
  d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  b = d + (cljs.core.truth_(b) ? cljs.core.count.call(null, b) : 0);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), b);
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_start_block_t.call(null, c, d, b));
};
cljs.pprint.end_block = function(a) {
  var b = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(b);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, a);
    cljs.core.truth_(c) && cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c);
    var d = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
    cljs.core.truth_(d) && d.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
    d = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c = d + (cljs.core.truth_(c) ? cljs.core.count.call(null, c) : 0), cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), c), cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_end_block_t.call(null, b, d, c));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(b));
};
cljs.pprint.nl = function(a, b) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, a), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_nl_t.call(null, b, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), c, c));
};
cljs.pprint.indent = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, a);
    var e = cljs.core.reset_BANG_, f = e.call, g = (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(d);
    var h = cljs.core._EQ_;
    if (cljs.core.truth_(h.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), b))) {
      a = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(d));
    } else {
      if (cljs.core.truth_(h.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), b))) {
        a = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))));
      } else {
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
      }
    }
    return f.call(e, null, g, c + a);
  }
  e = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
  return cljs.pprint.add_to_buffer.call(null, a, cljs.pprint.make_indent_t.call(null, d, b, c, e, e));
};
cljs.pprint.get_miser_width = function(a) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a)));
};
cljs.pprint._STAR_print_pretty_STAR_ = !0;
if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function(a, b) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(c) {
    var d = cljs.core.get.call(null, a, cljs.core.key.call(null, c));
    return cljs.core.truth_(d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.val.call(null, c)], null) : null;
  }, b));
};
cljs.pprint.pretty_writer_QMARK_ = function(a) {
  var b = null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IDeref$ ? !0 : a.cljs$lang$protocol_mask$partition0$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a);
  return b ? (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, a))) : b;
};
cljs.pprint.make_pretty_writer = function(a, b, c) {
  return cljs.pprint.pretty_writer.call(null, a, b, c);
};
cljs.pprint.write_out = function(a) {
  var b = cljs.pprint._STAR_current_length_STAR_;
  cljs.core.truth_(b) && (b = cljs.core._STAR_print_length_STAR_, b = cljs.core.truth_(b) ? cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_ : b);
  cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint.pr.call(null, a) : cljs.core.truth_(b) ? cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...") : (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_) && (cljs.pprint._STAR_current_length_STAR_ += 1), cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, a));
  return b;
};
cljs.pprint.write = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), !0], null), cljs.core.apply.call(null, cljs.core.hash_map, b));
  var c = cljs.pprint._STAR_print_base_STAR_, d = cljs.pprint._STAR_print_circle_STAR_, e = cljs.core._STAR_print_length_STAR_, f = cljs.core._STAR_print_level_STAR_, g = cljs.pprint._STAR_print_lines_STAR_, h = cljs.pprint._STAR_print_miser_width_STAR_, k = cljs.pprint._STAR_print_pprint_dispatch_STAR_, l = cljs.pprint._STAR_print_pretty_STAR_, m = cljs.pprint._STAR_print_radix_STAR_, n = cljs.core._STAR_print_readably_STAR_, p = cljs.pprint._STAR_print_right_margin_STAR_, r = cljs.pprint._STAR_print_suppress_namespaces_STAR_, 
  u = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_base_STAR_), z = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_circle_STAR_), D = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(b, cljs.core._STAR_print_length_STAR_), H = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(b, 
  cljs.core._STAR_print_level_STAR_), L = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_lines_STAR_), P = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_miser_width_STAR_), S = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_pprint_dispatch_STAR_), U = (new cljs.core.Keyword(null, 
  "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_pretty_STAR_), V = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_radix_STAR_), q = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(b, cljs.core._STAR_print_readably_STAR_), t = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_right_margin_STAR_), 
  v = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(b, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  cljs.pprint._STAR_print_base_STAR_ = u;
  cljs.pprint._STAR_print_circle_STAR_ = z;
  cljs.core._STAR_print_length_STAR_ = D;
  cljs.core._STAR_print_level_STAR_ = H;
  cljs.pprint._STAR_print_lines_STAR_ = L;
  cljs.pprint._STAR_print_miser_width_STAR_ = P;
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = S;
  cljs.pprint._STAR_print_pretty_STAR_ = U;
  cljs.pprint._STAR_print_radix_STAR_ = V;
  cljs.core._STAR_print_readably_STAR_ = q;
  cljs.pprint._STAR_print_right_margin_STAR_ = t;
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = v;
  try {
    var w = new goog.string.StringBuffer(), x = cljs.core.contains_QMARK_.call(null, b, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(b) : !0, y = !0 === x || null == x ? new cljs.core.StringBufferWriter(w) : x;
    if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
      var A = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, y)), B = cljs.core._STAR_out_STAR_, C = A ? cljs.pprint.make_pretty_writer.call(null, y, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : y;
      cljs.core._STAR_out_STAR_ = C;
      try {
        cljs.pprint.write_out.call(null, a), cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.core._STAR_out_STAR_ = B;
      }
    } else {
      var E = cljs.core._STAR_out_STAR_;
      cljs.core._STAR_out_STAR_ = y;
      try {
        cljs.pprint.pr.call(null, a);
      } finally {
        cljs.core._STAR_out_STAR_ = E;
      }
    }
    !0 === x && cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(w));
    return null == x ? cljs.core.str.cljs$core$IFn$_invoke$arity$1(w) : null;
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = r, cljs.pprint._STAR_print_right_margin_STAR_ = p, cljs.core._STAR_print_readably_STAR_ = n, cljs.pprint._STAR_print_radix_STAR_ = m, cljs.pprint._STAR_print_pretty_STAR_ = l, cljs.pprint._STAR_print_pprint_dispatch_STAR_ = k, cljs.pprint._STAR_print_miser_width_STAR_ = h, cljs.pprint._STAR_print_lines_STAR_ = g, cljs.core._STAR_print_level_STAR_ = f, cljs.core._STAR_print_length_STAR_ = e, cljs.pprint._STAR_print_circle_STAR_ = d, cljs.pprint._STAR_print_base_STAR_ = 
    c;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
cljs.pprint.pprint = function(a) {
  switch(arguments.length) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var b = new goog.string.StringBuffer(), c = cljs.core._STAR_out_STAR_, d = new cljs.core.StringBufferWriter(b);
  cljs.core._STAR_out_STAR_ = d;
  try {
    return cljs.pprint.pprint.call(null, a, cljs.core._STAR_out_STAR_), cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(b));
  } finally {
    cljs.core._STAR_out_STAR_ = c;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, b)), d = cljs.core._STAR_out_STAR_;
  b = c ? cljs.pprint.make_pretty_writer.call(null, b, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : b;
  cljs.core._STAR_out_STAR_ = b;
  try {
    var e = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = !0;
    try {
      cljs.pprint.write_out.call(null, a);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = e;
    }
    cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_)) || cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = d;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function(a) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = a;
  return null;
};
cljs.pprint.check_enumerated_arg = function(a, b) {
  if (cljs.core.not.call(null, b.call(null, a))) {
    throw Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join(""));
  }
  return null;
};
cljs.pprint.level_exceeded = function() {
  var a = cljs.core._STAR_print_level_STAR_;
  return cljs.core.truth_(a) ? cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_ : a;
};
cljs.pprint.pprint_newline = function(a) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, a);
};
cljs.pprint.pprint_indent = function(a, b) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, a, b);
};
cljs.pprint.pprint_tab = function(a, b, c) {
  cljs.pprint.check_enumerated_arg.call(null, a, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  b = "string" === typeof b ? cljs.pprint.compile_format.call(null, b) : b;
  c = cljs.pprint.init_navigator.call(null, c);
  return cljs.pprint.execute_format.call(null, a, b, c);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function(a, b) {
  a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, b, " "))), "^\n"].join("");
  throw Error(a);
};
cljs.pprint.arg_navigator = function(a, b, c, d, e, f) {
  this.seq = a;
  this.rest = b;
  this.pos = c;
  this.__meta = d;
  this.__extmap = e;
  this.__hash = f;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "seq":
      return this.seq;
    case "rest":
      return this.rest;
    case "pos":
      return this.pos;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.arg-navigator{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), this.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos], null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 3 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = -402038447 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.seq, b.seq) && cljs.core._EQ_.call(null, this.rest, b.rest) && cljs.core._EQ_.call(null, this.pos, b.pos) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this), this.__meta), b) : new cljs.pprint.arg_navigator(this.seq, 
  this.rest, this.pos, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "seq":
    case "rest":
    case "pos":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), b)) ? new cljs.pprint.arg_navigator(c, this.rest, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), b)) ? new cljs.pprint.arg_navigator(this.seq, c, this.pos, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), b)) ? new cljs.pprint.arg_navigator(this.seq, 
  this.rest, c, this.__meta, this.__extmap, null) : new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), this.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), this.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), this.pos, null)], null), this.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.arg_navigator(this.seq, this.rest, this.pos, b, this.__extmap, this.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = !0;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function(a, b, c) {
  return new cljs.pprint.arg_navigator(a, b, c, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.init_navigator = function(a) {
  a = cljs.core.seq.call(null, a);
  return new cljs.pprint.arg_navigator(a, a, 0, null, null, null);
};
cljs.pprint.next_arg = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(b)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null);
  }
  throw Error("Not enough arguments for format definition");
};
cljs.pprint.next_arg_or_nil = function(a) {
  var b = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, b), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.next.call(null, b), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + 1, null, null, null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 
  a], null);
};
cljs.pprint.get_format_arg = function(a) {
  var b = cljs.pprint.next_arg.call(null, a);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = "string" === typeof a ? cljs.pprint.compile_format.call(null, a) : a;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
};
cljs.pprint.absolute_reposition = function(a, b) {
  return b >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) ? cljs.pprint.relative_reposition.call(null, a, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) - b) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a)), b, null, null, 
  null);
};
cljs.pprint.relative_reposition = function(a, b) {
  var c = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(a) + b;
  return 0 > b ? cljs.pprint.absolute_reposition.call(null, a, c) : new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.drop.call(null, b, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(a)), c, null, null, null);
};
cljs.pprint.compiled_directive = function(a, b, c, d, e, f, g) {
  this.func = a;
  this.def = b;
  this.params = c;
  this.offset = d;
  this.__meta = e;
  this.__extmap = f;
  this.__hash = g;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(a, b) {
  return this.cljs$core$ILookup$_lookup$arity$3(null, b, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(a, b, c) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "func":
      return this.func;
    case "def":
      return this.def;
    case "params":
      return this.params;
    case "offset":
      return this.offset;
    default:
      return cljs.core.get.call(null, this.__extmap, b, c);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(a, b, c) {
  return cljs.core.reduce.call(null, function(d, e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return b.call(null, d, f, e);
  }, c, this);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, b, c) {
  return cljs.core.pr_sequential_writer.call(null, b, function(d) {
    return cljs.core.pr_sequential_writer.call(null, b, cljs.core.pr_writer, "", " ", "", c, d);
  }, "#cljs.pprint.compiled-directive{", ", ", "}", c, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), this.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), this.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), this.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), this.offset], null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(a) {
  return new cljs.core.RecordIter(0, this, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(this.__extmap) ? cljs.core._iterator.call(null, this.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(a) {
  return this.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(a) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(a) {
  return 4 + cljs.core.count.call(null, this.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(a) {
  a = this.__hash;
  return null != a ? a : this.__hash = a = -829256337 ^ cljs.core.hash_unordered_coll.call(null, this);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(a, b) {
  return null != b && this.constructor === b.constructor && cljs.core._EQ_.call(null, this.func, b.func) && cljs.core._EQ_.call(null, this.def, b.def) && cljs.core._EQ_.call(null, this.params, b.params) && cljs.core._EQ_.call(null, this.offset, b.offset) && cljs.core._EQ_.call(null, this.__extmap, b.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), b) ? cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, 
  this), this.__meta), b) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this.__extmap, b)), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(a, b) {
  switch(b instanceof cljs.core.Keyword ? b.fqn : null) {
    case "func":
    case "def":
    case "params":
    case "offset":
      return !0;
    default:
      return cljs.core.contains_QMARK_.call(null, this.__extmap, b);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(a, b, c) {
  a = cljs.core.keyword_identical_QMARK_;
  return cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), b)) ? new cljs.pprint.compiled_directive(c, this.def, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), b)) ? new cljs.pprint.compiled_directive(this.func, c, this.params, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), 
  b)) ? new cljs.pprint.compiled_directive(this.func, this.def, c, this.offset, this.__meta, this.__extmap, null) : cljs.core.truth_(a.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), b)) ? new cljs.pprint.compiled_directive(this.func, this.def, this.params, c, this.__meta, this.__extmap, null) : new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, this.__meta, cljs.core.assoc.call(null, this.__extmap, b, c), null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(a) {
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), this.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), this.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), this.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", 
  "offset", 296498311), this.offset, null)], null), this.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(a, b) {
  return new cljs.pprint.compiled_directive(this.func, this.def, this.params, this.offset, b, this.__extmap, this.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(a, b) {
  return cljs.core.vector_QMARK_.call(null, b) ? this.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, b, 0), cljs.core._nth.call(null, b, 1)) : cljs.core.reduce.call(null, cljs.core._conj, this, b);
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = !0;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(a) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(a, b) {
  return cljs.core._write.call(null, b, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function(a, b, c, d) {
  return new cljs.pprint.compiled_directive(a, b, c, d, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function(a) {
  var b = cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311));
  b = cljs.core.record_QMARK_.call(null, a) ? cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b) : b;
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, cljs.core.not_empty.call(null, b), null);
};
cljs.pprint.realize_parameter = function(a, b) {
  var c = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  var d = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  d = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null) : cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196)) ? cljs.pprint.next_arg.call(null, 
  b) : cljs.core._EQ_.call(null, d, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(b)), b], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null)], null), d], null);
};
cljs.pprint.realize_parameter_list = function(a, b) {
  b = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, b, a);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, a), b], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function(a) {
  if (cljs.core.integer_QMARK_.call(null, a)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null].join("");
    }
    var b = cljs.core.str, c = b.cljs$core$IFn$_invoke$arity$1;
    if (cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)) {
      var d = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
      d = cljs.core.truth_(d) ? d : ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
    } else {
      d = null;
    }
    return [c.call(b, d), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, a))].join("");
  }
  return null;
};
cljs.pprint.format_ascii = function(a, b, c, d) {
  c = cljs.pprint.next_arg.call(null, c);
  d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var e = cljs.pprint.format_simple_number.call(null, d);
  a = cljs.core.truth_(e) ? e : a.call(null, d);
  d = a.length;
  e = d + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(b);
  e = e >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? e : e + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - e - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(b);
  d = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e - d, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)));
  cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("")) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
  return c;
};
cljs.pprint.integral_QMARK_ = function(a) {
  return cljs.core.integer_QMARK_.call(null, a) ? !0 : cljs.pprint.float_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, a, Math.floor(a)) : !1;
};
cljs.pprint.remainders = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(c) {
    return 0 < c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, c, a), cljs.core.quot.call(null, c, a)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
  }, b)));
};
cljs.pprint.base_str = function(a, b) {
  return 0 === b ? "0" : cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(c) {
    return 10 > c ? cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + c) : cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (c - 10));
  }, cljs.pprint.remainders.call(null, a, b)));
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function(a, b) {
  return cljs.pprint.base_str.call(null, a, b);
};
cljs.pprint.group_by_STAR_ = function(a, b) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(c) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, a, c))), cljs.core.seq.call(null, cljs.core.drop.call(null, a, c))], null);
  }, cljs.core.reverse.call(null, b))));
};
cljs.pprint.format_integer = function(a, b, c, d) {
  c = cljs.pprint.next_arg.call(null, c);
  d = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  if (cljs.pprint.integral_QMARK_.call(null, d)) {
    var e = 0 > d, f = cljs.pprint.opt_base_str.call(null, a, e ? -d : d);
    a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b)) ? function() {
      var g = cljs.core.map.call(null, function(k) {
        return cljs.core.apply.call(null, cljs.core.str, k);
      }, cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(b), f)), h = cljs.core.repeat.call(null, cljs.core.count.call(null, g), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(b));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, h, g)));
    }() : f;
    a = e ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
    a = a.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b) - a.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(b)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : a;
    cljs.pprint.print.call(null, a);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "at", "at", 1476951349), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null)), null);
  }
  return c;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "), null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, "zeroth first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth fourteenth fifteenth sixteenth seventeenth eighteenth nineteenth".split(" "), null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twenty thirty forty fifty sixty seventy eighty ninety".split(" "), null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, "  twentieth thirtieth fortieth fiftieth sixtieth seventieth eightieth ninetieth".split(" "), null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, " thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion undecillion duodecillion tredecillion quattuordecillion quindecillion sexdecillion septendecillion octodecillion novemdecillion vigintillion".split(" "), null);
cljs.pprint.format_simple_cardinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100);
  a = cljs.core.rem.call(null, a, 100);
  var c = 0 < b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), " hundred"].join("") : null, d = cljs.core.str, e = d.cljs$core$IFn$_invoke$arity$1;
  if (0 < a) {
    if (20 > a) {
      var f = cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, a);
    } else {
      f = cljs.core.quot.call(null, a, 10);
      var g = cljs.core.rem.call(null, a, 10);
      f = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < f ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, f) : null), 0 < f && 0 < g ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < g ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, g) : null)].join("");
    }
  } else {
    f = null;
  }
  return [c, 0 < b && 0 < a ? " " : null, e.call(d, f)].join("");
};
cljs.pprint.add_english_scales = function(a, b) {
  var c = cljs.core.count.call(null, a), d = cljs.core.PersistentVector.EMPTY;
  --c;
  var e = cljs.core.first.call(null, a);
  for (a = cljs.core.next.call(null, a);;) {
    if (null == a) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", d))), cljs.core.empty_QMARK_.call(null, e) || cljs.core.empty_QMARK_.call(null, d) ? null : ", ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), !cljs.core.empty_QMARK_.call(null, e) && 0 < c + b ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, c + b))].join("") : null].join("");
    }
    d = cljs.core.empty_QMARK_.call(null, e) ? d : cljs.core.conj.call(null, d, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, c + b))].join(""));
    --c;
    e = cljs.core.first.call(null, a);
    a = cljs.core.next.call(null, a);
  }
};
cljs.pprint.format_cardinal_english = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.core._EQ_.call(null, 0, a) ? cljs.pprint.print.call(null, "zero") : (c = cljs.pprint.remainders.call(null, 1000, 0 > a ? -a : a), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers) ? (c = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, c), c = cljs.pprint.add_english_scales.call(null, c, 0), cljs.pprint.print.call(null, [0 > a ? "minus " : null, c].join(""))) : cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 
  5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null)), new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)));
  return b;
};
cljs.pprint.format_simple_ordinal = function(a) {
  var b = cljs.core.quot.call(null, a, 100);
  a = cljs.core.rem.call(null, a, 100);
  var c = 0 < b ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, b)), " hundred"].join("") : null, d = cljs.core.str, e = d.cljs$core$IFn$_invoke$arity$1;
  if (0 < a) {
    if (20 > a) {
      var f = cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, a);
    } else {
      f = cljs.core.quot.call(null, a, 10);
      var g = cljs.core.rem.call(null, a, 10);
      f = 0 < f && !(0 < g) ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, f) : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < f ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, f) : null), 0 < f && 0 < g ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < g ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, g) : null)].join("");
    }
  } else {
    f = 0 < b ? "th" : null;
  }
  return [c, 0 < b && 0 < a ? " " : null, e.call(d, f)].join("");
};
cljs.pprint.format_ordinal_english = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  if (cljs.core._EQ_.call(null, 0, b)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    if (c = cljs.pprint.remainders.call(null, 1000, 0 > b ? -b : b), cljs.core.count.call(null, c) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var d = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, c));
      d = cljs.pprint.add_english_scales.call(null, d, 1);
      c = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, c));
      cljs.pprint.print.call(null, [0 > b ? "minus " : null, cljs.core.empty_QMARK_.call(null, d) || cljs.core.empty_QMARK_.call(null, c) ? cljs.core.empty_QMARK_.call(null, d) ? c : [d, "th"].join("") : [d, ", ", c].join("")].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null)), c = cljs.core.rem.call(null, b, 100), b = 11 < c || 19 > c, c = cljs.core.rem.call(null, c, 10), cljs.pprint.print.call(null, 
      1 === c && b ? "st" : 2 === c && b ? "nd" : 3 === c && b ? "rd" : "th");
    }
  }
  return a;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IIII V VI VII VIII VIIII".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XXXX L LX LXX LXXX LXXXX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CCCC D DC DCC DCCC DCCCC".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "I II III IV V VI VII VIII IX".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "X XX XXX XL L LX LXX LXXX XC".split(" "), null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, "C CC CCC CD D DC DCC DCCC CM".split(" "), 
null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function(a, b, c, d) {
  b = cljs.pprint.next_arg.call(null, c);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  if ("number" === typeof c && 0 < c && 4000 > c) {
    var e = cljs.pprint.remainders.call(null, 10, c);
    c = cljs.core.PersistentVector.EMPTY;
    for (d = cljs.core.count.call(null, e) - 1;;) {
      if (cljs.core.empty_QMARK_.call(null, e)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, c));
        break;
      } else {
        var f = cljs.core.first.call(null, e);
        c = cljs.core._EQ_.call(null, 0, f) ? c : cljs.core.conj.call(null, c, cljs.core.nth.call(null, cljs.core.nth.call(null, a, d), f - 1));
        --d;
        e = cljs.core.next.call(null, e);
      }
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), !0], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return b;
};
cljs.pprint.format_old_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, a, b, c);
};
cljs.pprint.format_new_roman = function(a, b, c) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, a, b, c);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function(a, b, c) {
  a = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  c = cljs.pprint.char_code.call(null, b);
  b = c & 127;
  c &= 128;
  var d = cljs.core.get.call(null, cljs.pprint.special_chars, b);
  0 < c && cljs.pprint.print.call(null, "Meta-");
  cljs.pprint.print.call(null, cljs.core.truth_(d) ? d : 32 > b ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$.call(null, b + 64))].join("") : cljs.core._EQ_.call(null, b, 127) ? "Control-?" : cljs.core.char$.call(null, b));
  return a;
};
cljs.pprint.readable_character = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = cljs.core._EQ_;
  a = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(a);
  if (cljs.core.truth_(d.call(null, "o", a))) {
    cljs.pprint.cl_format.call(null, !0, "\\o~3,'0o", cljs.pprint.char_code.call(null, b));
  } else {
    if (cljs.core.truth_(d.call(null, "u", a))) {
      cljs.pprint.cl_format.call(null, !0, "\\u~4,'0x", cljs.pprint.char_code.call(null, b));
    } else {
      if (cljs.core.truth_(d.call(null, null, a))) {
        cljs.pprint.print_char.call(null, b);
      } else {
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
      }
    }
  }
  return c;
};
cljs.pprint.plain_character = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  cljs.pprint.print.call(null, a);
  return b;
};
cljs.pprint.abort_QMARK_ = function(a) {
  a = cljs.core.first.call(null, a);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), a) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), a);
};
cljs.pprint.execute_sub_format = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(d, e) {
    if (cljs.pprint.abort_QMARK_.call(null, e)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, e], null);
    }
    e = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(d), e);
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    var g = cljs.pprint.unzip_map.call(null, f);
    f = cljs.core.nth.call(null, g, 0, null);
    g = cljs.core.nth.call(null, g, 1, null);
    f = cljs.core.assoc.call(null, f, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), c);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(d), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, e, g], null))], null);
  }, b, a));
};
cljs.pprint.float_parts_base = function(a) {
  a = clojure.string.lower_case.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a));
  var b = a.indexOf("e"), c = a.indexOf(".");
  return 0 > b ? 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.str.cljs$core$IFn$_invoke$arity$1(a.length - 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, a, 0, c), cljs.core.subs.call(null, a, c + 1)].join(""), cljs.core.str.cljs$core$IFn$_invoke$arity$1(c - 1)], null) : 0 > c ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, 
  a, 0, b), cljs.core.subs.call(null, a, b + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, a, 0, 1), cljs.core.subs.call(null, a, 2, b)].join(""), cljs.core.subs.call(null, a, b + 1)], null);
};
cljs.pprint.float_parts = function(a) {
  a = cljs.pprint.float_parts_base.call(null, a);
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  var c = cljs.pprint.rtrim.call(null, b, "0");
  b = cljs.pprint.ltrim.call(null, c, "0");
  c = cljs.core.count.call(null, c) - cljs.core.count.call(null, b);
  a = 0 < cljs.core.count.call(null, a) && cljs.core._EQ_.call(null, cljs.core.nth.call(null, a, 0), "+") ? cljs.core.subs.call(null, a, 1) : a;
  return cljs.core.empty_QMARK_.call(null, b) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, parseInt(a, 10) - c], null);
};
cljs.pprint.inc_s = function(a) {
  for (var b = cljs.core.count.call(null, a) - 1, c = b | 0;;) {
    if (0 > c) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, b + 1, "0"));
    }
    if (cljs.core._EQ_.call(null, "9", a.charAt(c))) {
      --c;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, a, 0, c), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, a.charAt(c)) + 1), cljs.core.repeat.call(null, b - c, "0"));
    }
  }
};
cljs.pprint.round_str = function(a, b, c, d) {
  if (cljs.core.truth_(cljs.core.truth_(c) ? c : d)) {
    var e = cljs.core.count.call(null, a);
    d = cljs.core.truth_(d) ? 2 > d ? 2 : d : 0;
    cljs.core.truth_(c) ? c = b + c + 1 : 0 <= b ? (c = b + 1, --d, c = c > d ? c : d) : c = d + b;
    var f = cljs.core._EQ_.call(null, c, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), b + 1, 1, e + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, e], null);
    c = cljs.core.nth.call(null, f, 0, null);
    e = cljs.core.nth.call(null, f, 1, null);
    d = cljs.core.nth.call(null, f, 2, null);
    f = cljs.core.nth.call(null, f, 3, null);
    if (cljs.core.truth_(d)) {
      if (0 > d) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, !1], null);
      }
      if (f > d) {
        return a = cljs.core.nth.call(null, c, d), b = cljs.core.subs.call(null, c, 0, d), cljs.pprint.char_code.call(null, a) >= cljs.pprint.char_code.call(null, "5") ? (a = cljs.pprint.inc_s.call(null, b), b = cljs.core.count.call(null, a) > b.length, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b ? cljs.core.subs.call(null, a, 0, cljs.core.count.call(null, a) - 1) : a, e, b], null)) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [b, e, !1], null);
      }
    }
  }
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null);
};
cljs.pprint.expand_fixed = function(a, b, c) {
  b = 0 > b ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -b - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
  a = cljs.core.nth.call(null, b, 0, null);
  var d = cljs.core.nth.call(null, b, 1, null);
  b = cljs.core.count.call(null, a);
  c = cljs.core.truth_(c) ? d + c + 1 : d + 1;
  return b < c ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - b, "0")))].join("") : a;
};
cljs.pprint.insert_decimal = function(a, b) {
  if (0 > b) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("");
  }
  b += 1;
  return [cljs.core.subs.call(null, a, 0, b), ".", cljs.core.subs.call(null, a, b)].join("");
};
cljs.pprint.get_fixed = function(a, b, c) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, a, b, c), b);
};
cljs.pprint.insert_scaled_decimal = function(a, b) {
  return 0 > b ? [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join("") : [cljs.core.subs.call(null, a, 0, b), ".", cljs.core.subs.call(null, a, b)].join("");
};
cljs.pprint.convert_ratio = function(a) {
  return a;
};
cljs.pprint.fixed_float = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), e = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.pprint.next_arg.call(null, b);
  var f = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var g = 0 > f ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -f], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", f], null);
  c = cljs.core.nth.call(null, g, 0, null);
  g = cljs.core.nth.call(null, g, 1, null);
  g = cljs.pprint.convert_ratio.call(null, g);
  g = cljs.pprint.float_parts.call(null, g);
  var h = cljs.core.nth.call(null, g, 0, null), k = cljs.core.nth.call(null, g, 1, null) + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a);
  g = function() {
    var p = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(p) ? p : 0 > f;
  }();
  var l = cljs.core.not.call(null, e) && cljs.core.count.call(null, h) - 1 <= k, m = cljs.pprint.round_str.call(null, h, k, e, cljs.core.truth_(d) ? d - (cljs.core.truth_(g) ? 1 : 0) : null);
  h = cljs.core.nth.call(null, m, 0, null);
  k = cljs.core.nth.call(null, m, 1, null);
  m = cljs.core.nth.call(null, m, 2, null);
  h = cljs.pprint.get_fixed.call(null, h, cljs.core.truth_(m) ? k + 1 : k, e);
  e = cljs.core.truth_(cljs.core.truth_(d) ? cljs.core.truth_(e) ? 1 <= e && cljs.core._EQ_.call(null, h.charAt(0), "0") && cljs.core._EQ_.call(null, h.charAt(1), ".") && h.length > d - (cljs.core.truth_(g) ? 1 : 0) : e : d) ? cljs.core.subs.call(null, h, 1) : h;
  k = cljs.core._EQ_.call(null, cljs.core.first.call(null, e), ".");
  if (cljs.core.truth_(d)) {
    h = e.length;
    h = cljs.core.truth_(g) ? h + 1 : h;
    k = k && !(h >= d);
    l = l && !(h >= d);
    var n = k || l ? h + 1 : h;
    cljs.core.truth_(function() {
      var p = n > d;
      return p ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : p;
    }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d - n, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(g) ? 
    c : null), k ? "0" : null, e, l ? "0" : null].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(g) ? c : null), k ? "0" : null, e, l ? "0" : null].join(""));
  }
  return b;
};
cljs.pprint.exponential_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  var d = cljs.pprint.convert_ratio.call(null, c);
  c = cljs.pprint.float_parts.call(null, 0 > d ? -d : d);
  cljs.core.nth.call(null, c, 0, null);
  for (cljs.core.nth.call(null, c, 1, null);;) {
    var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a), l = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(a), m = function() {
      var D = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(D) ? D : "E";
    }();
    c = function() {
      var D = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      return cljs.core.truth_(D) ? D : 0 > d;
    }();
    var n = 0 >= l, p = f - (l - 1), r = cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(p));
    m = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), 0 > p ? "-" : "+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(k) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k - r.length, "0")) : null), r].join("");
    var u = m.length;
    p = cljs.core.count.call(null, e);
    e = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -l, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(h) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - (p - 1) - (0 > l ? -l : 0), "0")) : null)].join("");
    p = cljs.core.truth_(g) ? g - u : null;
    e = cljs.pprint.round_str.call(null, e, 0, cljs.core._EQ_.call(null, l, 0) ? h - 1 : 0 < l ? h : 0 > l ? h - 1 : null, cljs.core.truth_(p) ? p - (cljs.core.truth_(c) ? 1 : 0) : null);
    p = cljs.core.nth.call(null, e, 0, null);
    cljs.core.nth.call(null, e, 1, null);
    r = cljs.core.nth.call(null, e, 2, null);
    e = cljs.pprint.insert_scaled_decimal.call(null, p, l);
    h = cljs.core._EQ_.call(null, l, cljs.core.count.call(null, p)) && null == h;
    if (cljs.core.not.call(null, r)) {
      if (cljs.core.truth_(g)) {
        f = e.length + u;
        f = cljs.core.truth_(c) ? f + 1 : f;
        var z = (n = n && !cljs.core._EQ_.call(null, f, g)) ? f + 1 : f;
        f = h && z < g;
        cljs.core.truth_(function() {
          var D = z > g;
          D || (D = k, D = cljs.core.truth_(D) ? u - 2 > k : D);
          return cljs.core.truth_(D) ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a) : D;
        }()) ? cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a)))) : cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, g - z - (f ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.truth_(c) ? 
        0 > d ? "-" : "+" : null, n ? "0" : null, e, f ? "0" : null, m].join(""));
      } else {
        cljs.pprint.print.call(null, [cljs.core.truth_(c) ? 0 > d ? "-" : "+" : null, n ? "0" : null, e, h ? "0" : null, m].join(""));
      }
      break;
    } else {
      c = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, f + 1], null);
    }
  }
  return b;
};
cljs.pprint.general_float = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b), e = cljs.core.nth.call(null, d, 0, null);
  cljs.core.nth.call(null, d, 1, null);
  d = cljs.pprint.convert_ratio.call(null, e);
  e = cljs.pprint.float_parts.call(null, 0 > d ? -d : d);
  var f = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  var g = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), k = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(a);
  e = cljs.core._EQ_.call(null, d, 0.0) ? 0 : e + 1;
  d = cljs.core.truth_(k) ? k + 2 : 4;
  g = cljs.core.truth_(g) ? g - d : null;
  cljs.core.truth_(h) ? f = h : (f = cljs.core.count.call(null, f), h = 7 > e ? e : 7, f = f > h ? f : h);
  e = f - e;
  return 0 <= e && e <= f ? (a = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), g, new cljs.core.Keyword(null, "d", "d", 1972142424), e, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "padchar", "padchar", 
  2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)], null), b, c), cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d, " "))), a) : cljs.pprint.exponential_float.call(null, a, b, c);
};
cljs.pprint.dollar_float = function(a, b, c) {
  b = cljs.pprint.next_arg.call(null, b);
  var d = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  c = cljs.pprint.float_parts.call(null, Math.abs(d));
  var e = cljs.core.nth.call(null, c, 0, null), f = cljs.core.nth.call(null, c, 1, null), g = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(a), h = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a);
  c = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(a);
  var k = function() {
    var m = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(m) ? m : 0 > d;
  }(), l = cljs.pprint.round_str.call(null, e, f, g, null);
  e = cljs.core.nth.call(null, l, 0, null);
  f = cljs.core.nth.call(null, l, 1, null);
  l = cljs.core.nth.call(null, l, 2, null);
  g = cljs.pprint.get_fixed.call(null, e, cljs.core.truth_(l) ? f + 1 : f, g);
  h = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, h - g.indexOf("."), "0"))), g].join("");
  g = h.length + (cljs.core.truth_(k) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.truth_(function() {
    var m = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(m) ? k : m;
  }()) ? 0 > d ? "-" : "+" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c - g, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)))), cljs.core.truth_(function() {
    var m = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a));
    return m ? k : m;
  }()) ? 0 > d ? "-" : "+" : null, h].join(""));
  return b;
};
cljs.pprint.choice_conditional = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(a);
  c = cljs.core.truth_(c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null) : cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = 0 > b || b >= cljs.core.count.call(null, d) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) : cljs.core.nth.call(null, d, b);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.boolean_conditional = function(a, b, c) {
  c = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.core.truth_(b) ? cljs.core.second.call(null, d) : cljs.core.first.call(null, d);
  return cljs.core.truth_(b) ? cljs.pprint.execute_sub_format.call(null, b, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : c;
};
cljs.pprint.check_arg_conditional = function(a, b, c) {
  var d = cljs.pprint.next_arg.call(null, b);
  c = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var e = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  e = cljs.core.truth_(c) ? cljs.core.first.call(null, e) : null;
  return cljs.core.truth_(c) ? cljs.core.truth_(e) ? cljs.pprint.execute_sub_format.call(null, e, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : b : d;
};
cljs.pprint.iterate_sublist = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  d = cljs.core.empty_QMARK_.call(null, d) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  d = cljs.pprint.next_arg.call(null, d);
  var e = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var f = 0;
  e = cljs.pprint.init_navigator.call(null, e);
  for (var g = -1;;) {
    if (cljs.core.not.call(null, c) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(e), g) && 1 < f) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    }
    g = cljs.core;
    var h = g.truth_;
    var k = (k = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(e)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f)) ? k : cljs.core.truth_(c) ? f >= c : c;
    if (h.call(g, k)) {
      return d;
    }
    g = cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, g))) {
      return d;
    }
    f += 1;
    h = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(e);
    e = g;
    g = h;
  }
};
cljs.pprint.iterate_list_of_sublists = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a));
  d = cljs.core.empty_QMARK_.call(null, d) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  d = cljs.pprint.next_arg.call(null, d);
  var e = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  for (var f = 0;;) {
    var g = cljs.core, h = g.truth_;
    var k = (k = cljs.core.empty_QMARK_.call(null, e) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < f)) ? k : cljs.core.truth_(c) ? f >= c : c;
    if (h.call(g, k)) {
      return d;
    }
    g = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, e)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, e)));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, g))) {
      return d;
    }
    f += 1;
    e = cljs.core.next.call(null, e);
  }
};
cljs.pprint.iterate_main_list = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a)), e = cljs.core.empty_QMARK_.call(null, d) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, e, 0, null);
  d = 0;
  e = cljs.core.nth.call(null, e, 1, null);
  for (var f = -1;;) {
    if (cljs.core.not.call(null, c) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(e), f) && 1 < d) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    }
    f = cljs.core;
    var g = f.truth_;
    var h = (h = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(e)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < d)) ? h : cljs.core.truth_(c) ? d >= c : c;
    if (g.call(f, h)) {
      return e;
    }
    f = cljs.pprint.execute_sub_format.call(null, b, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, f))) {
      return cljs.core.second.call(null, f);
    }
    d += 1;
    g = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(e);
    e = f;
    f = g;
  }
};
cljs.pprint.iterate_main_sublists = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a)), e = cljs.core.empty_QMARK_.call(null, d) ? cljs.pprint.get_format_arg.call(null, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
  b = cljs.core.nth.call(null, e, 0, null);
  d = 0;
  for (e = cljs.core.nth.call(null, e, 1, null);;) {
    var f = cljs.core, g = f.truth_;
    var h = (h = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(e)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) || 0 < d)) ? h : cljs.core.truth_(c) ? d >= c : c;
    if (g.call(f, h)) {
      return e;
    }
    f = cljs.pprint.next_arg_or_nil.call(null, e);
    e = cljs.core.nth.call(null, f, 0, null);
    f = cljs.core.nth.call(null, f, 1, null);
    e = cljs.pprint.execute_sub_format.call(null, b, cljs.pprint.init_navigator.call(null, e), f);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, e))) {
      return f;
    }
    e = f;
    d += 1;
  }
};
cljs.pprint.logical_block_or_justify = function(a, b, c) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(a))) ? cljs.pprint.format_logical_block.call(null, a, b, c) : cljs.pprint.justify_clauses.call(null, a, b, c);
};
cljs.pprint.render_clauses = function(a, b, c) {
  for (var d = cljs.core.PersistentVector.EMPTY;;) {
    if (cljs.core.empty_QMARK_.call(null, a)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b], null);
    }
    var e = cljs.core.first.call(null, a);
    a: {
      var f = new goog.string.StringBuffer(), g = cljs.core._STAR_out_STAR_, h = new cljs.core.StringBufferWriter(f);
      cljs.core._STAR_out_STAR_ = h;
      try {
        var k = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, e, b, c), cljs.core.str.cljs$core$IFn$_invoke$arity$1(f)], null);
        break a;
      } finally {
        cljs.core._STAR_out_STAR_ = g;
      }
      k = void 0;
    }
    b = cljs.core.nth.call(null, k, 0, null);
    e = cljs.core.nth.call(null, k, 1, null);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, b))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, cljs.core.second.call(null, b)], null);
    }
    a = cljs.core.next.call(null, a);
    d = cljs.core.conj.call(null, d, e);
  }
};
cljs.pprint.justify_clauses = function(a, b, c) {
  var d = function() {
    var L = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(L) ? cljs.pprint.render_clauses.call(null, L, b, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)) : null;
  }();
  c = cljs.core.nth.call(null, d, 0, null);
  c = cljs.core.nth.call(null, c, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var e = cljs.core.truth_(d) ? d : b;
  d = function() {
    var L = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(L) ? cljs.pprint.realize_parameter_list.call(null, L, e) : null;
  }();
  var f = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.nth.call(null, d, 1, null);
  var g = cljs.core.truth_(d) ? d : e;
  d = function() {
    var L = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(L) ? L : 0;
  }();
  var h = function() {
    var L = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(f));
    return cljs.core.truth_(L) ? L : cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
  }(), k = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a);
  g = cljs.pprint.render_clauses.call(null, k, g, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a));
  var l = cljs.core.nth.call(null, g, 0, null);
  g = cljs.core.nth.call(null, g, 1, null);
  var m = function() {
    var L = cljs.core.count.call(null, l) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0);
    return 1 > L ? 1 : L;
  }();
  k = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, l));
  var n = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(a), p = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(a), r = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a), u = k + m * p;
  n = u <= n ? n : n + r * (1 + cljs.core.quot.call(null, u - n - 1, r));
  var z = n - k;
  k = function() {
    var L = cljs.core.quot.call(null, z, m);
    return p > L ? p : L;
  }();
  r = z - k * m;
  k = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, k, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a)));
  cljs.core.truth_(cljs.core.truth_(c) ? cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + d + n > h : c) && cljs.pprint.print.call(null, c);
  d = r;
  for (var D = l, H = function() {
    var L = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(L) ? L : cljs.core._EQ_.call(null, cljs.core.count.call(null, D), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a));
  }();;) {
    if (cljs.core.seq.call(null, D)) {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not.call(null, H) ? cljs.core.first.call(null, D) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var L = H;
        return cljs.core.truth_(L) ? L : (L = cljs.core.next.call(null, D)) ? L : (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
      }()) ? k : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(0 < d ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(a) : null)].join("")), --d, D = c = cljs.core.truth_(H) ? D : cljs.core.next.call(null, D), H = !1;
    } else {
      break;
    }
  }
  return g;
};
cljs.pprint.downcase_writer = function(a) {
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14834) {
    cljs.pprint.t_cljs$pprint14834 = function(b, c) {
      this.writer = b;
      this.meta14835 = c;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14834.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
      return new cljs.pprint.t_cljs$pprint14834(this.writer, c);
    }, cljs.pprint.t_cljs$pprint14834.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
      return this.meta14835;
    }, cljs.pprint.t_cljs$pprint14834.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
      return cljs.core._flush.call(null, this.writer);
    }, cljs.pprint.t_cljs$pprint14834.prototype.cljs$core$IWriter$_write$arity$2 = function(b, c) {
      b = cljs.core._EQ_;
      var d = cljs.core.type.call(null, c);
      if (cljs.core.truth_(b.call(null, String, d))) {
        return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, c));
      }
      if (cljs.core.truth_(b.call(null, Number, d))) {
        return cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
    }, cljs.pprint.t_cljs$pprint14834.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta14835", "meta14835", 1834044918, null)], null);
    }, cljs.pprint.t_cljs$pprint14834.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14834.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14834", cljs.pprint.t_cljs$pprint14834.cljs$lang$ctorPrWriter = function(b, c, d) {
      return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint14834");
    }, cljs.pprint.__GT_t_cljs$pprint14834 = function(b, c) {
      return new cljs.pprint.t_cljs$pprint14834(b, c);
    };
  }
  return new cljs.pprint.t_cljs$pprint14834(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function(a) {
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14840) {
    cljs.pprint.t_cljs$pprint14840 = function(b, c) {
      this.writer = b;
      this.meta14841 = c;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14840.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(b, c) {
      return new cljs.pprint.t_cljs$pprint14840(this.writer, c);
    }, cljs.pprint.t_cljs$pprint14840.prototype.cljs$core$IMeta$_meta$arity$1 = function(b) {
      return this.meta14841;
    }, cljs.pprint.t_cljs$pprint14840.prototype.cljs$core$IWriter$_flush$arity$1 = function(b) {
      return cljs.core._flush.call(null, this.writer);
    }, cljs.pprint.t_cljs$pprint14840.prototype.cljs$core$IWriter$_write$arity$2 = function(b, c) {
      b = cljs.core._EQ_;
      var d = cljs.core.type.call(null, c);
      if (cljs.core.truth_(b.call(null, String, d))) {
        return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, c));
      }
      if (cljs.core.truth_(b.call(null, Number, d))) {
        return cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)].join(""));
    }, cljs.pprint.t_cljs$pprint14840.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta14841", "meta14841", -294733386, null)], null);
    }, cljs.pprint.t_cljs$pprint14840.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14840.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14840", cljs.pprint.t_cljs$pprint14840.cljs$lang$ctorPrWriter = function(b, c, d) {
      return cljs.core._write.call(null, c, "cljs.pprint/t_cljs$pprint14840");
    }, cljs.pprint.__GT_t_cljs$pprint14840 = function(b, c) {
      return new cljs.pprint.t_cljs$pprint14840(b, c);
    };
  }
  return new cljs.pprint.t_cljs$pprint14840(a, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function(a, b) {
  var c = cljs.core.first.call(null, a);
  a = cljs.core.truth_(cljs.core.truth_(b) ? cljs.core.truth_(c) ? goog.string.isUnicodeChar(c) : c : b) ? [clojure.string.upper_case.call(null, c), cljs.core.subs.call(null, a, 1)].join("") : a;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(d) {
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
    var e = RegExp("\\W\\w", "g").exec(d);
    e = cljs.core.truth_(e) ? e.index + 1 : e;
    return cljs.core.truth_(e) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, d, 0, e), clojure.string.upper_case.call(null, cljs.core.nth.call(null, d, e))].join(""), cljs.core.subs.call(null, d, e + 1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, null], null);
  }, a)));
};
cljs.pprint.capitalize_word_writer = function(a) {
  var b = cljs.core.atom.call(null, !0);
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14846) {
    cljs.pprint.t_cljs$pprint14846 = function(c, d, e) {
      this.writer = c;
      this.last_was_whitespace_QMARK_ = d;
      this.meta14847 = e;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14846.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(c, d) {
      return new cljs.pprint.t_cljs$pprint14846(this.writer, this.last_was_whitespace_QMARK_, d);
    }, cljs.pprint.t_cljs$pprint14846.prototype.cljs$core$IMeta$_meta$arity$1 = function(c) {
      return this.meta14847;
    }, cljs.pprint.t_cljs$pprint14846.prototype.cljs$core$IWriter$_flush$arity$1 = function(c) {
      return cljs.core._flush.call(null, this.writer);
    }, cljs.pprint.t_cljs$pprint14846.prototype.cljs$core$IWriter$_write$arity$2 = function(c, d) {
      c = cljs.core._EQ_;
      var e = cljs.core.type.call(null, d);
      if (cljs.core.truth_(c.call(null, String, e))) {
        return cljs.core._write.call(null, this.writer, cljs.pprint.capitalize_string.call(null, d.toLowerCase(), cljs.core.deref.call(null, this.last_was_whitespace_QMARK_))), 0 < d.length ? cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, d, cljs.core.count.call(null, d) - 1))) : null;
      }
      if (cljs.core.truth_(c.call(null, Number, e))) {
        return d = cljs.core.char$.call(null, d), c = cljs.core.truth_(cljs.core.deref.call(null, this.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, d) : d, cljs.core._write.call(null, this.writer, c), cljs.core.reset_BANG_.call(null, this.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(d));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
    }, cljs.pprint.t_cljs$pprint14846.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta14847", "meta14847", -1479447499, null)], null);
    }, cljs.pprint.t_cljs$pprint14846.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14846.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14846", cljs.pprint.t_cljs$pprint14846.cljs$lang$ctorPrWriter = function(c, d, e) {
      return cljs.core._write.call(null, d, "cljs.pprint/t_cljs$pprint14846");
    }, cljs.pprint.__GT_t_cljs$pprint14846 = function(c, d, e) {
      return new cljs.pprint.t_cljs$pprint14846(c, d, e);
    };
  }
  return new cljs.pprint.t_cljs$pprint14846(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function(a) {
  var b = cljs.core.atom.call(null, !1);
  if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.t_cljs$pprint14852) {
    cljs.pprint.t_cljs$pprint14852 = function(c, d, e) {
      this.writer = c;
      this.capped = d;
      this.meta14853 = e;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    }, cljs.pprint.t_cljs$pprint14852.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(c, d) {
      return new cljs.pprint.t_cljs$pprint14852(this.writer, this.capped, d);
    }, cljs.pprint.t_cljs$pprint14852.prototype.cljs$core$IMeta$_meta$arity$1 = function(c) {
      return this.meta14853;
    }, cljs.pprint.t_cljs$pprint14852.prototype.cljs$core$IWriter$_flush$arity$1 = function(c) {
      return cljs.core._flush.call(null, this.writer);
    }, cljs.pprint.t_cljs$pprint14852.prototype.cljs$core$IWriter$_write$arity$2 = function(c, d) {
      c = cljs.core._EQ_;
      var e = cljs.core.type.call(null, d);
      if (cljs.core.truth_(c.call(null, String, e))) {
        return d = clojure.string.lower_case.call(null, d), cljs.core.not.call(null, cljs.core.deref.call(null, this.capped)) ? (c = RegExp("\\S", "g").exec(d), c = cljs.core.truth_(c) ? c.index : c, cljs.core.truth_(c) ? (cljs.core._write.call(null, this.writer, [cljs.core.subs.call(null, d, 0, c), clojure.string.upper_case.call(null, cljs.core.nth.call(null, d, c)), clojure.string.lower_case.call(null, cljs.core.subs.call(null, d, c + 1))].join("")), cljs.core.reset_BANG_.call(null, this.capped, 
        !0)) : cljs.core._write.call(null, this.writer, d)) : cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, d));
      }
      if (cljs.core.truth_(c.call(null, Number, e))) {
        return d = cljs.core.char$.call(null, d), cljs.core.not.call(null, cljs.core.deref.call(null, this.capped)) && goog.string.isUnicodeChar(d) ? (cljs.core.reset_BANG_.call(null, this.capped, !0), cljs.core._write.call(null, this.writer, clojure.string.upper_case.call(null, d))) : cljs.core._write.call(null, this.writer, clojure.string.lower_case.call(null, d));
      }
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
    }, cljs.pprint.t_cljs$pprint14852.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta14853", "meta14853", -2133560466, null)], null);
    }, cljs.pprint.t_cljs$pprint14852.cljs$lang$type = !0, cljs.pprint.t_cljs$pprint14852.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint14852", cljs.pprint.t_cljs$pprint14852.cljs$lang$ctorPrWriter = function(c, d, e) {
      return cljs.core._write.call(null, d, "cljs.pprint/t_cljs$pprint14852");
    }, cljs.pprint.__GT_t_cljs$pprint14852 = function(c, d, e) {
      return new cljs.pprint.t_cljs$pprint14852(c, d, e);
    };
  }
  return new cljs.pprint.t_cljs$pprint14852(a, b, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function(a, b, c, d) {
  d = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(b));
  var e = cljs.core._STAR_out_STAR_;
  a = a.call(null, cljs.core._STAR_out_STAR_);
  cljs.core._STAR_out_STAR_ = a;
  try {
    return cljs.pprint.execute_sub_format.call(null, d, c, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(b));
  } finally {
    cljs.core._STAR_out_STAR_ = e;
  }
};
cljs.pprint.get_pretty_writer = function(a) {
  return cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, a)) ? a : cljs.pprint.pretty_writer.call(null, a, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
};
cljs.pprint.fresh_line = function() {
  return (null != cljs.core._STAR_out_STAR_ ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ || (cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) ? cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, 
  (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))))) ? null : cljs.pprint.prn.call(null) : cljs.pprint.prn.call(null);
};
cljs.pprint.absolute_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  c = d < c ? c - d : cljs.core._EQ_.call(null, a, 0) ? 0 : a - cljs.core.rem.call(null, d - c, a);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.relative_tabulation = function(a, b, c) {
  c = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(a);
  a = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(a);
  var d = c + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  d = 0 < a ? cljs.core.rem.call(null, d, a) : 0;
  c += cljs.core._EQ_.call(null, 0, d) ? 0 : a - d;
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, " ")));
  return b;
};
cljs.pprint.format_logical_block = function(a, b, c) {
  var d = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(a), e = cljs.core.count.call(null, d);
  c = 1 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, d)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? "(" : null;
  var f = cljs.core.nth.call(null, d, 1 < e ? 1 : 0);
  d = 2 < e ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, d, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? ")" : null;
  e = cljs.pprint.next_arg.call(null, b);
  b = cljs.core.nth.call(null, e, 0, null);
  e = cljs.core.nth.call(null, e, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var g = cljs.pprint._STAR_current_level_STAR_, h = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d), cljs.pprint.execute_sub_format.call(null, f, cljs.pprint.init_navigator.call(null, b), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(a)), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = h, cljs.pprint._STAR_current_level_STAR_ = g;
    }
  }
  return e;
};
cljs.pprint.set_indent = function(a, b, c) {
  c = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, c, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(a));
  return b;
};
cljs.pprint.conditional_newline = function(a, b, c) {
  a = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "miser", "miser", 
  -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, a);
  return b;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays("ASDBOXRPCFEG$%\x26|~\nT*?()[;]{}\x3c\x3e^W_I".split(""), [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], 
null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), 
new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 
811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_integer.call(null, 10, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_integer.call(null, 2, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_integer.call(null, 8, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    return cljs.pprint.format_integer.call(null, 16, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(a))) ? function(c, d, e) {
    return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(c), c, d, e);
  } : cljs.core.truth_(function() {
    var c = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : c;
  }()) ? function(c, d, e) {
    return cljs.pprint.format_old_roman.call(null, c, d, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(c, d, e) {
    return cljs.pprint.format_new_roman.call(null, c, d, e);
  } : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? function(c, d, e) {
    return cljs.pprint.format_ordinal_english.call(null, c, d, e);
  } : function(c, d, e) {
    return cljs.pprint.format_cardinal_english.call(null, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    d = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.pprint.relative_reposition.call(null, d, -1) : d;
    c = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    e = cljs.pprint.next_arg.call(null, d);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, d, 1) ? cljs.core.first.call(null, c) : cljs.core.second.call(null, c));
    return e;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.pretty_character : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.readable_character : cljs.pprint.plain_character;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    c = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(c);
    for (e = 0;;) {
      if (e < c) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    c = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(c);
    0 < c && cljs.pprint.fresh_line.call(null);
    --c;
    for (e = 0;;) {
      if (e < c) {
        cljs.pprint.prn.call(null), e += 1;
      } else {
        break;
      }
    }
    return d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    c = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(c);
    for (e = 0;;) {
      if (e < c) {
        cljs.pprint.print.call(null, "\f"), e += 1;
      } else {
        break;
      }
    }
    return d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    c = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(c);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, c, "~")));
    return d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c)) && cljs.pprint.prn.call(null);
    return d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(c, d, e) {
    return cljs.pprint.relative_tabulation.call(null, c, d, e);
  } : function(c, d, e) {
    return cljs.pprint.absolute_tabulation.call(null, c, d, e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    e = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.pprint.absolute_reposition.call(null, d, e) : cljs.pprint.relative_reposition.call(null, d, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c)) ? -e : e);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? function(c, d, e) {
    e = cljs.pprint.get_format_arg.call(null, d);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return cljs.pprint.execute_sub_format.call(null, d, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(c));
  } : function(c, d, e) {
    e = cljs.pprint.get_format_arg.call(null, d);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    var f = cljs.pprint.next_arg.call(null, e);
    e = cljs.core.nth.call(null, f, 0, null);
    f = cljs.core.nth.call(null, f, 1, null);
    e = cljs.pprint.init_navigator.call(null, e);
    cljs.pprint.execute_sub_format.call(null, d, e, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(c));
    return f;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  var c = cljs.core.truth_(function() {
    var d = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(d) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : d;
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(d, e, f) {
    return cljs.pprint.modify_case.call(null, c, d, e, f);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), !0, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.boolean_conditional : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.check_arg_conditional : cljs.pprint.choice_conditional;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), !0], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, 
b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!1], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  b = cljs.core;
  var c = b.truth_;
  var d = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
  d = cljs.core.truth_(d) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a) : d;
  return c.call(b, d) ? cljs.pprint.iterate_main_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_list_of_sublists : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.iterate_main_list : cljs.pprint.iterate_sublist;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
!0, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return function(c, d, e) {
    e = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(c);
    var f = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(c), g = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(c), h = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    return cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.truth_(f) ? g : f : e) ? e <= f && f <= g ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, d], null) : d : cljs.core.truth_(cljs.core.truth_(e) ? f : e) ? cljs.core._EQ_.call(null, e, f) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, d], null) : d : cljs.core.truth_(e) ? cljs.core._EQ_.call(null, e, 0) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [h, d], null) : d : (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(c))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(d))) ? new cljs.core.PersistentVector(null, 
    2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, d], null) : d;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  if (cljs.core.truth_(function() {
    var d = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(d) ? d : (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a);
  }())) {
    var c = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(a)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), !0], null) : cljs.core.PersistentVector.EMPTY);
    return function(d, e, f) {
      e = cljs.pprint.next_arg.call(null, e);
      d = cljs.core.nth.call(null, e, 0, null);
      e = cljs.core.nth.call(null, e, 1, null);
      return cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, d, c)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), e], null) : e;
    };
  }
  return function(d, e, f) {
    e = cljs.pprint.next_arg.call(null, e);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return cljs.core.truth_(cljs.pprint.write_out.call(null, d)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), e], null) : e;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(a, b) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null), c = cljs.core.nth.call(null, a, 1, null), d = cljs.core.nth.call(null, a, 2, null);
  a = new RegExp(cljs.pprint.param_pattern.source, "g");
  var e = a.exec(b);
  return cljs.core.truth_(e) ? (d = cljs.core.first.call(null, e), b = cljs.core.subs.call(null, b, a.lastIndex), a = c + a.lastIndex, cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, b, 0)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, b, 1), a + 1, 
  !0], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, !1], null)], null)) : cljs.core.truth_(d) ? cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", c) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null)], null);
};
cljs.pprint.extract_params = function(a, b) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, !1], null));
};
cljs.pprint.translate_param = function(a) {
  var b = cljs.core.nth.call(null, a, 0, null);
  a = cljs.core.nth.call(null, a, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, b.length, 0) ? null : cljs.core._EQ_.call(null, b.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, b.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, b, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, b.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, b, 0)) ? cljs.core.nth.call(null, b, 1) : parseInt(b, 10), a], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function(a, b) {
  return cljs.pprint.consume.call(null, function(c) {
    var d = cljs.core.nth.call(null, c, 0, null), e = cljs.core.nth.call(null, c, 1, null);
    c = cljs.core.nth.call(null, c, 2, null);
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, e, c], null)], null);
    }
    var f = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, d));
    return cljs.core.truth_(f) ? cljs.core.contains_QMARK_.call(null, c, f) ? cljs.pprint.format_error.call(null, ['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, d)), '" appears more than once in a directive'].join(""), e) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, d, 1), e + 1, cljs.core.assoc.call(null, c, f, 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, e], null))], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, e, c], null)], null);
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function(a, b) {
  var c = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(a);
  cljs.core.truth_(function() {
    var d = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(c));
    return d ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b) : d;
  }()) && cljs.pprint.format_error.call(null, ['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1));
  cljs.core.truth_(function() {
    var d = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(c));
    return d ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : d;
  }()) && cljs.pprint.format_error.call(null, ['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1));
  return cljs.core.truth_(function() {
    var d = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(c));
    return d ? (d = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(d) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b) : d) : d;
  }()) ? cljs.pprint.format_error.call(null, ['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), '"'].join(""), function() {
    var d = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(b), 1), e = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(b), 1);
    return d < e ? d : e;
  }()) : null;
};
cljs.pprint.map_params = function(a, b, c, d) {
  cljs.pprint.check_flags.call(null, a, c);
  cljs.core.count.call(null, b) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.count.call(null, b), cljs.core.count.call(null, 
  (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a))), cljs.core.second.call(null, cljs.core.first.call(null, b)));
  cljs.core.doall.call(null, cljs.core.map.call(null, function(e, f) {
    var g = cljs.core.first.call(null, e);
    return null == g || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, g) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, f)), cljs.core.type.call(null, g)) ? null : cljs.pprint.format_error.call(null, ["Parameter ", cljs.core.name.call(null, cljs.core.first.call(null, f)), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(a)), 
    '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, g))].join(""), cljs.core.second.call(null, e));
  }, b, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    return function g(f) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var h = cljs.core.seq.call(null, f);
          if (h) {
            if (cljs.core.chunked_seq_QMARK_.call(null, h)) {
              var k = cljs.core.chunk_first.call(null, h), l = cljs.core.count.call(null, k), m = cljs.core.chunk_buffer.call(null, l);
              a: {
                for (var n = 0;;) {
                  if (n < l) {
                    var p = cljs.core._nth.call(null, k, n), r = cljs.core.nth.call(null, p, 0, null);
                    p = cljs.core.nth.call(null, p, 1, null);
                    p = cljs.core.nth.call(null, p, 0, null);
                    cljs.core.chunk_append.call(null, m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, d], null)], null));
                    n += 1;
                  } else {
                    k = !0;
                    break a;
                  }
                }
              }
              return k ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, m), g.call(null, cljs.core.chunk_rest.call(null, h))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, m), null);
            }
            k = cljs.core.first.call(null, h);
            m = cljs.core.nth.call(null, k, 0, null);
            k = cljs.core.nth.call(null, k, 1, null);
            k = cljs.core.nth.call(null, k, 0, null);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, d], null)], null), g.call(null, cljs.core.rest.call(null, h)));
          }
          return null;
        }
      }, null, null);
    }.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a));
  }())), cljs.core.reduce.call(null, function(e, f) {
    return cljs.core.apply.call(null, cljs.core.assoc, e, f);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(e) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, e, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)), b))), c);
};
cljs.pprint.compile_directive = function(a, b) {
  b = cljs.pprint.extract_params.call(null, a, b);
  a = cljs.core.nth.call(null, b, 0, null);
  var c = cljs.core.nth.call(null, b, 1, null);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  b = cljs.pprint.extract_flags.call(null, b, c);
  cljs.core.nth.call(null, b, 0, null);
  c = cljs.core.nth.call(null, b, 1, null);
  var d = cljs.core.nth.call(null, c, 0, null);
  b = cljs.core.nth.call(null, c, 1, null);
  var e = cljs.core.nth.call(null, c, 2, null), f = cljs.core.first.call(null, d);
  c = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, f));
  var g = cljs.core.truth_(c) ? cljs.pprint.map_params.call(null, c, cljs.core.map.call(null, cljs.pprint.translate_param, a), e, b) : null;
  cljs.core.not.call(null, f) && cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", b);
  cljs.core.not.call(null, c) && cljs.pprint.format_error.call(null, ['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), '" is undefined'].join(""), b);
  a = cljs.core.PersistentVector;
  f = cljs.core.PersistentVector.EMPTY_NODE;
  e = new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(c).call(null, g, b), c, g, b, null, null, null);
  d = cljs.core.subs.call(null, d, 1);
  b += 1;
  c = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(c)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(g)) ? cljs.pprint.prefix_count.call(null, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
  d = cljs.core.subs.call(null, d, c);
  b = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, b + c], null);
  return new a(null, 2, 5, f, [e, b], null);
};
cljs.pprint.compile_raw_string = function(a, b) {
  return new cljs.pprint.compiled_directive(function(c, d, e) {
    cljs.pprint.print.call(null, a);
    return d;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), a], null), b, null, null, null);
};
cljs.pprint.right_bracket = function(a) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.separator_QMARK_ = function(a) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
};
cljs.pprint.else_separator_QMARK_ = function(a) {
  var b = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)));
  return cljs.core.truth_(b) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a)) : b;
};
cljs.pprint.process_bracket = function(a, b) {
  var c = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), b);
  b = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(a), cljs.pprint.tuple_map.call(null, b, (new cljs.core.Keyword(null, "offset", 
  "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(a), null, null, null), c], null);
};
cljs.pprint.process_clause = function(a, b, c) {
  return cljs.pprint.consume.call(null, function(d) {
    if (cljs.core.empty_QMARK_.call(null, d)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", b);
    }
    var e = cljs.core.first.call(null, d);
    d = cljs.core.next.call(null, d);
    return cljs.core.truth_(cljs.pprint.right_bracket.call(null, e)) ? cljs.pprint.process_bracket.call(null, e, d) : cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(e))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(e), null, d], null)], null) : cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, e)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(e), d], null)], null) : cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, e)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, d], 
    null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, d], null);
  }, c);
};
cljs.pprint.collect_clauses = function(a, b, c) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(d) {
    var e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
    d = cljs.core.nth.call(null, d, 2, null);
    var g = cljs.pprint.process_clause.call(null, a, b, d);
    d = cljs.core.nth.call(null, g, 0, null);
    var h = cljs.core.nth.call(null, g, 1, null);
    g = cljs.core.nth.call(null, h, 0, null);
    var k = cljs.core.nth.call(null, h, 1, null), l = cljs.core.nth.call(null, h, 2, null);
    h = cljs.core.nth.call(null, h, 3, null);
    return cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, e, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(f) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", 
    "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), k])), h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "else", "else", -1508377146)) ? cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(e)) ? cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(e)) ? 
    cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', b) : cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null), new cljs.core.Keyword(null, "else-params", "else-params", -832171646), l], null)), !1, h], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, 
    cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null)], null)), !0, h], null)], null) : cljs.core._EQ_.call(null, g, new cljs.core.Keyword(null, "separator", "separator", -1628749125)) ? cljs.core.truth_(f) ? cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', 
    b) : cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [!0, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, e, new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [d], null)], null)), !1, h], null)], null) : null;
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), !1, c], null)));
};
cljs.pprint.process_nesting = function(a) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(b) {
    var c = cljs.core.first.call(null, b);
    b = cljs.core.next.call(null, b);
    var d = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(c));
    return cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(d)) ? cljs.pprint.process_bracket.call(null, c, b) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, b], null);
  }, a));
};
cljs.pprint.compile_format = function(a) {
  var b = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = a;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(c) {
      var d = cljs.core.nth.call(null, c, 0, null);
      c = cljs.core.nth.call(null, c, 1, null);
      if (cljs.core.empty_QMARK_.call(null, d)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null);
      }
      var e = d.indexOf("~");
      return 0 > e ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, d, c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", c + d.length], null)], null) : 0 === e ? cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, d, 1), c + 1) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, 
      d, 0, e), c), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, d, e), e + c], null)], null);
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = b;
  }
};
cljs.pprint.needs_pretty = function(a) {
  for (;;) {
    if (cljs.core.empty_QMARK_.call(null, a)) {
      return !1;
    }
    var b = cljs.core, c = b.truth_;
    var d = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))));
    cljs.core.truth_(d) || (d = cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))))), d = cljs.core.truth_(d) ? d : cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, 
    "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, a))))));
    if (c.call(b, d)) {
      return !0;
    }
    a = cljs.core.next.call(null, a);
  }
};
cljs.pprint.execute_format = function(a) {
  switch(arguments.length) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = new goog.string.StringBuffer(), e = cljs.core.not.call(null, a) || !0 === a ? new cljs.core.StringBufferWriter(d) : a, f = cljs.pprint.needs_pretty.call(null, b) && cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, e)) ? cljs.pprint.get_pretty_writer.call(null, e) : e, g = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = f;
  try {
    try {
      cljs.pprint.execute_format.call(null, b, c);
    } finally {
      e !== f && cljs.core._flush.call(null, f);
    }
    return cljs.core.not.call(null, a) ? cljs.core.str.cljs$core$IFn$_invoke$arity$1(d) : !0 === a ? cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(d)) : null;
  } finally {
    cljs.core._STAR_out_STAR_ = g;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  cljs.pprint.map_passing_context.call(null, function(c, d) {
    if (cljs.pprint.abort_QMARK_.call(null, d)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null);
    }
    d = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(c), d);
    var e = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    var f = cljs.pprint.unzip_map.call(null, e);
    e = cljs.core.nth.call(null, f, 0, null);
    f = cljs.core.nth.call(null, f, 1, null);
    e = cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), d);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, d, f], null))], null);
  }, b, a);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function(a, b, c) {
  return cljs.core._add_method.call(null, a, b, c);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function(a) {
  var b = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, a)), c = cljs.core, d = c.truth_;
  var e = cljs.core.truth_(b) ? cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, a)) : b;
  return d.call(c, e) ? (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, b), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a)), !0) : null;
};
cljs.pprint.pprint_simple_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function(a) {
  return cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a)) ? cljs.pprint.pprint_simple_list.call(null, a) : null;
};
cljs.pprint.pprint_vector = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var a = cljs.pprint.cached_compile.call(null, "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e");
  return function() {
    var b = function(d) {
      d = cljs.pprint.init_navigator.call(null, d);
      return cljs.pprint.execute_format.call(null, a, d);
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
}();
cljs.pprint.pprint_map = function(a) {
  var b = cljs.core.record_QMARK_.call(null, a) ? null : (new cljs.core.Var(function() {
    return cljs.core.lift_ns;
  }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [!0, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10543, 10543, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]))).call(null, a), c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = cljs.core.truth_(b) ? b : a;
  var d = cljs.core.truth_(c) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    c = cljs.pprint._STAR_current_level_STAR_;
    b = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, d, null, "}");
      d = 0;
      for (var e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, e)), cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), cljs.pprint._STAR_current_length_STAR_ = 0, cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
              }
            }
            if (cljs.core.next.call(null, e)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              a = d + 1;
              var h = cljs.core.next.call(null, e);
              d = a;
              e = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = b, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function(a) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, a));
};
cljs.pprint.pprint_set = function() {
  var a = cljs.pprint.cached_compile.call(null, "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e");
  return function() {
    var b = function(d) {
      d = cljs.pprint.init_navigator.call(null, d);
      return cljs.pprint.execute_format.call(null, a, d);
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function(a) {
  var b = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, a);
  b = cljs.core.truth_(b) ? cljs.pprint.type_map.call(null, b) : null;
  return cljs.core.truth_(b) ? b : a;
};
cljs.pprint.pprint_ideref = function(a) {
  var b = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, a).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(a)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, b, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(b.length - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      var e = cljs.pprint.write_out, f = e.call;
      var g = null != a ? a.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IPending$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, a);
      var h = g ? !cljs.core._realized_QMARK_.call(null, a) : g;
      f.call(e, null, h ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, a));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var a = cljs.pprint.cached_compile.call(null, "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e");
  return function() {
    var b = function(d) {
      d = cljs.pprint.init_navigator.call(null, d);
      return cljs.pprint.execute_format.call(null, a, d);
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
}();
cljs.pprint.type_dispatcher = function(a) {
  return a instanceof cljs.core.PersistentQueue ? new cljs.core.Keyword(null, "queue", "queue", 1455835879) : (null != a ? a.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IDeref$ || (a.cljs$lang$protocol_mask$partition0$ ? 0 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, a)) ? new cljs.core.Keyword(null, "deref", "deref", -145586795) : a instanceof cljs.core.Symbol ? 
  new cljs.core.Keyword(null, "symbol", "symbol", -1038572696) : cljs.core.seq_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "list", "list", 765357683) : cljs.core.map_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "map", "map", 1371690461) : cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "vector", "vector", 1902966158) : cljs.core.set_QMARK_.call(null, a) ? new cljs.core.Keyword(null, "set", "set", 304602554) : null == a ? null : new cljs.core.Keyword(null, "default", 
  "default", -1987822328);
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.simple_dispatch) {
  cljs.pprint.simple_dispatch = function() {
    var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
};
cljs.pprint.pprint_ns_reference = function(a) {
  if (cljs.core.sequential_QMARK_.call(null, a)) {
    var b = cljs.pprint.brackets.call(null, a), c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.seq.call(null, a), f = cljs.core.first.call(null, e), g = cljs.core.next.call(null, e);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var h = cljs.pprint._STAR_current_level_STAR_, k = cljs.pprint._STAR_current_length_STAR_, l = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_level_STAR_ = l;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, c, null, d);
        (function() {
          var V = cljs.pprint.cached_compile.call(null, "~w~:i");
          return function() {
            var q = function(v) {
              v = cljs.pprint.init_navigator.call(null, v);
              return cljs.pprint.execute_format.call(null, V, v);
            }, t = function(v) {
              var w = null;
              if (0 < arguments.length) {
                w = 0;
                for (var x = Array(arguments.length - 0); w < x.length;) {
                  x[w] = arguments[w + 0], ++w;
                }
                w = new cljs.core.IndexedSeq(x, 0, null);
              }
              return q.call(this, w);
            };
            t.cljs$lang$maxFixedArity = 0;
            t.cljs$lang$applyTo = function(v) {
              v = cljs.core.seq(v);
              return q(v);
            };
            t.cljs$core$IFn$_invoke$arity$variadic = q;
            return t;
          }();
        })().call(null, f);
        for (var m = g;;) {
          if (cljs.core.seq.call(null, m)) {
            (function() {
              var V = cljs.pprint.cached_compile.call(null, " ");
              return function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M) {
                return function() {
                  var N = function(Q) {
                    Q = cljs.pprint.init_navigator.call(null, Q);
                    return cljs.pprint.execute_format.call(null, v, Q);
                  }, O = function(Q) {
                    var R = null;
                    if (0 < arguments.length) {
                      R = 0;
                      for (var T = Array(arguments.length - 0); R < T.length;) {
                        T[R] = arguments[R + 0], ++R;
                      }
                      R = new cljs.core.IndexedSeq(T, 0, null);
                    }
                    return N.call(this, R);
                  };
                  O.cljs$lang$maxFixedArity = 0;
                  O.cljs$lang$applyTo = function(Q) {
                    Q = cljs.core.seq(Q);
                    return N(Q);
                  };
                  O.cljs$core$IFn$_invoke$arity$variadic = N;
                  return O;
                }();
              }(m, " ", V, h, k, l, 0, b, c, d, a, e, f, g, f, g);
            })().call(null);
            var n = cljs.core.first.call(null, m);
            if (cljs.core.sequential_QMARK_.call(null, n)) {
              var p = cljs.pprint.brackets.call(null, n), r = cljs.core.nth.call(null, p, 0, null), u = cljs.core.nth.call(null, p, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var z = cljs.pprint._STAR_current_level_STAR_, D = cljs.pprint._STAR_current_length_STAR_, H = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_level_STAR_ = H;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, r, null, u);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, n), 3) && cljs.core.second.call(null, n) instanceof cljs.core.Keyword) {
                    var L = n, P = cljs.core.nth.call(null, L, 0, null), S = cljs.core.nth.call(null, L, 1, null), U = cljs.core.nth.call(null, L, 2, null);
                    (function() {
                      var V = cljs.pprint.cached_compile.call(null, "~w ~w ");
                      return function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W, X, ca, ea, na, da, Y) {
                        return function() {
                          var fa = function(ba) {
                            ba = cljs.pprint.init_navigator.call(null, ba);
                            return cljs.pprint.execute_format.call(null, v, ba);
                          }, ha = function(ba) {
                            var Z = null;
                            if (0 < arguments.length) {
                              Z = 0;
                              for (var aa = Array(arguments.length - 0); Z < aa.length;) {
                                aa[Z] = arguments[Z + 0], ++Z;
                              }
                              Z = new cljs.core.IndexedSeq(aa, 0, null);
                            }
                            return fa.call(this, Z);
                          };
                          ha.cljs$lang$maxFixedArity = 0;
                          ha.cljs$lang$applyTo = function(ba) {
                            ba = cljs.core.seq(ba);
                            return fa(ba);
                          };
                          ha.cljs$core$IFn$_invoke$arity$variadic = fa;
                          return ha;
                        }();
                      }(m, "~w ~w ", V, L, P, S, U, z, D, H, 0, p, r, u, n, h, k, l, 0, b, c, d, a, e, f, g, f, g);
                    })().call(null, P, S);
                    cljs.core.sequential_QMARK_.call(null, U) ? function() {
                      var V = cljs.core.vector_QMARK_.call(null, U) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e", q = "string" === typeof V ? cljs.pprint.cached_compile.call(null, V) : V;
                      return function(t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W, X, ca, ea, na, da, Y, fa) {
                        return function() {
                          var ha = function(Z) {
                            Z = cljs.pprint.init_navigator.call(null, Z);
                            return cljs.pprint.execute_format.call(null, w, Z);
                          }, ba = function(Z) {
                            var aa = null;
                            if (0 < arguments.length) {
                              aa = 0;
                              for (var qa = Array(arguments.length - 0); aa < qa.length;) {
                                qa[aa] = arguments[aa + 0], ++aa;
                              }
                              aa = new cljs.core.IndexedSeq(qa, 0, null);
                            }
                            return ha.call(this, aa);
                          };
                          ba.cljs$lang$maxFixedArity = 0;
                          ba.cljs$lang$applyTo = function(Z) {
                            Z = cljs.core.seq(Z);
                            return ha(Z);
                          };
                          ba.cljs$core$IFn$_invoke$arity$variadic = ha;
                          return ba;
                        }();
                      }(m, V, q, L, P, S, U, z, D, H, 0, p, r, u, n, h, k, l, 0, b, c, d, a, e, f, g, f, g);
                    }().call(null, U) : cljs.pprint.write_out.call(null, U);
                  } else {
                    cljs.core.apply.call(null, function() {
                      var V = cljs.pprint.cached_compile.call(null, "~w ~:i~@{~w~^ ~:_~}");
                      return function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R, T, W, X, ca) {
                        return function() {
                          var ea = function(da) {
                            da = cljs.pprint.init_navigator.call(null, da);
                            return cljs.pprint.execute_format.call(null, v, da);
                          }, na = function(da) {
                            var Y = null;
                            if (0 < arguments.length) {
                              Y = 0;
                              for (var fa = Array(arguments.length - 0); Y < fa.length;) {
                                fa[Y] = arguments[Y + 0], ++Y;
                              }
                              Y = new cljs.core.IndexedSeq(fa, 0, null);
                            }
                            return ea.call(this, Y);
                          };
                          na.cljs$lang$maxFixedArity = 0;
                          na.cljs$lang$applyTo = function(da) {
                            da = cljs.core.seq(da);
                            return ea(da);
                          };
                          na.cljs$core$IFn$_invoke$arity$variadic = ea;
                          return na;
                        }();
                      }(m, "~w ~:i~@{~w~^ ~:_~}", V, z, D, H, 0, p, r, u, n, h, k, l, 0, b, c, d, a, e, f, g, f, g);
                    }(), n);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = D, cljs.pprint._STAR_current_level_STAR_ = z;
                }
              }
              cljs.core.next.call(null, m) && function() {
                var V = cljs.pprint.cached_compile.call(null, "~_");
                return function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N, O, Q, R) {
                  return function() {
                    var T = function(X) {
                      X = cljs.pprint.init_navigator.call(null, X);
                      return cljs.pprint.execute_format.call(null, v, X);
                    }, W = function(X) {
                      var ca = null;
                      if (0 < arguments.length) {
                        ca = 0;
                        for (var ea = Array(arguments.length - 0); ca < ea.length;) {
                          ea[ca] = arguments[ca + 0], ++ca;
                        }
                        ca = new cljs.core.IndexedSeq(ea, 0, null);
                      }
                      return T.call(this, ca);
                    };
                    W.cljs$lang$maxFixedArity = 0;
                    W.cljs$lang$applyTo = function(X) {
                      X = cljs.core.seq(X);
                      return T(X);
                    };
                    W.cljs$core$IFn$_invoke$arity$variadic = T;
                    return W;
                  }();
                }(m, "~_", V, p, r, u, n, h, k, l, 0, b, c, d, a, e, f, g, f, g);
              }().call(null);
            } else {
              cljs.pprint.write_out.call(null, n), cljs.core.next.call(null, m) && function() {
                var V = cljs.pprint.cached_compile.call(null, "~:_");
                return function(q, t, v, w, x, y, A, B, C, E, F, G, I, J, K, M, N) {
                  return function() {
                    var O = function(R) {
                      R = cljs.pprint.init_navigator.call(null, R);
                      return cljs.pprint.execute_format.call(null, v, R);
                    }, Q = function(R) {
                      var T = null;
                      if (0 < arguments.length) {
                        T = 0;
                        for (var W = Array(arguments.length - 0); T < W.length;) {
                          W[T] = arguments[T + 0], ++T;
                        }
                        T = new cljs.core.IndexedSeq(W, 0, null);
                      }
                      return O.call(this, T);
                    };
                    Q.cljs$lang$maxFixedArity = 0;
                    Q.cljs$lang$applyTo = function(R) {
                      R = cljs.core.seq(R);
                      return O(R);
                    };
                    Q.cljs$core$IFn$_invoke$arity$variadic = O;
                    return Q;
                  }();
                }(m, "~:_", V, n, h, k, l, 0, b, c, d, a, e, f, g, f, g);
              }().call(null);
            }
            m = cljs.core.next.call(null, m);
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = k, cljs.pprint._STAR_current_level_STAR_ = h;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_ns = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.seq.call(null, a);
    a = cljs.core.first.call(null, b);
    var c = cljs.core.next.call(null, b);
    b = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    var d = "string" === typeof cljs.core.first.call(null, c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, c), cljs.core.next.call(null, c)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, c], null);
    c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    d = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, d)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, d), cljs.core.next.call(null, d)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null);
    var e = cljs.core.nth.call(null, d, 0, null), f = cljs.core.nth.call(null, d, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      d = cljs.pprint._STAR_current_level_STAR_;
      var g = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var k = cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w");
          return function() {
            var l = function(n) {
              n = cljs.pprint.init_navigator.call(null, n);
              return cljs.pprint.execute_format.call(null, k, n);
            }, m = function(n) {
              var p = null;
              if (0 < arguments.length) {
                p = 0;
                for (var r = Array(arguments.length - 0); p < r.length;) {
                  r[p] = arguments[p + 0], ++p;
                }
                p = new cljs.core.IndexedSeq(r, 0, null);
              }
              return l.call(this, p);
            };
            m.cljs$lang$maxFixedArity = 0;
            m.cljs$lang$applyTo = function(n) {
              n = cljs.core.seq(n);
              return l(n);
            };
            m.cljs$core$IFn$_invoke$arity$variadic = l;
            return m;
          }();
        })().call(null, a, b);
        cljs.core.truth_(cljs.core.truth_(c) ? c : cljs.core.truth_(e) ? e : cljs.core.seq.call(null, f)) && function() {
          var k = cljs.pprint.cached_compile.call(null, "~@:_");
          return function() {
            var l = function(n) {
              n = cljs.pprint.init_navigator.call(null, n);
              return cljs.pprint.execute_format.call(null, k, n);
            }, m = function(n) {
              var p = null;
              if (0 < arguments.length) {
                p = 0;
                for (var r = Array(arguments.length - 0); p < r.length;) {
                  r[p] = arguments[p + 0], ++p;
                }
                p = new cljs.core.IndexedSeq(r, 0, null);
              }
              return l.call(this, p);
            };
            m.cljs$lang$maxFixedArity = 0;
            m.cljs$lang$applyTo = function(n) {
              n = cljs.core.seq(n);
              return l(n);
            };
            m.cljs$core$IFn$_invoke$arity$variadic = l;
            return m;
          }();
        }().call(null);
        cljs.core.truth_(c) && cljs.pprint.cl_format.call(null, !0, '"~a"~:[~;~:@_~]', c, cljs.core.truth_(e) ? e : cljs.core.seq.call(null, f));
        cljs.core.truth_(e) && function() {
          var k = cljs.pprint.cached_compile.call(null, "~w~:[~;~:@_~]");
          return function() {
            var l = function(n) {
              n = cljs.pprint.init_navigator.call(null, n);
              return cljs.pprint.execute_format.call(null, k, n);
            }, m = function(n) {
              var p = null;
              if (0 < arguments.length) {
                p = 0;
                for (var r = Array(arguments.length - 0); p < r.length;) {
                  r[p] = arguments[p + 0], ++p;
                }
                p = new cljs.core.IndexedSeq(r, 0, null);
              }
              return l.call(this, p);
            };
            m.cljs$lang$maxFixedArity = 0;
            m.cljs$lang$applyTo = function(n) {
              n = cljs.core.seq(n);
              return l(n);
            };
            m.cljs$core$IFn$_invoke$arity$variadic = l;
            return m;
          }();
        }().call(null, e, cljs.core.seq.call(null, f));
        for (a = f;;) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, a));
          var h = cljs.core.next.call(null, a);
          if (h) {
            b = h, cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697)), a = b;
          } else {
            break;
          }
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = d;
      }
    }
    return null;
  }
  return cljs.pprint.write_out.call(null, a);
};
cljs.pprint.pprint_hold_first = function() {
  var a = cljs.pprint.cached_compile.call(null, "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e");
  return function() {
    var b = function(d) {
      d = cljs.pprint.init_navigator.call(null, d);
      return cljs.pprint.execute_format.call(null, a, d);
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
}();
cljs.pprint.single_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? (cljs.core.truth_(b) ? function() {
    var c = cljs.pprint.cached_compile.call(null, " ~_");
    return function() {
      var d = function(f) {
        f = cljs.pprint.init_navigator.call(null, f);
        return cljs.pprint.execute_format.call(null, c, f);
      }, e = function(f) {
        var g = null;
        if (0 < arguments.length) {
          g = 0;
          for (var h = Array(arguments.length - 0); g < h.length;) {
            h[g] = arguments[g + 0], ++g;
          }
          g = new cljs.core.IndexedSeq(h, 0, null);
        }
        return d.call(this, g);
      };
      e.cljs$lang$maxFixedArity = 0;
      e.cljs$lang$applyTo = function(f) {
        f = cljs.core.seq(f);
        return d(f);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
  }().call(null) : function() {
    var c = cljs.pprint.cached_compile.call(null, " ~@_");
    return function() {
      var d = function(f) {
        f = cljs.pprint.init_navigator.call(null, f);
        return cljs.pprint.execute_format.call(null, c, f);
      }, e = function(f) {
        var g = null;
        if (0 < arguments.length) {
          g = 0;
          for (var h = Array(arguments.length - 0); g < h.length;) {
            h[g] = arguments[g + 0], ++g;
          }
          g = new cljs.core.IndexedSeq(h, 0, null);
        }
        return d.call(this, g);
      };
      e.cljs$lang$maxFixedArity = 0;
      e.cljs$lang$applyTo = function(f) {
        f = cljs.core.seq(f);
        return d(f);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
  }().call(null), function() {
    var c = cljs.pprint.cached_compile.call(null, "~{~w~^ ~_~}");
    return function() {
      var d = function(f) {
        f = cljs.pprint.init_navigator.call(null, f);
        return cljs.pprint.execute_format.call(null, c, f);
      }, e = function(f) {
        var g = null;
        if (0 < arguments.length) {
          g = 0;
          for (var h = Array(arguments.length - 0); g < h.length;) {
            h[g] = arguments[g + 0], ++g;
          }
          g = new cljs.core.IndexedSeq(h, 0, null);
        }
        return d.call(this, g);
      };
      e.cljs$lang$maxFixedArity = 0;
      e.cljs$lang$applyTo = function(f) {
        f = cljs.core.seq(f);
        return d(f);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
  }().call(null, a)) : null;
};
cljs.pprint.multi_defn = function(a, b) {
  return cljs.core.seq.call(null, a) ? function() {
    var c = cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}");
    return function() {
      var d = function(f) {
        f = cljs.pprint.init_navigator.call(null, f);
        return cljs.pprint.execute_format.call(null, c, f);
      }, e = function(f) {
        var g = null;
        if (0 < arguments.length) {
          g = 0;
          for (var h = Array(arguments.length - 0); g < h.length;) {
            h[g] = arguments[g + 0], ++g;
          }
          g = new cljs.core.IndexedSeq(h, 0, null);
        }
        return d.call(this, g);
      };
      e.cljs$lang$maxFixedArity = 0;
      e.cljs$lang$applyTo = function(f) {
        f = cljs.core.seq(f);
        return d(f);
      };
      e.cljs$core$IFn$_invoke$arity$variadic = d;
      return e;
    }();
  }().call(null, a) : null;
};
cljs.pprint.pprint_defn = function(a) {
  if (cljs.core.next.call(null, a)) {
    var b = cljs.core.seq.call(null, a);
    a = cljs.core.first.call(null, b);
    var c = cljs.core.next.call(null, b);
    b = cljs.core.first.call(null, c);
    c = cljs.core.next.call(null, c);
    var d = "string" === typeof cljs.core.first.call(null, c) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, c), cljs.core.next.call(null, c)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, c], null);
    c = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    var e = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, d)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, d), cljs.core.next.call(null, d)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, d], null);
    d = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), function() {
          var h = cljs.pprint.cached_compile.call(null, "~w ~1I~@_~w");
          return function() {
            var k = function(m) {
              m = cljs.pprint.init_navigator.call(null, m);
              return cljs.pprint.execute_format.call(null, h, m);
            }, l = function(m) {
              var n = null;
              if (0 < arguments.length) {
                n = 0;
                for (var p = Array(arguments.length - 0); n < p.length;) {
                  p[n] = arguments[n + 0], ++n;
                }
                n = new cljs.core.IndexedSeq(p, 0, null);
              }
              return k.call(this, n);
            };
            l.cljs$lang$maxFixedArity = 0;
            l.cljs$lang$applyTo = function(m) {
              m = cljs.core.seq(m);
              return k(m);
            };
            l.cljs$core$IFn$_invoke$arity$variadic = k;
            return l;
          }();
        }().call(null, a, b), cljs.core.truth_(c) && function() {
          var h = cljs.pprint.cached_compile.call(null, " ~_~w");
          return function() {
            var k = function(m) {
              m = cljs.pprint.init_navigator.call(null, m);
              return cljs.pprint.execute_format.call(null, h, m);
            }, l = function(m) {
              var n = null;
              if (0 < arguments.length) {
                n = 0;
                for (var p = Array(arguments.length - 0); n < p.length;) {
                  p[n] = arguments[n + 0], ++n;
                }
                n = new cljs.core.IndexedSeq(p, 0, null);
              }
              return k.call(this, n);
            };
            l.cljs$lang$maxFixedArity = 0;
            l.cljs$lang$applyTo = function(m) {
              m = cljs.core.seq(m);
              return k(m);
            };
            l.cljs$core$IFn$_invoke$arity$variadic = k;
            return l;
          }();
        }().call(null, c), cljs.core.truth_(d) && function() {
          var h = cljs.pprint.cached_compile.call(null, " ~_~w");
          return function() {
            var k = function(m) {
              m = cljs.pprint.init_navigator.call(null, m);
              return cljs.pprint.execute_format.call(null, h, m);
            }, l = function(m) {
              var n = null;
              if (0 < arguments.length) {
                n = 0;
                for (var p = Array(arguments.length - 0); n < p.length;) {
                  p[n] = arguments[n + 0], ++n;
                }
                n = new cljs.core.IndexedSeq(p, 0, null);
              }
              return k.call(this, n);
            };
            l.cljs$lang$maxFixedArity = 0;
            l.cljs$lang$applyTo = function(m) {
              m = cljs.core.seq(m);
              return k(m);
            };
            l.cljs$core$IFn$_invoke$arity$variadic = k;
            return l;
          }();
        }().call(null, d), cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, e)) ? cljs.pprint.single_defn.call(null, e, cljs.core.truth_(c) ? c : d) : cljs.pprint.multi_defn.call(null, e, cljs.core.truth_(c) ? c : d), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint.pprint_binding_form = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      for (var d = 0;;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, a)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var e = cljs.pprint._STAR_current_level_STAR_, f = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ += 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, a)), cljs.core.next.call(null, a) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, a))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = f, cljs.pprint._STAR_current_level_STAR_ = e;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, a))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var g = d + 1, h = cljs.core.next.call(null, cljs.core.rest.call(null, a));
              d = g;
              a = h;
              continue;
            }
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function(a) {
  var b = cljs.core.first.call(null, a);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var c = cljs.pprint._STAR_current_level_STAR_, d = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")"), cljs.core.next.call(null, a) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, a)) ? (function() {
        var e = cljs.pprint.cached_compile.call(null, "~w ~1I~@_");
        return function() {
          var f = function(h) {
            h = cljs.pprint.init_navigator.call(null, h);
            return cljs.pprint.execute_format.call(null, e, h);
          }, g = function(h) {
            var k = null;
            if (0 < arguments.length) {
              k = 0;
              for (var l = Array(arguments.length - 0); k < l.length;) {
                l[k] = arguments[k + 0], ++k;
              }
              k = new cljs.core.IndexedSeq(l, 0, null);
            }
            return f.call(this, k);
          };
          g.cljs$lang$maxFixedArity = 0;
          g.cljs$lang$applyTo = function(h) {
            h = cljs.core.seq(h);
            return f(h);
          };
          g.cljs$core$IFn$_invoke$arity$variadic = f;
          return g;
        }();
      }().call(null, b), cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, a)), function() {
        var e = cljs.pprint.cached_compile.call(null, " ~_~{~w~^ ~_~}");
        return function() {
          var f = function(h) {
            h = cljs.pprint.init_navigator.call(null, h);
            return cljs.pprint.execute_format.call(null, e, h);
          }, g = function(h) {
            var k = null;
            if (0 < arguments.length) {
              k = 0;
              for (var l = Array(arguments.length - 0); k < l.length;) {
                l[k] = arguments[k + 0], ++k;
              }
              k = new cljs.core.IndexedSeq(l, 0, null);
            }
            return f.call(this, k);
          };
          g.cljs$lang$maxFixedArity = 0;
          g.cljs$lang$applyTo = function(h) {
            h = cljs.core.seq(h);
            return f(h);
          };
          g.cljs$core$IFn$_invoke$arity$variadic = f;
          return g;
        }();
      }().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, a)))) : cljs.pprint.pprint_simple_code_list.call(null, a), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = d, cljs.pprint._STAR_current_level_STAR_ = c;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var a = cljs.pprint.cached_compile.call(null, "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e");
  return function() {
    var b = function(d) {
      d = cljs.pprint.init_navigator.call(null, d);
      return cljs.pprint.execute_format.call(null, a, d);
    }, c = function(d) {
      var e = null;
      if (0 < arguments.length) {
        e = 0;
        for (var f = Array(arguments.length - 0); e < f.length;) {
          f[e] = arguments[e + 0], ++e;
        }
        e = new cljs.core.IndexedSeq(f, 0, null);
      }
      return b.call(this, e);
    };
    c.cljs$lang$maxFixedArity = 0;
    c.cljs$lang$applyTo = function(d) {
      d = cljs.core.seq(d);
      return b(d);
    };
    c.cljs$core$IFn$_invoke$arity$variadic = b;
    return c;
  }();
}();
cljs.pprint.pprint_cond = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, a));
      if (cljs.core.next.call(null, a)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        for (var d = 0, e = cljs.core.next.call(null, a);;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e));
                d = a;
                e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function(a) {
  if (3 < cljs.core.count.call(null, a)) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ += 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var k = cljs.pprint.cached_compile.call(null, "~w ~@_~w ~@_~w ~_");
          return function() {
            var l = function(n) {
              n = cljs.pprint.init_navigator.call(null, n);
              return cljs.pprint.execute_format.call(null, k, n);
            }, m = function(n) {
              var p = null;
              if (0 < arguments.length) {
                p = 0;
                for (var r = Array(arguments.length - 0); p < r.length;) {
                  r[p] = arguments[p + 0], ++p;
                }
                p = new cljs.core.IndexedSeq(r, 0, null);
              }
              return l.call(this, p);
            };
            m.cljs$lang$maxFixedArity = 0;
            m.cljs$lang$applyTo = function(n) {
              n = cljs.core.seq(n);
              return l(n);
            };
            m.cljs$core$IFn$_invoke$arity$variadic = l;
            return m;
          }();
        }(), a);
        for (var d = 0, e = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, a));;) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
            if (e) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var f = cljs.pprint._STAR_current_level_STAR_, g = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ += 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null), cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e) && (cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " "), cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186)), cljs.pprint.write_out.call(null, cljs.core.second.call(null, e))), cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = g, cljs.pprint._STAR_current_level_STAR_ = f;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, e))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                a = d + 1;
                var h = cljs.core.next.call(null, cljs.core.rest.call(null, e));
                d = a;
                e = h;
                continue;
              }
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
      }
    }
    return null;
  }
  return cljs.pprint.pprint_simple_code_list.call(null, a);
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function(a) {
  var b = cljs.core.second.call(null, a), c = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, a)));
  if (cljs.core.vector_QMARK_.call(null, b)) {
    a = cljs.pprint._STAR_symbol_map_STAR_;
    b = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, b), "%"]) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(d, e) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join("")], null);
    }, b, cljs.core.range.call(null, 1, cljs.core.count.call(null, b) + 1)));
    cljs.pprint._STAR_symbol_map_STAR_ = b;
    try {
      return function() {
        var d = cljs.pprint.cached_compile.call(null, "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e");
        return function() {
          var e = function(g) {
            g = cljs.pprint.init_navigator.call(null, g);
            return cljs.pprint.execute_format.call(null, d, g);
          }, f = function(g) {
            var h = null;
            if (0 < arguments.length) {
              h = 0;
              for (var k = Array(arguments.length - 0); h < k.length;) {
                k[h] = arguments[h + 0], ++h;
              }
              h = new cljs.core.IndexedSeq(k, 0, null);
            }
            return e.call(this, h);
          };
          f.cljs$lang$maxFixedArity = 0;
          f.cljs$lang$applyTo = function(g) {
            g = cljs.core.seq(g);
            return e(g);
          };
          f.cljs$core$IFn$_invoke$arity$variadic = e;
          return f;
        }();
      }().call(null, c);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = a;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, a);
  }
};
cljs.pprint.pprint_simple_code_list = function(a) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var b = cljs.pprint._STAR_current_level_STAR_, c = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ += 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      for (var d = 0, e = cljs.core.seq.call(null, a);;) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || d < cljs.core._STAR_print_length_STAR_) {
          if (e && (cljs.pprint.write_out.call(null, cljs.core.first.call(null, e)), cljs.core.next.call(null, e))) {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            a = d + 1;
            var f = cljs.core.next.call(null, e);
            d = a;
            e = f;
            continue;
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = c, cljs.pprint._STAR_current_level_STAR_ = b;
    }
  }
  return null;
};
cljs.pprint.two_forms = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    return function d(c) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, c);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [l, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, l))), cljs.core.second.call(null, l)], null)], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            h = cljs.core.first.call(null, e);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, h))), cljs.core.second.call(null, h)], null)], null), d.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()));
};
cljs.pprint.add_core_ns = function(a) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(b) {
    var c = cljs.core.nth.call(null, b, 0, null), d = cljs.core.nth.call(null, b, 1, null), e = cljs.core.not, f = e.call;
    var g = cljs.core.namespace.call(null, c);
    g = cljs.core.truth_(g) ? g : cljs.core.special_symbol_QMARK_.call(null, c);
    return f.call(e, null, g) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, "clojure.core", cljs.core.name.call(null, c)), d], null) : b;
  }, a));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function(a) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, a))) {
    var b = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, a));
    return cljs.core.truth_(b) ? b.call(null, a) : cljs.pprint.pprint_simple_code_list.call(null, a);
  }
  return null;
};
cljs.pprint.pprint_code_symbol = function(a) {
  var b = a.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  return cljs.core.truth_(b) ? cljs.pprint.print.call(null, b) : cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint.print.call(null, cljs.core.name.call(null, a)) : cljs.pprint.pr.call(null, a);
};
if ("undefined" === typeof cljs || "undefined" === typeof cljs.pprint || "undefined" === typeof cljs.pprint.code_dispatch) {
  cljs.pprint.code_dispatch = function() {
    var a = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), b = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), c = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), d = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY), e = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), e, a, b, c, d);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function(a, b) {
  a -= cljs.core.count.call(null, b);
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, 0 > a ? 0 : a, " ")), b);
};
cljs.pprint.print_table = function(a) {
  switch(arguments.length) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  if (cljs.core.seq.call(null, b)) {
    var c = cljs.core.map.call(null, function(l) {
      return cljs.core.apply.call(null, cljs.core.max, cljs.core.str.cljs$core$IFn$_invoke$arity$1(l).length, cljs.core.map.call(null, function(m) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, m, l)).length;
      }, b));
    }, a), d = cljs.core.map.call(null, function(l) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, l, "-"));
    }, c), e = function(l, m, n, p) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(l), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, m, function() {
        return function z(u) {
          return new cljs.core.LazySeq(null, function() {
            for (;;) {
              var D = cljs.core.seq.call(null, u);
              if (D) {
                if (cljs.core.chunked_seq_QMARK_.call(null, D)) {
                  var H = cljs.core.chunk_first.call(null, D), L = cljs.core.count.call(null, H), P = cljs.core.chunk_buffer.call(null, L);
                  a: {
                    for (var S = 0;;) {
                      if (S < L) {
                        var U = cljs.core._nth.call(null, H, S), V = cljs.core.nth.call(null, U, 0, null);
                        U = cljs.core.nth.call(null, U, 1, null);
                        cljs.core.chunk_append.call(null, P, cljs.pprint.add_padding.call(null, U, cljs.core.str.cljs$core$IFn$_invoke$arity$1(V)));
                        S += 1;
                      } else {
                        H = !0;
                        break a;
                      }
                    }
                  }
                  return H ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, P), z.call(null, cljs.core.chunk_rest.call(null, D))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, P), null);
                }
                H = cljs.core.first.call(null, D);
                P = cljs.core.nth.call(null, H, 0, null);
                H = cljs.core.nth.call(null, H, 1, null);
                return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, H, cljs.core.str.cljs$core$IFn$_invoke$arity$1(P)), z.call(null, cljs.core.rest.call(null, D)));
              }
              return null;
            }
          }, null, null);
        }.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(u) {
          return cljs.core.get.call(null, p, u);
        }, a), c));
      }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join("");
    };
    cljs.core.println.call(null);
    cljs.core.println.call(null, e.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, a, a)));
    cljs.core.println.call(null, e.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, a, d)));
    d = cljs.core.seq.call(null, b);
    for (var f = null, g = 0, h = 0;;) {
      if (h < g) {
        var k = cljs.core._nth.call(null, f, h);
        cljs.core.println.call(null, e.call(null, "| ", " | ", " |", k));
        h += 1;
      } else {
        if (d = cljs.core.seq.call(null, d)) {
          f = d, cljs.core.chunked_seq_QMARK_.call(null, f) ? (d = cljs.core.chunk_first.call(null, f), g = cljs.core.chunk_rest.call(null, f), f = d, k = cljs.core.count.call(null, d), d = g, g = k) : (k = cljs.core.first.call(null, f), cljs.core.println.call(null, e.call(null, "| ", " | ", " |", k)), d = cljs.core.next.call(null, f), f = null, g = 0), h = 0;
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(a) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, a)), a);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
portfolio.code = {};
portfolio.code.ICodeString = function() {
};
var portfolio$code$ICodeString$format_code$dyn_15813 = function(a) {
  var b = portfolio.code.format_code[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = portfolio.code.format_code._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "ICodeString.format-code", a);
};
portfolio.code.format_code = function(a) {
  var b = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return b ? b.call(null, a) : null != a && null != a.portfolio$code$ICodeString$format_code$arity$1 ? a.portfolio$code$ICodeString$format_code$arity$1(a) : portfolio$code$ICodeString$format_code$dyn_15813.call(null, a);
};
portfolio.code.ICodeString._ = !0;
portfolio.code.format_code._ = function(a) {
  return a;
};
portfolio.code.blank_QMARK_ = function(a) {
  return null == a || cljs.core.coll_QMARK_.call(null, a) && cljs.core.empty_QMARK_.call(null, a) || "string" === typeof a && cljs.core.empty_QMARK_.call(null, a);
};
portfolio.code.code_str = function(a) {
  if (portfolio.code.blank_QMARK_.call(null, a)) {
    return null;
  }
  var b = new goog.string.StringBuffer(), c = cljs.core._STAR_print_newline_STAR_, d = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = !0;
  cljs.core._STAR_print_fn_STAR_ = function(e) {
    return b.append(e);
  };
  try {
    cljs.pprint.pprint.call(null, clojure.walk.postwalk.call(null, portfolio.code.format_code, a));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = d, cljs.core._STAR_print_newline_STAR_ = c;
  }
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(b);
};
portfolio.router = {};
portfolio.router.parse_qs_val = function(a) {
  a = decodeURIComponent(a);
  return cljs.core.truth_(cljs.core.re_find.call(null, /^\d+$/, a)) ? parseInt(a, 10) : cljs.core.truth_(cljs.core.re_find.call(null, /^\d+\.\d+$/, a)) ? parseFloat(a) : cljs.core._EQ_.call(null, "true", a) ? !0 : cljs.core._EQ_.call(null, "false", a) ? !1 : a;
};
portfolio.router.parse_key = function(a) {
  return cljs.core.truth_(cljs.core.re_find.call(null, /__/, a)) ? cljs.core.mapv.call(null, portfolio.router.parse_key, clojure.string.split.call(null, a, /__/)) : cljs.core.truth_(cljs.core.re_find.call(null, /^\d+$/, a)) ? parseInt(a, 10) : cljs.core.keyword.call(null, a);
};
portfolio.router.parse_query_params = function(a) {
  a = clojure.string.split.call(null, a, /&/);
  a = null == a ? null : cljs.core.remove.call(null, cljs.core.empty_QMARK_, a);
  a = null == a ? null : cljs.core.seq.call(null, a);
  a = null == a ? null : cljs.core.map.call(null, function(b) {
    if (cljs.core.truth_(cljs.core.re_find.call(null, /=/, b))) {
      b = clojure.string.split.call(null, b, /=/);
      var c = cljs.core.seq.call(null, b);
      b = cljs.core.first.call(null, c);
      c = cljs.core.next.call(null, c);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [portfolio.router.parse_key.call(null, b), portfolio.router.parse_qs_val.call(null, clojure.string.join.call(null, "\x3d", c))], null);
    }
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [portfolio.router.parse_key.call(null, b), !0], null);
  }, a);
  return null == a ? null : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, a);
};
portfolio.router.get_location = function(a) {
  var b = clojure.string.split.call(null, a, /\?/);
  a = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "path", "path", -188191168), a], null);
  return "string" === typeof b ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), portfolio.router.parse_query_params.call(null, b)) : a;
};
portfolio.router.get_current_url = function() {
  return window.location.href.replace(window.location.origin, "");
};
portfolio.router.get_current_location = function() {
  return portfolio.router.get_location.call(null, portfolio.router.get_current_url.call(null));
};
portfolio.router.blank_QMARK_ = function(a) {
  return null == a || !1 === a || cljs.core.coll_QMARK_.call(null, a) && cljs.core.empty_QMARK_.call(null, a) || cljs.core._EQ_.call(null, a, "");
};
portfolio.router.stringify_key = function(a) {
  if (a instanceof cljs.core.Keyword) {
    var b = cljs.core.namespace.call(null, a);
    b = cljs.core.truth_(b) ? [b, "/"].join("") : null;
    return [b, cljs.core.name.call(null, a)].join("");
  }
  return cljs.core.vector_QMARK_.call(null, a) ? clojure.string.join.call(null, "__", cljs.core.map.call(null, portfolio.router.stringify_key, a)) : a;
};
portfolio.router.encode_query_params = function(a) {
  return cljs.core.empty_QMARK_.call(null, a) ? "" : clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(b) {
    var c = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    c = portfolio.router.stringify_key.call(null, c);
    if (!0 === b) {
      return c;
    }
    if (b instanceof cljs.core.Keyword) {
      c = cljs.core.str.cljs$core$IFn$_invoke$arity$1(c);
      var d = cljs.core.str, e = d.cljs$core$IFn$_invoke$arity$1, f = encodeURIComponent;
      var g = cljs.core.namespace.call(null, b);
      g = cljs.core.truth_(g) ? [g, "/"].join("") : null;
      return [c, "\x3d", e.call(d, f([g, cljs.core.name.call(null, b)].join("")))].join("");
    }
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "\x3d", cljs.core.str.cljs$core$IFn$_invoke$arity$1(encodeURIComponent(b))].join("");
  }, cljs.core.remove.call(null, cljs.core.comp.call(null, portfolio.router.blank_QMARK_, cljs.core.second), a)));
};
portfolio.router.get_url = function(a) {
  var b = portfolio.router.encode_query_params.call(null, (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(a));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "path", "path", -188191168)).cljs$core$IFn$_invoke$arity$1(a)), cljs.core.empty_QMARK_.call(null, b) ? null : ["?", b].join("")].join("");
};
portfolio.view = {};
portfolio.view.IViewData = function() {
};
var portfolio$view$IViewData$prepare_data$dyn_15398 = function(a, b, c) {
  var d = portfolio.view.prepare_data[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.view.prepare_data._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "IViewData.prepare-data", a);
};
portfolio.view.prepare_data = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.view", "prepare-data", "portfolio.view/prepare-data", -1000148919, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$view$IViewData$prepare_data$arity$3 ? a.portfolio$view$IViewData$prepare_data$arity$3(a, b, c) : portfolio$view$IViewData$prepare_data$dyn_15398.call(null, a, b, c);
};
portfolio.view.IView = function() {
};
var portfolio$view$IView$render_view$dyn_15399 = function(a) {
  var b = portfolio.view.render_view[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = portfolio.view.render_view._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "IView.render-view", a);
};
portfolio.view.render_view = function(a) {
  var b = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.view", "render-view", "portfolio.view/render-view", -822188357, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return b ? b.call(null, a) : null != a && null != a.portfolio$view$IView$render_view$arity$1 ? a.portfolio$view$IView$render_view$arity$1(a) : portfolio$view$IView$render_view$dyn_15399.call(null, a);
};
portfolio.core = {};
portfolio.core.get_current_scenes = function(a, b) {
  var c = function() {
    var d = null == b ? null : (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(b);
    d = null == d ? null : (new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(d);
    d = null == d ? null : cljs.core.keyword.call(null, d);
    return cljs.core.truth_(d) ? cljs.core.take.call(null, 1, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([d]), new cljs.core.Keyword(null, "id", "id", -1388402092)), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "scenes", "scenes", -425219404)).cljs$core$IFn$_invoke$arity$1(a)))) : null;
  }();
  if (cljs.core.truth_(c)) {
    return c;
  }
  c = function() {
    var d = null == b ? null : (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(b);
    return null == d ? null : (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(d);
  }();
  return cljs.core.truth_(c) ? cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([c]), cljs.core.namespace, new cljs.core.Keyword(null, "id", "id", -1388402092)), cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.keyword_QMARK_, new cljs.core.Keyword(null, "id", "id", -1388402092)), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "scenes", "scenes", -425219404)).cljs$core$IFn$_invoke$arity$1(a)))) : null;
};
portfolio.core.get_scene_namespace = function(a, b) {
  a = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469));
  b = cljs.core.__destructure_map.call(null, b);
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "id", "id", -1388402092));
  b = null == b ? null : cljs.core.namespace.call(null, b);
  a = cljs.core.get.call(null, a, b);
  return cljs.core.truth_(a) ? a : cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), b, new cljs.core.Keyword(null, "namespace", "namespace", -377510372), b], null) : null;
};
portfolio.core.get_scene_collection = function(a, b) {
  a = portfolio.core.get_scene_namespace.call(null, a, b);
  a = (new cljs.core.Keyword(null, "collection", "collection", -683361892)).cljs$core$IFn$_invoke$arity$1(a);
  return cljs.core.truth_(a) ? a : new cljs.core.Keyword("portfolio.core", "default", "portfolio.core/default", -1800770435);
};
portfolio.core.get_collection = function(a, b) {
  a = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collections", "collections", -2114643505), b], null));
  return cljs.core.truth_(a) ? a : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), b], null);
};
portfolio.core.get_current_view = function(a, b) {
  return cljs.core.first.call(null, (new cljs.core.Keyword(null, "views", "views", 1450155487)).cljs$core$IFn$_invoke$arity$1(a));
};
portfolio.core.get_scene_url = function(a, b) {
  return portfolio.router.get_url.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(b)], null)));
};
portfolio.core.prepare_scene_link = function(a, b) {
  b = cljs.core.__destructure_map.call(null, b);
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "id", "id", -1388402092)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583)), e = cljs.core._EQ_, f = e.call;
  var g = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "scene", "scene", 1523800415)], null));
  g = null == g ? null : cljs.core.keyword.call(null, g);
  c = f.call(e, null, c, g);
  d = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), d], null);
  a = c ? d : cljs.core.assoc.call(null, d, new cljs.core.Keyword(null, "url", "url", 276297046), portfolio.core.get_scene_url.call(null, a, b));
  return c ? cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), !0) : a;
};
portfolio.core.namespace_selected_QMARK_ = function(a, b, c) {
  return cljs.core.seq.call(null, cljs.core.filter.call(null, function(d) {
    return cljs.core.contains_QMARK_.call(null, cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), c)), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(d));
  }, (new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721)).cljs$core$IFn$_invoke$arity$1(a)));
};
portfolio.core.namespace_expanded_QMARK_ = function(a, b, c) {
  return cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)], null));
};
portfolio.core.prepare_scenes = function(a, b, c) {
  return cljs.core.map.call(null, function(d) {
    var e = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    var f = portfolio.core.namespace_expanded_QMARK_.call(null, a, e, d), g = portfolio.core.namespace_selected_QMARK_.call(null, a, e, d), h = cljs.core.get_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "namespace", "namespace", -377510372)], null)), k = cljs.core._EQ_.call(null, e, h), l = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
    "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(portfolio.core.get_scene_namespace.call(null, a, cljs.core.first.call(null, d))), new cljs.core.Keyword(null, "expand-actions", "expand-actions", -1008648499), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", 
    -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), e, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)], null), cljs.core.not.call(null, f)], null)], null), new cljs.core.Keyword(null, "selected?", "selected?", -742502788), g], null);
    l = k ? l : cljs.core.assoc.call(null, l, new cljs.core.Keyword(null, "actions", "actions", -812656882), function() {
      var m = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-location", "go-to-location", -1047138405), cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), e], null))], null), new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), e, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)], null), !0], null)], null);
      return cljs.core.truth_(h) ? cljs.core.into.call(null, m, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), h, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)], 
      null), !1], null)], null)) : m;
    }());
    return cljs.core.truth_(cljs.core.truth_(f) ? f : g && !k) ? cljs.core.into.call(null, l, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296), !0, new cljs.core.Keyword(null, "items", "items", 1031954938), cljs.core.map.call(null, function(m) {
      return portfolio.core.prepare_scene_link.call(null, b, m);
    }, cljs.core.sort_by.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "idx", "idx", 1053688473)), d))], null)) : l;
  }, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.group_by.call(null, cljs.core.comp.call(null, cljs.core.namespace, new cljs.core.Keyword(null, "id", "id", -1388402092)), c)));
};
portfolio.core.small_screen_QMARK_ = function(a) {
  return 650 > (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "win", "win", -1624642689)).cljs$core$IFn$_invoke$arity$1(a));
};
portfolio.core.sidebar_QMARK_ = function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "sidebar-status", "sidebar-status", 922425311));
  return cljs.core._EQ_.call(null, b, new cljs.core.Keyword(null, "hidden", "hidden", -312506092)) ? !1 : cljs.core._EQ_.call(null, b, new cljs.core.Keyword(null, "visible", "visible", -1024216805)) ? !0 : !portfolio.core.small_screen_QMARK_.call(null, a);
};
portfolio.core.prepare_header = function(a, b) {
  if (portfolio.core.sidebar_QMARK_.call(null, a)) {
    return null;
  }
  b = cljs.core.PersistentArrayMap;
  var c = new cljs.core.Keyword(null, "title", "title", 636505583);
  var d = cljs.core.not_empty.call(null, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a));
  d = cljs.core.truth_(d) ? d : "Portfolio";
  return new b(null, 2, [c, d, new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sidebar-status", "sidebar-status", 922425311)], null), portfolio.core.small_screen_QMARK_.call(null, 
  a) ? new cljs.core.Keyword(null, "visible", "visible", -1024216805) : new cljs.core.Keyword(null, "auto", "auto", -566279492)], null)], null)], null);
};
portfolio.core.prepare_sidebar = function(a, b) {
  return portfolio.core.sidebar_QMARK_.call(null, a) ? new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "width", "width", -384071477), 250, new cljs.core.Keyword(null, "slide?", "slide?", 1648217264), cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "sidebar-status", "sidebar-status", 922425311)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "title", "title", 636505583), function() {
    var c = cljs.core.not_empty.call(null, (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a));
    return cljs.core.truth_(c) ? c : "Portfolio";
  }(), new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "sidebar-status", "sidebar-status", 922425311)], null), portfolio.core.small_screen_QMARK_.call(null, 
  a) ? new cljs.core.Keyword(null, "auto", "auto", -566279492) : new cljs.core.Keyword(null, "hidden", "hidden", -312506092)], null)], null), new cljs.core.Keyword(null, "lists", "lists", -884730684), cljs.core.map.call(null, function(c) {
    var d = cljs.core.nth.call(null, c, 0, null);
    c = cljs.core.nth.call(null, c, 1, null);
    var e = cljs.core.PersistentArrayMap, f = new cljs.core.Keyword(null, "title", "title", 636505583), g = (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(portfolio.core.get_collection.call(null, a, d));
    d = cljs.core.truth_(g) ? g : cljs.core._EQ_.call(null, new cljs.core.Keyword("portfolio.core", "default", "portfolio.core/default", -1800770435), d) ? null : null == d ? null : cljs.core.name.call(null, d);
    return new e(null, 2, [f, d, new cljs.core.Keyword(null, "items", "items", 1031954938), portfolio.core.prepare_scenes.call(null, a, b, cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "title", "title", 636505583), c))], null);
  }, cljs.core.sort_by.call(null, cljs.core.first, cljs.core.group_by.call(null, function(c) {
    return portfolio.core.get_scene_collection.call(null, a, c);
  }, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "scenes", "scenes", -425219404)).cljs$core$IFn$_invoke$arity$1(a)))))], null) : null;
};
portfolio.core.prepare_view_option = function(a, b) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), !0) : b;
};
portfolio.core.get_scene_param_overrides = function(a, b) {
  return cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "overrides", "overrides", 1738628867)], null));
};
portfolio.core.get_scene_param = function(a, b) {
  return cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "param", "param", 2013631823)).cljs$core$IFn$_invoke$arity$1(b)) ? cljs.core.merge.call(null, (new cljs.core.Keyword(null, "param", "param", 2013631823)).cljs$core$IFn$_invoke$arity$1(b), portfolio.core.get_scene_param_overrides.call(null, a, b)) : (new cljs.core.Keyword(null, "param", "param", 2013631823)).cljs$core$IFn$_invoke$arity$1(b);
};
portfolio.core.prep_scene_fns = function(a, b) {
  return function e(d) {
    return new cljs.core.LazySeq(null, function() {
      for (;;) {
        var f = cljs.core.seq.call(null, d);
        if (f) {
          var g = f;
          if (cljs.core.chunked_seq_QMARK_.call(null, g)) {
            var h = cljs.core.chunk_first.call(null, g), k = cljs.core.count.call(null, h), l = cljs.core.chunk_buffer.call(null, k);
            return function() {
              for (var n = 0;;) {
                if (n < k) {
                  var p = cljs.core._nth.call(null, h, n);
                  cljs.core.chunk_append.call(null, l, function() {
                    var r = portfolio.core.get_scene_param.call(null, a, p), u = cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "component-param", "component-param", 1099370170), portfolio.code.code_str.call(null, r)), z = cljs.core.truth_((new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(p)) ? cljs.core.assoc.call(null, u, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function(D, H, L, P, S, U, V, q, t) {
                      return function() {
                        return (new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(P);
                      };
                    }(n, u, r, p, h, k, l, g, f)) : u;
                    return cljs.core.truth_((new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750)).cljs$core$IFn$_invoke$arity$1(p)) ? cljs.core.assoc.call(null, z, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function(D, H, L, P, S, U, V, q, t, v) {
                      return function(w) {
                        return (new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750)).cljs$core$IFn$_invoke$arity$1(S).call(null, P, w);
                      };
                    }(n, u, z, r, p, h, k, l, g, f)) : z;
                  }());
                  n += 1;
                } else {
                  return !0;
                }
              }
            }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), e.call(null, cljs.core.chunk_rest.call(null, g))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, l), null);
          }
          var m = cljs.core.first.call(null, g);
          return cljs.core.cons.call(null, function() {
            var n = portfolio.core.get_scene_param.call(null, a, m), p = cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "component-param", "component-param", 1099370170), portfolio.code.code_str.call(null, n)), r = cljs.core.truth_((new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function(u, z, D, H, L) {
              return function() {
                return (new cljs.core.Keyword(null, "component", "component", 1555936782)).cljs$core$IFn$_invoke$arity$1(D);
              };
            }(p, n, m, g, f)) : p;
            return cljs.core.truth_((new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750)).cljs$core$IFn$_invoke$arity$1(m)) ? cljs.core.assoc.call(null, r, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function(u, z, D, H, L, P) {
              return function(S) {
                return (new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750)).cljs$core$IFn$_invoke$arity$1(H).call(null, D, S);
              };
            }(p, r, n, m, g, f)) : r;
          }(), e.call(null, cljs.core.rest.call(null, g)));
        }
        return null;
      }
    }, null, null);
  }.call(null, b);
};
portfolio.core.prepare_data = function(a, b) {
  var c = cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "idx", "idx", 1053688473), portfolio.core.prep_scene_fns.call(null, a, portfolio.core.get_current_scenes.call(null, a, b))), d = portfolio.core.get_scene_namespace.call(null, a, cljs.core.first.call(null, c)), e = portfolio.core.get_current_view.call(null, a, b);
  a = cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721), c, new cljs.core.Keyword(null, "current-namespace", "current-namespace", -1512089502), d, new cljs.core.Keyword(null, "current-collection", "current-collection", -1148466995), portfolio.core.get_collection.call(null, a, (new cljs.core.Keyword(null, "collection", "collection", -683361892)).cljs$core$IFn$_invoke$arity$1(d)));
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "header", "header", 119441134), portfolio.core.prepare_header.call(null, a, b), new cljs.core.Keyword(null, "sidebar", "sidebar", 35784458), portfolio.core.prepare_sidebar.call(null, a, b), new cljs.core.Keyword(null, "small?", "small?", 95242445), portfolio.core.small_screen_QMARK_.call(null, a), new cljs.core.Keyword(null, "tab-bar", "tab-bar", -787971209), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "tabs", "tabs", -779855354), cljs.core.map.call(null, function(f) {
    return portfolio.core.prepare_view_option.call(null, e, f);
  }, (new cljs.core.Keyword(null, "views", "views", 1450155487)).cljs$core$IFn$_invoke$arity$1(a))], null), new cljs.core.Keyword(null, "view", "view", 1247994814), portfolio.view.prepare_data.call(null, e, a, b)], null);
};
portfolio.core.ns__GT_path = function(a) {
  return clojure.string.split.call(null, a, /\./);
};
portfolio.core.get_paths = function(a) {
  a = cljs.core.map.call(null, portfolio.core.ns__GT_path, a);
  for (var b = cljs.core.drop_last.call(null, 1, cljs.core.first.call(null, a)), c = a;;) {
    if (!cljs.core.empty_QMARK_.call(null, b) && cljs.core.every_QMARK_.call(null, cljs.core.comp.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core.first.call(null, b)]), cljs.core.first), c) && cljs.core.every_QMARK_.call(null, function(e, f, g) {
      return function(h) {
        return 2 < cljs.core.count.call(null, h);
      };
    }(b, c, a), c)) {
      var d = cljs.core.next.call(null, b);
      c = cljs.core.map.call(null, function(e, f, g) {
        return function(h) {
          return cljs.core.drop.call(null, 1, h);
        };
      }(b, c, a), c);
      b = d;
    } else {
      return c;
    }
  }
};
portfolio.core.get_collection_title = function(a) {
  a = null == a ? null : clojure.string.replace.call(null, a, /-/, " ");
  return null == a ? null : clojure.string.capitalize.call(null, a);
};
portfolio.core.get_default_organization = function(a, b, c) {
  c = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.namespace, new cljs.core.Keyword(null, "id", "id", -1388402092)), cljs.core.vals.call(null, c)));
  var d = portfolio.core.get_paths.call(null, c), e = cljs.core.concat.call(null, cljs.core.map.call(null, function(f) {
    return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), f, new cljs.core.Keyword(null, "title", "title", 636505583), portfolio.core.get_collection_title.call(null, cljs.core.name.call(null, f))], null), b.call(null, f));
  }, cljs.core.keep.call(null, new cljs.core.Keyword(null, "collection", "collection", -683361892), cljs.core.vals.call(null, a))), cljs.core.map.call(null, function(f) {
    var g = cljs.core.keyword.call(null, cljs.core.first.call(null, f));
    return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), g, new cljs.core.Keyword(null, "title", "title", 636505583), portfolio.core.get_collection_title.call(null, cljs.core.first.call(null, f))], null), b.call(null, g));
  }, cljs.core.filter.call(null, function(f) {
    return 1 < cljs.core.count.call(null, f);
  }, d)));
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), cljs.core.into.call(null, a, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(f, g) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, cljs.core.merge.call(null, cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), f, new cljs.core.Keyword(null, "title", "title", 636505583), clojure.string.join.call(null, " / ", cljs.core.drop.call(null, 1, g)), new cljs.core.Keyword(null, "collection", "collection", -683361892), cljs.core.keyword.call(null, cljs.core.first.call(null, 
    g))], null) : new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), f, new cljs.core.Keyword(null, "title", "title", 636505583), clojure.string.join.call(null, " / ", g)], null), cljs.core.get.call(null, a, f))], null);
  }, c, d))), new cljs.core.Keyword(null, "collections", "collections", -2114643505), function() {
    var f = null == e ? null : cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.identity), e);
    return null == f ? null : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, f);
  }()], null);
};
portfolio.core.init_state = function(a) {
  var b = cljs.core.update.call(null, cljs.core.update.call(null, cljs.core.update.call(null, a, new cljs.core.Keyword(null, "scenes", "scenes", -425219404), function(c) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.identity), c));
  }), new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), function(c) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "namespace", "namespace", -377510372), cljs.core.identity), c));
  }), new cljs.core.Keyword(null, "collections", "collections", -2114643505), function(c) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.identity), c));
  });
  a = portfolio.core.get_default_organization.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(b), (new cljs.core.Keyword(null, "collections", "collections", -2114643505)).cljs$core$IFn$_invoke$arity$1(b), (new cljs.core.Keyword(null, "scenes", "scenes", -425219404)).cljs$core$IFn$_invoke$arity$1(b));
  b = cljs.core.truth_((new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(a)) : b;
  return cljs.core.truth_((new cljs.core.Keyword(null, "collections", "collections", -2114643505)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "collections", "collections", -2114643505), (new cljs.core.Keyword(null, "collections", "collections", -2114643505)).cljs$core$IFn$_invoke$arity$1(a)) : b;
};
portfolio.css = {};
portfolio.css.find_link_by_href = function(a, b) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(c) {
    return clojure.string.includes_QMARK_.call(null, c.href, b);
  }, a.querySelectorAll("link")));
};
portfolio.css.create_css_link = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return portfolio.css.create_css_link.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
portfolio.css.create_css_link.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.__destructure_map.call(null, b);
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "media", "media", -1066138403));
  var c = document.createElement("link");
  c.href = a;
  c.rel = "stylesheet";
  c.type = "text/css";
  c.portfolio = "portfolio";
  cljs.core.truth_(b) && (c.media = "print");
  return c;
};
portfolio.css.create_css_link.cljs$lang$maxFixedArity = 1;
portfolio.css.create_css_link.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
portfolio.css.reload_css_file = function(a) {
  for (var b = cljs.core.seq.call(null, document.body.querySelectorAll("iframe")), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e), g = function() {
        var n = f;
        n = null == n ? null : n.contentWindow;
        n = null == n ? null : n.document;
        return null == n ? null : n.head;
      }(), h = portfolio.css.find_link_by_href.call(null, g, a), k = portfolio.css.create_css_link.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "?", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new Date()).getTime())].join(""));
      k.addEventListener("load", function(n, p, r, u, z, D, H, L) {
        return function U(S) {
          S = null == D ? null : D.parentNode;
          cljs.core.truth_(S) && S.removeChild(D);
          return H.removeEventListener("load", U);
        };
      }(b, c, d, e, g, h, k, f));
      g.appendChild(k);
      e += 1;
    } else {
      if (h = cljs.core.seq.call(null, b)) {
        g = h;
        if (cljs.core.chunked_seq_QMARK_.call(null, g)) {
          b = cljs.core.chunk_first.call(null, g), e = cljs.core.chunk_rest.call(null, g), c = b, d = cljs.core.count.call(null, b), b = e;
        } else {
          f = cljs.core.first.call(null, g);
          k = function() {
            var n = f;
            n = null == n ? null : n.contentWindow;
            n = null == n ? null : n.document;
            return null == n ? null : n.head;
          }();
          var l = portfolio.css.find_link_by_href.call(null, k, a), m = portfolio.css.create_css_link.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "?", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new Date()).getTime())].join(""));
          m.addEventListener("load", function(n, p, r, u, z, D, H, L, P, S) {
            return function q(V) {
              V = null == D ? null : D.parentNode;
              cljs.core.truth_(V) && V.removeChild(D);
              return H.removeEventListener("load", q);
            };
          }(b, c, d, e, k, l, m, f, g, h));
          k.appendChild(m);
          b = cljs.core.next.call(null, g);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        return null;
      }
    }
  }
};
portfolio.css.load_css_files = function(a) {
  a = cljs.core.seq.call(null, a);
  for (var b = null, c = 0, d = 0;;) {
    if (d < c) {
      var e = cljs.core._nth.call(null, b, d);
      cljs.core.truth_(portfolio.css.find_link_by_href.call(null, document.head, e)) || document.head.appendChild(portfolio.css.create_css_link.call(null, e, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "media", "media", -1066138403), "portfolio"], null)));
      d += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        b = a, cljs.core.chunked_seq_QMARK_.call(null, b) ? (a = cljs.core.chunk_first.call(null, b), c = cljs.core.chunk_rest.call(null, b), b = a, e = cljs.core.count.call(null, a), a = c, c = e) : (e = cljs.core.first.call(null, b), cljs.core.truth_(portfolio.css.find_link_by_href.call(null, document.head, e)) || document.head.appendChild(portfolio.css.create_css_link.call(null, e, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "media", "media", -1066138403), "portfolio"], 
        null))), a = cljs.core.next.call(null, b), b = null, c = 0), d = 0;
      } else {
        return null;
      }
    }
  }
};
portfolio.css.replace_loaded_css_files = function(a) {
  for (var b = cljs.core.seq.call(null, document.body.querySelectorAll("iframe")), c = null, d = 0, e = 0;;) {
    if (e < d) {
      for (var f = cljs.core._nth.call(null, c, e), g = function() {
        var p = f;
        p = null == p ? null : p.contentWindow;
        p = null == p ? null : p.document;
        return null == p ? null : p.head;
      }(), h = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p, r, u, z, D, H) {
        return function(L) {
          return L.portfolio;
        };
      }(b, c, d, e, g, f), g.querySelectorAll("link"))), k = null, l = 0, m = 0;;) {
        if (m < l) {
          var n = cljs.core._nth.call(null, k, m);
          n.parentNode.removeChild(n);
          m += 1;
        } else {
          if (h = cljs.core.seq.call(null, h)) {
            k = h, cljs.core.chunked_seq_QMARK_.call(null, k) ? (h = cljs.core.chunk_first.call(null, k), m = cljs.core.chunk_rest.call(null, k), k = h, l = cljs.core.count.call(null, h), h = m) : (h = cljs.core.first.call(null, k), h.parentNode.removeChild(h), h = cljs.core.next.call(null, k), k = null, l = 0), m = 0;
          } else {
            break;
          }
        }
      }
      h = cljs.core.seq.call(null, a);
      k = null;
      for (m = l = 0;;) {
        if (m < l) {
          n = cljs.core._nth.call(null, k, m), g.appendChild(portfolio.css.create_css_link.call(null, n)), m += 1;
        } else {
          if (h = cljs.core.seq.call(null, h)) {
            k = h, cljs.core.chunked_seq_QMARK_.call(null, k) ? (h = cljs.core.chunk_first.call(null, k), m = cljs.core.chunk_rest.call(null, k), k = h, l = cljs.core.count.call(null, h), h = m) : (h = cljs.core.first.call(null, k), g.appendChild(portfolio.css.create_css_link.call(null, h)), h = cljs.core.next.call(null, k), k = null, l = 0), m = 0;
          } else {
            break;
          }
        }
      }
      e += 1;
    } else {
      if (k = cljs.core.seq.call(null, b)) {
        g = k;
        if (cljs.core.chunked_seq_QMARK_.call(null, g)) {
          b = cljs.core.chunk_first.call(null, g), e = cljs.core.chunk_rest.call(null, g), c = b, d = cljs.core.count.call(null, b), b = e;
        } else {
          f = cljs.core.first.call(null, g);
          h = function() {
            var p = f;
            p = null == p ? null : p.contentWindow;
            p = null == p ? null : p.document;
            return null == p ? null : p.head;
          }();
          b = cljs.core.seq.call(null, cljs.core.filter.call(null, function(p, r, u, z, D, H, L, P) {
            return function(S) {
              return S.portfolio;
            };
          }(b, c, d, e, h, f, g, k), h.querySelectorAll("link")));
          c = null;
          for (e = d = 0;;) {
            if (e < d) {
              k = cljs.core._nth.call(null, c, e), k.parentNode.removeChild(k), e += 1;
            } else {
              if (b = cljs.core.seq.call(null, b)) {
                c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), b.parentNode.removeChild(b), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
              } else {
                break;
              }
            }
          }
          b = cljs.core.seq.call(null, a);
          c = null;
          for (e = d = 0;;) {
            if (e < d) {
              k = cljs.core._nth.call(null, c, e), h.appendChild(portfolio.css.create_css_link.call(null, k)), e += 1;
            } else {
              if (b = cljs.core.seq.call(null, b)) {
                c = b, cljs.core.chunked_seq_QMARK_.call(null, c) ? (b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e) : (b = cljs.core.first.call(null, c), h.appendChild(portfolio.css.create_css_link.call(null, b)), b = cljs.core.next.call(null, c), c = null, d = 0), e = 0;
              } else {
                break;
              }
            }
          }
          b = cljs.core.next.call(null, g);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        return null;
      }
    }
  }
};
portfolio.actions = {};
portfolio.actions.assoc_in_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return portfolio.actions.assoc_in_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
portfolio.actions.assoc_in_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  if (!cljs.core._EQ_.call(null, 0, cljs.core.mod.call(null, cljs.core.count.call(null, b), 2))) {
    throw Error("Assert failed: assoc-in* takes a map and pairs of path value\n(\x3d 0 (mod (count args) 2))");
  }
  if (!cljs.core.every_QMARK_.call(null, cljs.core.vector_QMARK_, cljs.core.map.call(null, cljs.core.first, cljs.core.partition.call(null, 2, b)))) {
    throw Error("Assert failed: each path should be a vector\n(-\x3e\x3e args (partition 2) (map first) (every? vector?))");
  }
  return cljs.core.reduce.call(null, function(c, d) {
    var e = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    return cljs.core.assoc_in.call(null, c, e, d);
  }, a, cljs.core.partition.call(null, 2, b));
};
portfolio.actions.assoc_in_STAR_.cljs$lang$maxFixedArity = 1;
portfolio.actions.assoc_in_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
portfolio.actions.dissoc_in_STAR_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return portfolio.actions.dissoc_in_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
portfolio.actions.dissoc_in_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  return cljs.core.reduce.call(null, function(c, d) {
    if (cljs.core._EQ_.call(null, 0, cljs.core.count.call(null, d))) {
      return c;
    }
    if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, d))) {
      return cljs.core.dissoc.call(null, c, cljs.core.first.call(null, d));
    }
    d = cljs.core.reverse.call(null, d);
    var e = cljs.core.seq.call(null, d);
    d = cljs.core.first.call(null, e);
    e = cljs.core.next.call(null, e);
    return cljs.core.update_in.call(null, c, cljs.core.reverse.call(null, e), cljs.core.dissoc, d);
  }, a, b);
};
portfolio.actions.dissoc_in_STAR_.cljs$lang$maxFixedArity = 1;
portfolio.actions.dissoc_in_STAR_.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
portfolio.actions.atom_QMARK_ = function(a) {
  return null != a ? a.cljs$lang$protocol_mask$partition1$ & 2 || cljs.core.PROTOCOL_SENTINEL === a.cljs$core$IWatchable$ ? !0 : a.cljs$lang$protocol_mask$partition1$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWatchable, a) : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWatchable, a);
};
portfolio.actions.get_page_title = function(a) {
  a = (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(a);
  var b = cljs.core.truth_((new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.keyword.call(null, (new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(a)) : null;
  return cljs.core.truth_(b) ? ["Scene: ", cljs.core.name.call(null, b), " (", cljs.core.namespace.call(null, b), ") - Portfolio"].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(a)) ? ["Namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1(a)), " - Portfolio"].join("") : null;
};
portfolio.actions.go_to_location = function(a, b) {
  var c = portfolio.core.get_current_scenes.call(null, a, (new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(a));
  a = portfolio.core.get_current_scenes.call(null, a, b);
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "location", "location", 1815599388)], null), b], null), new cljs.core.Keyword(null, "fns", "fns", 1185138786), cljs.core.concat.call(null, cljs.core.map.call(null, function(d) {
    var e = cljs.core.__destructure_map.call(null, d);
    d = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "on-unmount", "on-unmount", 245689269));
    var f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "param", "param", 2013631823)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "id", "id", -1388402092)), h = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "title", "title", 636505583));
    e = cljs.core.PersistentVector;
    var k = cljs.core.PersistentVector.EMPTY_NODE, l = new cljs.core.Keyword(null, "on-unmount", "on-unmount", 245689269);
    g = cljs.core.truth_(g) ? g : h;
    return new e(null, 4, 5, k, [l, g, d, f], null);
  }, cljs.core.filter.call(null, new cljs.core.Keyword(null, "on-unmount", "on-unmount", 245689269), c)), cljs.core.map.call(null, function(d) {
    var e = cljs.core.__destructure_map.call(null, d);
    d = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840));
    var f = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "param", "param", 2013631823)), g = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "id", "id", -1388402092)), h = cljs.core.get.call(null, e, new cljs.core.Keyword(null, "title", "title", 636505583));
    e = cljs.core.PersistentVector;
    var k = cljs.core.PersistentVector.EMPTY_NODE, l = new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840);
    g = cljs.core.truth_(g) ? g : h;
    return new e(null, 4, 5, k, [l, g, d, f], null);
  }, cljs.core.filter.call(null, new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840), a))), new cljs.core.Keyword(null, "release", "release", -1534371381), cljs.core.map.call(null, function(d) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, new cljs.core.Keyword("portfolio.actions", "portfolio", "portfolio.actions/portfolio", -1131433853)], null);
  }, cljs.core.filter.call(null, portfolio.actions.atom_QMARK_, cljs.core.map.call(null, new cljs.core.Keyword(null, "param", "param", 2013631823), c))), new cljs.core.Keyword(null, "subscribe", "subscribe", 416253756), cljs.core.map.call(null, function(d) {
    var e = cljs.core.nth.call(null, d, 0, null);
    d = cljs.core.nth.call(null, d, 1, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, new cljs.core.Keyword("portfolio.actions", "portfolio", "portfolio.actions/portfolio", -1131433853), d], null);
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, portfolio.actions.atom_QMARK_, cljs.core.first), cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.identity), a))), new cljs.core.Keyword(null, "set-page-title", "set-page-title", -1142382407), portfolio.actions.get_page_title.call(null, b), new cljs.core.Keyword(null, "update-window-location", "update-window-location", 770004291), portfolio.router.get_url.call(null, b)], 
  null);
};
portfolio.actions.remove_scene_param = function(a) {
  switch(arguments.length) {
    case 2:
      return portfolio.actions.remove_scene_param.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
    case 3:
      return portfolio.actions.remove_scene_param.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
portfolio.actions.remove_scene_param.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var c = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scenes", "scenes", -425219404), b, new cljs.core.Keyword(null, "param", "param", 2013631823)], null));
  return cljs.core.map_QMARK_.call(null, c) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", 
  "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867)], null)], null)], null)], null) : portfolio.actions.atom_QMARK_.call(null, c) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "reset", "reset", -800929946), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", 
  "ui", -469653645), b, new cljs.core.Keyword(null, "original", "original", -445386197)], null))], null), new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "original", "original", -445386197)], null)], null)], null)], null) : 
  null;
};
portfolio.actions.remove_scene_param.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var d = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scenes", "scenes", -425219404), b, new cljs.core.Keyword(null, "param", "param", 2013631823)], null));
  return cljs.core.map_QMARK_.call(null, d) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", 
  "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867), c], null)], null)], null)], null) : portfolio.actions.atom_QMARK_.call(null, d) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "swap", "swap", 228675637), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 
  4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scenes", "scenes", -425219404), b, new cljs.core.Keyword(null, "original", "original", -445386197), c], null))], null), new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 
  4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867), c], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, 
  "original", "original", -445386197), c], null)], null)], null)], null) : null;
};
portfolio.actions.remove_scene_param.cljs$lang$maxFixedArity = 3;
portfolio.actions.set_scene_param = function(a) {
  switch(arguments.length) {
    case 3:
      return portfolio.actions.set_scene_param.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
    case 4:
      return portfolio.actions.set_scene_param.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
    default:
      throw Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
portfolio.actions.set_scene_param.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  a = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scenes", "scenes", -425219404), b, new cljs.core.Keyword(null, "param", "param", 2013631823)], null));
  return cljs.core.map_QMARK_.call(null, a) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", 
  "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867)], null), c], null)], null)], null) : portfolio.actions.atom_QMARK_.call(null, a) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "reset", "reset", -800929946), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c], null), new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867)], null), c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", 
  -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "original", "original", -445386197)], null), cljs.core.deref.call(null, a)], null)], null)], null) : null;
};
portfolio.actions.set_scene_param.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var e = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scenes", "scenes", -425219404), b, new cljs.core.Keyword(null, "param", "param", 2013631823)], null));
  if (cljs.core.map_QMARK_.call(null, e)) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, 
    "overrides", "overrides", 1738628867), c], null), d], null)], null)], null);
  }
  if (portfolio.actions.atom_QMARK_.call(null, e)) {
    var f = cljs.core.PersistentArrayMap, g = new cljs.core.Keyword(null, "swap", "swap", 228675637), h = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null), d], null), k = new cljs.core.Keyword(null, "actions", "actions", -812656882);
    d = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "overrides", "overrides", 1738628867), c], null), d], null)], null);
    a = cljs.core.not.call(null, cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "original", "original", -445386197), c], null))) ? cljs.core.into.call(null, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ui", "ui", -469653645), b, new cljs.core.Keyword(null, "original", "original", -445386197), c], null), c.call(null, cljs.core.deref.call(null, e))], null)], null)) : d;
    return new f(null, 2, [g, h, k, a], null);
  }
  return null;
};
portfolio.actions.set_scene_param.cljs$lang$maxFixedArity = 4;
portfolio.actions.process_action_result_BANG_ = function(a, b) {
  for (var c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "release", "release", -1534371381)).cljs$core$IFn$_invoke$arity$1(b)), d = null, e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f), h = cljs.core.nth.call(null, g, 0, null);
      g = cljs.core.nth.call(null, g, 1, null);
      cljs.core.println.call(null, "Stop watching atom", cljs.core.pr_str.call(null, h));
      cljs.core.remove_watch.call(null, h, g);
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        cljs.core.chunked_seq_QMARK_.call(null, c) ? (e = cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.call(null, c), d = e, e = cljs.core.count.call(null, e)) : (e = cljs.core.first.call(null, c), d = cljs.core.nth.call(null, e, 0, null), e = cljs.core.nth.call(null, e, 1, null), cljs.core.println.call(null, "Stop watching atom", cljs.core.pr_str.call(null, d)), cljs.core.remove_watch.call(null, d, e), c = cljs.core.next.call(null, c), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "fns", "fns", 1185138786)).cljs$core$IFn$_invoke$arity$1(b));
  d = null;
  for (f = e = 0;;) {
    if (f < e) {
      h = cljs.core._nth.call(null, d, f);
      g = cljs.core.seq.call(null, h);
      h = cljs.core.first.call(null, g);
      g = cljs.core.next.call(null, g);
      var k = cljs.core.first.call(null, g), l = cljs.core.next.call(null, g);
      g = k;
      k = cljs.core.first.call(null, l);
      l = cljs.core.next.call(null, l);
      cljs.core.println.call(null, ["Calling ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), " on ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(g), " with"].join(""), cljs.core.pr_str.call(null, l));
      cljs.core.apply.call(null, k, l);
      f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        cljs.core.chunked_seq_QMARK_.call(null, c) ? (e = cljs.core.chunk_first.call(null, c), c = cljs.core.chunk_rest.call(null, c), d = e, e = cljs.core.count.call(null, e)) : (d = cljs.core.first.call(null, c), e = cljs.core.seq.call(null, d), d = cljs.core.first.call(null, e), e = cljs.core.next.call(null, e), h = cljs.core.first.call(null, e), f = cljs.core.next.call(null, e), e = h, h = cljs.core.first.call(null, f), f = cljs.core.next.call(null, f), cljs.core.println.call(null, ["Calling ", 
        cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), " on ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), " with"].join(""), cljs.core.pr_str.call(null, f)), cljs.core.apply.call(null, h, f), c = cljs.core.next.call(null, c), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "subscribe", "subscribe", 416253756)).cljs$core$IFn$_invoke$arity$1(b));
  d = null;
  for (f = e = 0;;) {
    if (f < e) {
      h = cljs.core._nth.call(null, d, f), g = cljs.core.nth.call(null, h, 0, null), l = cljs.core.nth.call(null, h, 1, null), k = cljs.core.nth.call(null, h, 2, null), cljs.core.println.call(null, "Start watching atom", cljs.core.pr_str.call(null, g)), cljs.core.add_watch.call(null, g, l, function(p, r, u, z, D, H, L, P) {
        return function(S, U, V, q) {
          return cljs.core.swap_BANG_.call(null, a, cljs.core.update, new cljs.core.Keyword(null, "heartbeat", "heartbeat", -1141780952), cljs.core.fnil.call(null, cljs.core.inc, 0));
        };
      }(c, d, e, f, h, g, l, k)), f += 1;
    } else {
      if (g = cljs.core.seq.call(null, c)) {
        h = g;
        if (cljs.core.chunked_seq_QMARK_.call(null, h)) {
          c = cljs.core.chunk_first.call(null, h), f = cljs.core.chunk_rest.call(null, h), d = c, e = cljs.core.count.call(null, c), c = f;
        } else {
          l = cljs.core.first.call(null, h);
          k = cljs.core.nth.call(null, l, 0, null);
          var m = cljs.core.nth.call(null, l, 1, null), n = cljs.core.nth.call(null, l, 2, null);
          cljs.core.println.call(null, "Start watching atom", cljs.core.pr_str.call(null, k));
          cljs.core.add_watch.call(null, k, m, function(p, r, u, z, D, H, L, P, S, U) {
            return function(V, q, t, v) {
              return cljs.core.swap_BANG_.call(null, a, cljs.core.update, new cljs.core.Keyword(null, "heartbeat", "heartbeat", -1141780952), cljs.core.fnil.call(null, cljs.core.inc, 0));
            };
          }(c, d, e, f, l, k, m, n, h, g));
          c = cljs.core.next.call(null, h);
          d = null;
          e = 0;
        }
        f = 0;
      } else {
        break;
      }
    }
  }
  c = (new cljs.core.Keyword(null, "update-window-location", "update-window-location", 770004291)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && !cljs.core._EQ_.call(null, c, portfolio.router.get_current_url.call(null)) && (cljs.core.println.call(null, "Updating browser URL to", c), history.pushState(!1, !1, c));
  c = (new cljs.core.Keyword(null, "set-page-title", "set-page-title", -1142382407)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && (document.title = c);
  cljs.core.truth_(function() {
    var p = (new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(p) ? p : (new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270)).cljs$core$IFn$_invoke$arity$1(b);
  }()) && (cljs.core.truth_((new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270)).cljs$core$IFn$_invoke$arity$1(b)) && cljs.core.println.call(null, ":assoc-in", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270)).cljs$core$IFn$_invoke$arity$1(b))), cljs.core.truth_((new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806)).cljs$core$IFn$_invoke$arity$1(b)) && cljs.core.println.call(null, ":dissoc-in", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, 
  "dissoc-in", "dissoc-in", -1889884806)).cljs$core$IFn$_invoke$arity$1(b))), cljs.core.swap_BANG_.call(null, a, function(p) {
    return cljs.core.apply.call(null, portfolio.actions.assoc_in_STAR_, cljs.core.apply.call(null, portfolio.actions.dissoc_in_STAR_, p, (new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806)).cljs$core$IFn$_invoke$arity$1(b)), (new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270)).cljs$core$IFn$_invoke$arity$1(b));
  }));
  c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "actions", "actions", -812656882)).cljs$core$IFn$_invoke$arity$1(b));
  d = null;
  for (f = e = 0;;) {
    if (f < e) {
      h = cljs.core._nth.call(null, d, f), portfolio.actions.execute_action_BANG_.call(null, a, h), f += 1;
    } else {
      if (c = cljs.core.seq.call(null, c)) {
        d = c, cljs.core.chunked_seq_QMARK_.call(null, d) ? (c = cljs.core.chunk_first.call(null, d), f = cljs.core.chunk_rest.call(null, d), d = c, e = cljs.core.count.call(null, c), c = f) : (c = cljs.core.first.call(null, d), portfolio.actions.execute_action_BANG_.call(null, a, c), c = cljs.core.next.call(null, d), d = null, e = 0), f = 0;
      } else {
        break;
      }
    }
  }
  e = (new cljs.core.Keyword(null, "swap", "swap", 228675637)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(e) && (c = cljs.core.nth.call(null, e, 0, null), d = cljs.core.nth.call(null, e, 1, null), e = cljs.core.nth.call(null, e, 2, null), cljs.core.swap_BANG_.call(null, c, cljs.core.assoc_in, d, e));
  d = (new cljs.core.Keyword(null, "reset", "reset", -800929946)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(d) && (c = cljs.core.nth.call(null, d, 0, null), d = cljs.core.nth.call(null, d, 1, null), cljs.core.reset_BANG_.call(null, c, d));
  c = (new cljs.core.Keyword(null, "load-css-files", "load-css-files", -1144872475)).cljs$core$IFn$_invoke$arity$1(b);
  cljs.core.truth_(c) && portfolio.css.load_css_files.call(null, c);
  c = (new cljs.core.Keyword(null, "replace-css-files", "replace-css-files", 1438305968)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.truth_(c) ? portfolio.css.replace_loaded_css_files.call(null, c) : null;
};
portfolio.actions.execute_action_BANG_ = function(a, b) {
  cljs.core.println.call(null, "execute-action!", b);
  portfolio.actions.process_action_result_BANG_.call(null, a, function() {
    var c = cljs.core.first.call(null, b);
    c = c instanceof cljs.core.Keyword ? c.fqn : null;
    switch(c) {
      case "assoc-in":
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), cljs.core.rest.call(null, b)], null);
      case "dissoc-in":
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), cljs.core.rest.call(null, b)], null);
      case "fn/call":
        c = cljs.core.rest.call(null, b);
        var d = cljs.core.seq.call(null, c);
        c = cljs.core.first.call(null, d);
        d = cljs.core.next.call(null, d);
        return cljs.core.apply.call(null, c, d);
      case "go-to-location":
        return cljs.core.apply.call(null, portfolio.actions.go_to_location, cljs.core.deref.call(null, a), cljs.core.rest.call(null, b));
      case "go-to-current-location":
        return portfolio.actions.go_to_location.call(null, cljs.core.deref.call(null, a), portfolio.router.get_current_location.call(null));
      case "set-css-files":
        return c = cljs.core.rest.call(null, b), c = cljs.core.nth.call(null, c, 0, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)], null), c], null), new cljs.core.Keyword(null, "load-css-files", "load-css-files", 
        -1144872475), c, new cljs.core.Keyword(null, "replace-css-files", "replace-css-files", 1438305968), c], null);
      case "remove-scene-param":
        return cljs.core.apply.call(null, portfolio.actions.remove_scene_param, cljs.core.deref.call(null, a), cljs.core.rest.call(null, b));
      case "set-scene-param":
        return cljs.core.apply.call(null, portfolio.actions.set_scene_param, cljs.core.deref.call(null, a), cljs.core.rest.call(null, b));
      default:
        throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(""));
    }
  }());
  return a;
};
portfolio.actions.available_actions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), null, new cljs.core.Keyword(null, "remove-scene-param", "remove-scene-param", -1304315187), null, new cljs.core.Keyword(null, "go-to-current-location", "go-to-current-location", 1620881583), null, new cljs.core.Keyword(null, "set-scene-param", "set-scene-param", 234226032), null, new cljs.core.Keyword(null, "dissoc-in", 
"dissoc-in", -1889884806), null, new cljs.core.Keyword(null, "go-to-location", "go-to-location", -1047138405), null, new cljs.core.Keyword("fn", "call", "fn/call", -519998786), null], null), null);
portfolio.actions.actions_QMARK_ = function(a) {
  return cljs.core.sequential_QMARK_.call(null, a) && !cljs.core.empty_QMARK_.call(null, a) && cljs.core.every_QMARK_.call(null, function(b) {
    return cljs.core.sequential_QMARK_.call(null, b) && cljs.core.contains_QMARK_.call(null, portfolio.actions.available_actions, cljs.core.first.call(null, b));
  }, a);
};
portfolio.actions.parse_int = function(a) {
  a = parseInt(a, 10);
  return cljs.core.not_EQ_.call(null, a, a) ? 0 : a;
};
portfolio.actions.actionize_data = function(a, b) {
  return clojure.walk.prewalk.call(null, function(c) {
    return portfolio.actions.actions_QMARK_.call(null, c) ? function(d) {
      for (var e = cljs.core.seq.call(null, c), f = null, g = 0, h = 0;;) {
        if (h < g) {
          var k = cljs.core._nth.call(null, f, h);
          portfolio.actions.execute_action_BANG_.call(null, a, clojure.walk.prewalk.call(null, function(n, p, r, u, z) {
            return function(D) {
              return cljs.core._EQ_.call(null, new cljs.core.Keyword("event.target", "value", "event.target/value", 857030372), D) ? (D = null == d ? null : d.target, null == D ? null : D.value) : cljs.core._EQ_.call(null, new cljs.core.Keyword("event.target", "number-value", "event.target/number-value", -362876562), D) ? (D = null == d ? null : d.target, D = null == D ? null : D.value, null == D ? null : portfolio.actions.parse_int.call(null, D)) : D;
            };
          }(e, f, g, h, k), k));
          h += 1;
        } else {
          var l = cljs.core.seq.call(null, e);
          if (l) {
            var m = l;
            cljs.core.chunked_seq_QMARK_.call(null, m) ? (e = cljs.core.chunk_first.call(null, m), g = cljs.core.chunk_rest.call(null, m), f = e, m = cljs.core.count.call(null, e), e = g, g = m) : (k = cljs.core.first.call(null, m), portfolio.actions.execute_action_BANG_.call(null, a, clojure.walk.prewalk.call(null, function(n, p, r, u, z, D, H) {
              return function(L) {
                return cljs.core._EQ_.call(null, new cljs.core.Keyword("event.target", "value", "event.target/value", 857030372), L) ? (L = null == d ? null : d.target, null == L ? null : L.value) : cljs.core._EQ_.call(null, new cljs.core.Keyword("event.target", "number-value", "event.target/number-value", -362876562), L) ? (L = null == d ? null : d.target, L = null == L ? null : L.value, null == L ? null : portfolio.actions.parse_int.call(null, L)) : L;
              };
            }(e, f, g, h, k, m, l), k)), e = cljs.core.next.call(null, m), f = null, g = 0);
            h = 0;
          } else {
            return null;
          }
        }
      }
    } : c;
  }, b);
};
dumdom.string = {};
dumdom.string.tag_name = function(a) {
  return (new cljs.core.Keyword(null, "sel", "sel", -1686154807)).cljs$core$IFn$_invoke$arity$1(a);
};
dumdom.string.children = function(a) {
  return (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(a);
};
dumdom.string.attributes = function(a) {
  return cljs.core.merge.call(null, function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(b);
  }(), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(b);
  }(), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
    b = null == b ? null : (new cljs.core.Keyword(null, "dataset", "dataset", 1159262238)).cljs$core$IFn$_invoke$arity$1(b);
    b = null == b ? null : cljs.core.map.call(null, function(c) {
      var d = cljs.core.nth.call(null, c, 0, null);
      c = cljs.core.nth.call(null, c, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [["data-", cljs.core.name.call(null, d)].join(""), c], null);
    }, b);
    return null == b ? null : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b);
  }(), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a);
    b = null == b ? null : (new cljs.core.Keyword(null, "on", "on", 173873944)).cljs$core$IFn$_invoke$arity$1(b);
    b = null == b ? null : cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.string_QMARK_, cljs.core.second), b);
    b = null == b ? null : cljs.core.map.call(null, function(c) {
      var d = cljs.core.nth.call(null, c, 0, null);
      c = cljs.core.nth.call(null, c, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [["on", clojure.string.capitalize.call(null, d)].join(""), c], null);
    }, b);
    return null == b ? null : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, b);
  }());
};
dumdom.string.el_key = function(a) {
  return (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(a);
};
dumdom.string.style = function(a) {
  return (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(a));
};
dumdom.string.text_node_QMARK_ = function(a) {
  return null == (new cljs.core.Keyword(null, "sel", "sel", -1686154807)).cljs$core$IFn$_invoke$arity$1(a);
};
dumdom.string.comment_node_QMARK_ = function(a) {
  return cljs.core._EQ_.call(null, "!", dumdom.string.tag_name.call(null, a));
};
dumdom.string.text = function(a) {
  return (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(a);
};
dumdom.string.kebab_case = function(a) {
  return clojure.string.lower_case.call(null, clojure.string.replace.call(null, a, /([a-z])([A-Z])/, "$1-$2"));
};
dumdom.string.render_styles = function(a) {
  return "string" === typeof a ? a : clojure.string.join.call(null, "; ", cljs.core.map.call(null, function(b) {
    var c = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core.nth.call(null, b, 1, null);
    return [dumdom.string.kebab_case.call(null, cljs.core.name.call(null, c)), ": ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(b)].join("");
  }, cljs.core.remove.call(null, cljs.core.comp.call(null, cljs.core.nil_QMARK_, cljs.core.second), a)));
};
dumdom.string.escape = function(a) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, a, /&(?!([a-z]+|#\d+);)/, "\x26amp;"), /"/, "\x26quot;");
};
dumdom.string.attrs = function(a) {
  var b = dumdom.string.el_key.call(null, a), c = function() {
    var e = cljs.core.dissoc.call(null, dumdom.string.attributes.call(null, a), new cljs.core.Keyword(null, "innerHTML", "innerHTML", -1856751343));
    return cljs.core.truth_(b) ? cljs.core.assoc.call(null, e, new cljs.core.Keyword(null, "data-dumdom-key", "data-dumdom-key", -1601599388), dumdom.string.escape.call(null, cljs.core.pr_str.call(null, b))) : e;
  }(), d = dumdom.string.style.call(null, a);
  return clojure.string.join.call(null, "", cljs.core.map.call(null, function(e) {
    var f = cljs.core.nth.call(null, e, 0, null);
    e = cljs.core.nth.call(null, e, 1, null);
    return [" ", cljs.core.name.call(null, f), '\x3d"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(e), '"'].join("");
  }, cljs.core.merge.call(null, c, cljs.core.truth_(d) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), dumdom.string.render_styles.call(null, d)], null) : null)));
};
dumdom.string.self_closing = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, ["track", null, "br", null, "img", null, "area", null, "base", null, "hr", null, "col", null, "param", null, "input", null, "link", null, "source", null, "meta", null, "wbr", null, "embed", null], null), null);
dumdom.string.closing_tag = function(a) {
  return cljs.core.truth_(dumdom.string.self_closing.call(null, a)) ? null : ["\x3c/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a), "\x3e"].join("");
};
dumdom.string.dom_str = function(a) {
  if (null == a || dumdom.string.comment_node_QMARK_.call(null, a)) {
    return "";
  }
  if (dumdom.string.text_node_QMARK_.call(null, a)) {
    return dumdom.string.text.call(null, a);
  }
  var b = cljs.core.str.cljs$core$IFn$_invoke$arity$1(dumdom.string.tag_name.call(null, a)), c = dumdom.string.attrs.call(null, a), d = cljs.core.str, e = d.cljs$core$IFn$_invoke$arity$1;
  var f = dumdom.string.attributes.call(null, a);
  f = cljs.core.contains_QMARK_.call(null, f, new cljs.core.Keyword(null, "innerHTML", "innerHTML", -1856751343)) ? (new cljs.core.Keyword(null, "innerHTML", "innerHTML", -1856751343)).cljs$core$IFn$_invoke$arity$1(f) : clojure.string.join.call(null, "", cljs.core.map.call(null, dumdom.string.dom_str, dumdom.string.children.call(null, a)));
  return ["\x3c", b, c, "\x3e", e.call(d, f), dumdom.string.closing_tag.call(null, dumdom.string.tag_name.call(null, a))].join("");
};
dumdom.string.render = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return dumdom.string.render.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
dumdom.string.render.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  var c = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.nth.call(null, b, 1, null);
  a = dumdom.element.inflate_hiccup.call(null, a);
  return dumdom.string.dom_str.call(null, a.call(null, cljs.core.truth_(c) ? c : cljs.core.PersistentVector.EMPTY, cljs.core.truth_(b) ? b : cljs.core.PersistentArrayMap.EMPTY));
};
dumdom.string.render.cljs$lang$maxFixedArity = 1;
dumdom.string.render.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
dumdom.dom = {};
dumdom.dom.el = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return dumdom.dom.el.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
dumdom.dom.el.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  a = cljs.core.apply.call(null, dumdom.element.create, a, b, dumdom.element.flatten_seqs.call(null, c));
  a.dumdom = !0;
  return a;
};
dumdom.dom.el.cljs$lang$maxFixedArity = 2;
dumdom.dom.el.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
dumdom.dom.a = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.a.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.a.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "a", a);
};
dumdom.dom.a.cljs$lang$maxFixedArity = 0;
dumdom.dom.a.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.abbr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.abbr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "abbr", a);
};
dumdom.dom.abbr.cljs$lang$maxFixedArity = 0;
dumdom.dom.abbr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.address = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.address.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.address.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "address", a);
};
dumdom.dom.address.cljs$lang$maxFixedArity = 0;
dumdom.dom.address.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.area = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.area.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.area.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "area", a);
};
dumdom.dom.area.cljs$lang$maxFixedArity = 0;
dumdom.dom.area.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.article = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.article.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.article.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "article", a);
};
dumdom.dom.article.cljs$lang$maxFixedArity = 0;
dumdom.dom.article.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.aside = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.aside.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.aside.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "aside", a);
};
dumdom.dom.aside.cljs$lang$maxFixedArity = 0;
dumdom.dom.aside.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.audio = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.audio.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.audio.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "audio", a);
};
dumdom.dom.audio.cljs$lang$maxFixedArity = 0;
dumdom.dom.audio.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.b = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.b.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.b.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "b", a);
};
dumdom.dom.b.cljs$lang$maxFixedArity = 0;
dumdom.dom.b.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.base = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.base.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.base.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "base", a);
};
dumdom.dom.base.cljs$lang$maxFixedArity = 0;
dumdom.dom.base.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.bdi = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.bdi.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "bdi", a);
};
dumdom.dom.bdi.cljs$lang$maxFixedArity = 0;
dumdom.dom.bdi.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.bdo = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.bdo.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "bdo", a);
};
dumdom.dom.bdo.cljs$lang$maxFixedArity = 0;
dumdom.dom.bdo.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.big = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.big.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.big.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "big", a);
};
dumdom.dom.big.cljs$lang$maxFixedArity = 0;
dumdom.dom.big.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.blockquote = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "blockquote", a);
};
dumdom.dom.blockquote.cljs$lang$maxFixedArity = 0;
dumdom.dom.blockquote.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.body = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.body.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.body.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "body", a);
};
dumdom.dom.body.cljs$lang$maxFixedArity = 0;
dumdom.dom.body.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.br = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.br.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.br.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "br", a);
};
dumdom.dom.br.cljs$lang$maxFixedArity = 0;
dumdom.dom.br.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.button = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.button.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.button.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "button", a);
};
dumdom.dom.button.cljs$lang$maxFixedArity = 0;
dumdom.dom.button.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.canvas = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.canvas.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "canvas", a);
};
dumdom.dom.canvas.cljs$lang$maxFixedArity = 0;
dumdom.dom.canvas.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.caption = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.caption.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.caption.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "caption", a);
};
dumdom.dom.caption.cljs$lang$maxFixedArity = 0;
dumdom.dom.caption.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.cite = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.cite.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.cite.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "cite", a);
};
dumdom.dom.cite.cljs$lang$maxFixedArity = 0;
dumdom.dom.cite.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.code = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.code.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.code.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "code", a);
};
dumdom.dom.code.cljs$lang$maxFixedArity = 0;
dumdom.dom.code.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.col = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.col.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.col.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "col", a);
};
dumdom.dom.col.cljs$lang$maxFixedArity = 0;
dumdom.dom.col.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.colgroup = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "colgroup", a);
};
dumdom.dom.colgroup.cljs$lang$maxFixedArity = 0;
dumdom.dom.colgroup.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.data = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.data.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.data.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "data", a);
};
dumdom.dom.data.cljs$lang$maxFixedArity = 0;
dumdom.dom.data.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.datalist = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.datalist.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "datalist", a);
};
dumdom.dom.datalist.cljs$lang$maxFixedArity = 0;
dumdom.dom.datalist.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.dd = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.dd.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.dd.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "dd", a);
};
dumdom.dom.dd.cljs$lang$maxFixedArity = 0;
dumdom.dom.dd.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.del = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.del.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.del.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "del", a);
};
dumdom.dom.del.cljs$lang$maxFixedArity = 0;
dumdom.dom.del.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.details = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.details.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.details.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "details", a);
};
dumdom.dom.details.cljs$lang$maxFixedArity = 0;
dumdom.dom.details.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.dfn = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.dfn.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "dfn", a);
};
dumdom.dom.dfn.cljs$lang$maxFixedArity = 0;
dumdom.dom.dfn.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.div = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.div.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.div.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "div", a);
};
dumdom.dom.div.cljs$lang$maxFixedArity = 0;
dumdom.dom.div.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.dl = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.dl.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.dl.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "dl", a);
};
dumdom.dom.dl.cljs$lang$maxFixedArity = 0;
dumdom.dom.dl.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.dt = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.dt.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.dt.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "dt", a);
};
dumdom.dom.dt.cljs$lang$maxFixedArity = 0;
dumdom.dom.dt.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.em = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.em.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.em.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "em", a);
};
dumdom.dom.em.cljs$lang$maxFixedArity = 0;
dumdom.dom.em.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.embed = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.embed.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.embed.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "embed", a);
};
dumdom.dom.embed.cljs$lang$maxFixedArity = 0;
dumdom.dom.embed.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.fieldset = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "fieldset", a);
};
dumdom.dom.fieldset.cljs$lang$maxFixedArity = 0;
dumdom.dom.fieldset.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.figcaption = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "figcaption", a);
};
dumdom.dom.figcaption.cljs$lang$maxFixedArity = 0;
dumdom.dom.figcaption.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.figure = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.figure.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.figure.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "figure", a);
};
dumdom.dom.figure.cljs$lang$maxFixedArity = 0;
dumdom.dom.figure.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.footer = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.footer.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.footer.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "footer", a);
};
dumdom.dom.footer.cljs$lang$maxFixedArity = 0;
dumdom.dom.footer.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.form = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.form.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.form.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "form", a);
};
dumdom.dom.form.cljs$lang$maxFixedArity = 0;
dumdom.dom.form.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h1 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h1.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h1.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h1", a);
};
dumdom.dom.h1.cljs$lang$maxFixedArity = 0;
dumdom.dom.h1.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h2 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h2.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h2.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h2", a);
};
dumdom.dom.h2.cljs$lang$maxFixedArity = 0;
dumdom.dom.h2.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h3 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h3.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h3.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h3", a);
};
dumdom.dom.h3.cljs$lang$maxFixedArity = 0;
dumdom.dom.h3.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h4 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h4.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h4.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h4", a);
};
dumdom.dom.h4.cljs$lang$maxFixedArity = 0;
dumdom.dom.h4.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h5 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h5.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h5.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h5", a);
};
dumdom.dom.h5.cljs$lang$maxFixedArity = 0;
dumdom.dom.h5.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.h6 = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.h6.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.h6.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "h6", a);
};
dumdom.dom.h6.cljs$lang$maxFixedArity = 0;
dumdom.dom.h6.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.head = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.head.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.head.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "head", a);
};
dumdom.dom.head.cljs$lang$maxFixedArity = 0;
dumdom.dom.head.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.header = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.header.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.header.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "header", a);
};
dumdom.dom.header.cljs$lang$maxFixedArity = 0;
dumdom.dom.header.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.hr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.hr.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.hr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "hr", a);
};
dumdom.dom.hr.cljs$lang$maxFixedArity = 0;
dumdom.dom.hr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.html = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.html.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.html.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "html", a);
};
dumdom.dom.html.cljs$lang$maxFixedArity = 0;
dumdom.dom.html.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.i = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.i.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.i.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "i", a);
};
dumdom.dom.i.cljs$lang$maxFixedArity = 0;
dumdom.dom.i.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.iframe = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.iframe.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "iframe", a);
};
dumdom.dom.iframe.cljs$lang$maxFixedArity = 0;
dumdom.dom.iframe.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.img = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.img.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.img.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "img", a);
};
dumdom.dom.img.cljs$lang$maxFixedArity = 0;
dumdom.dom.img.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.input = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.input.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.input.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "input", a);
};
dumdom.dom.input.cljs$lang$maxFixedArity = 0;
dumdom.dom.input.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.ins = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.ins.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.ins.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "ins", a);
};
dumdom.dom.ins.cljs$lang$maxFixedArity = 0;
dumdom.dom.ins.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.kbd = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.kbd.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "kbd", a);
};
dumdom.dom.kbd.cljs$lang$maxFixedArity = 0;
dumdom.dom.kbd.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.keygen = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.keygen.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "keygen", a);
};
dumdom.dom.keygen.cljs$lang$maxFixedArity = 0;
dumdom.dom.keygen.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.label = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.label.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.label.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "label", a);
};
dumdom.dom.label.cljs$lang$maxFixedArity = 0;
dumdom.dom.label.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.legend = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.legend.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.legend.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "legend", a);
};
dumdom.dom.legend.cljs$lang$maxFixedArity = 0;
dumdom.dom.legend.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.li = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.li.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.li.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "li", a);
};
dumdom.dom.li.cljs$lang$maxFixedArity = 0;
dumdom.dom.li.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.link = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.link.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.link.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "link", a);
};
dumdom.dom.link.cljs$lang$maxFixedArity = 0;
dumdom.dom.link.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.main = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.main.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.main.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "main", a);
};
dumdom.dom.main.cljs$lang$maxFixedArity = 0;
dumdom.dom.main.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.map = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.map.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.map.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "map", a);
};
dumdom.dom.map.cljs$lang$maxFixedArity = 0;
dumdom.dom.map.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.mark = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.mark.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.mark.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "mark", a);
};
dumdom.dom.mark.cljs$lang$maxFixedArity = 0;
dumdom.dom.mark.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.menu = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.menu.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.menu.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "menu", a);
};
dumdom.dom.menu.cljs$lang$maxFixedArity = 0;
dumdom.dom.menu.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.menuitem = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "menuitem", a);
};
dumdom.dom.menuitem.cljs$lang$maxFixedArity = 0;
dumdom.dom.menuitem.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.meta = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.meta.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.meta.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "meta", a);
};
dumdom.dom.meta.cljs$lang$maxFixedArity = 0;
dumdom.dom.meta.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.meter = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.meter.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.meter.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "meter", a);
};
dumdom.dom.meter.cljs$lang$maxFixedArity = 0;
dumdom.dom.meter.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.nav = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.nav.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.nav.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "nav", a);
};
dumdom.dom.nav.cljs$lang$maxFixedArity = 0;
dumdom.dom.nav.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.noscript = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.noscript.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "noscript", a);
};
dumdom.dom.noscript.cljs$lang$maxFixedArity = 0;
dumdom.dom.noscript.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.object = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.object.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.object.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "object", a);
};
dumdom.dom.object.cljs$lang$maxFixedArity = 0;
dumdom.dom.object.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.ol = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.ol.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.ol.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "ol", a);
};
dumdom.dom.ol.cljs$lang$maxFixedArity = 0;
dumdom.dom.ol.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.optgroup = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "optgroup", a);
};
dumdom.dom.optgroup.cljs$lang$maxFixedArity = 0;
dumdom.dom.optgroup.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.option = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.option.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.option.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "option", a);
};
dumdom.dom.option.cljs$lang$maxFixedArity = 0;
dumdom.dom.option.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.output = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.output.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.output.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "output", a);
};
dumdom.dom.output.cljs$lang$maxFixedArity = 0;
dumdom.dom.output.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.p = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.p.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.p.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "p", a);
};
dumdom.dom.p.cljs$lang$maxFixedArity = 0;
dumdom.dom.p.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.param = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.param.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.param.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "param", a);
};
dumdom.dom.param.cljs$lang$maxFixedArity = 0;
dumdom.dom.param.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.pre = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.pre.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.pre.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "pre", a);
};
dumdom.dom.pre.cljs$lang$maxFixedArity = 0;
dumdom.dom.pre.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.progress = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.progress.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.progress.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "progress", a);
};
dumdom.dom.progress.cljs$lang$maxFixedArity = 0;
dumdom.dom.progress.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.q = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.q.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.q.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "q", a);
};
dumdom.dom.q.cljs$lang$maxFixedArity = 0;
dumdom.dom.q.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.rp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.rp.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.rp.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "rp", a);
};
dumdom.dom.rp.cljs$lang$maxFixedArity = 0;
dumdom.dom.rp.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.rt = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.rt.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.rt.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "rt", a);
};
dumdom.dom.rt.cljs$lang$maxFixedArity = 0;
dumdom.dom.rt.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.ruby = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.ruby.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "ruby", a);
};
dumdom.dom.ruby.cljs$lang$maxFixedArity = 0;
dumdom.dom.ruby.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.s = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.s.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.s.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "s", a);
};
dumdom.dom.s.cljs$lang$maxFixedArity = 0;
dumdom.dom.s.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.samp = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.samp.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.samp.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "samp", a);
};
dumdom.dom.samp.cljs$lang$maxFixedArity = 0;
dumdom.dom.samp.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.script = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.script.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.script.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "script", a);
};
dumdom.dom.script.cljs$lang$maxFixedArity = 0;
dumdom.dom.script.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.section = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.section.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.section.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "section", a);
};
dumdom.dom.section.cljs$lang$maxFixedArity = 0;
dumdom.dom.section.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.select = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.select.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.select.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "select", a);
};
dumdom.dom.select.cljs$lang$maxFixedArity = 0;
dumdom.dom.select.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.small = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.small.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.small.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "small", a);
};
dumdom.dom.small.cljs$lang$maxFixedArity = 0;
dumdom.dom.small.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.source = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.source.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.source.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "source", a);
};
dumdom.dom.source.cljs$lang$maxFixedArity = 0;
dumdom.dom.source.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.span = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.span.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.span.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "span", a);
};
dumdom.dom.span.cljs$lang$maxFixedArity = 0;
dumdom.dom.span.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.strong = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.strong.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.strong.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "strong", a);
};
dumdom.dom.strong.cljs$lang$maxFixedArity = 0;
dumdom.dom.strong.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.style = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.style.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.style.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "style", a);
};
dumdom.dom.style.cljs$lang$maxFixedArity = 0;
dumdom.dom.style.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.sub = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.sub.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.sub.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "sub", a);
};
dumdom.dom.sub.cljs$lang$maxFixedArity = 0;
dumdom.dom.sub.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.summary = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.summary.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.summary.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "summary", a);
};
dumdom.dom.summary.cljs$lang$maxFixedArity = 0;
dumdom.dom.summary.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.sup = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.sup.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.sup.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "sup", a);
};
dumdom.dom.sup.cljs$lang$maxFixedArity = 0;
dumdom.dom.sup.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.table = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.table.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.table.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "table", a);
};
dumdom.dom.table.cljs$lang$maxFixedArity = 0;
dumdom.dom.table.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.tbody = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.tbody.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "tbody", a);
};
dumdom.dom.tbody.cljs$lang$maxFixedArity = 0;
dumdom.dom.tbody.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.td = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.td.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.td.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "td", a);
};
dumdom.dom.td.cljs$lang$maxFixedArity = 0;
dumdom.dom.td.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.textarea = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.textarea.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.textarea.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "textarea", a);
};
dumdom.dom.textarea.cljs$lang$maxFixedArity = 0;
dumdom.dom.textarea.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.tfoot = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "tfoot", a);
};
dumdom.dom.tfoot.cljs$lang$maxFixedArity = 0;
dumdom.dom.tfoot.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.th = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.th.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.th.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "th", a);
};
dumdom.dom.th.cljs$lang$maxFixedArity = 0;
dumdom.dom.th.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.thead = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.thead.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.thead.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "thead", a);
};
dumdom.dom.thead.cljs$lang$maxFixedArity = 0;
dumdom.dom.thead.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.time = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.time.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.time.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "time", a);
};
dumdom.dom.time.cljs$lang$maxFixedArity = 0;
dumdom.dom.time.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.title = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.title.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.title.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "title", a);
};
dumdom.dom.title.cljs$lang$maxFixedArity = 0;
dumdom.dom.title.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.tr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.tr.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.tr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "tr", a);
};
dumdom.dom.tr.cljs$lang$maxFixedArity = 0;
dumdom.dom.tr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.track = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.track.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.track.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "track", a);
};
dumdom.dom.track.cljs$lang$maxFixedArity = 0;
dumdom.dom.track.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.u = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.u.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.u.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "u", a);
};
dumdom.dom.u.cljs$lang$maxFixedArity = 0;
dumdom.dom.u.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.ul = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.ul.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.ul.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "ul", a);
};
dumdom.dom.ul.cljs$lang$maxFixedArity = 0;
dumdom.dom.ul.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.var$ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.var$.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.var$.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "var", a);
};
dumdom.dom.var$.cljs$lang$maxFixedArity = 0;
dumdom.dom.var$.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.video = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.video.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.video.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "video", a);
};
dumdom.dom.video.cljs$lang$maxFixedArity = 0;
dumdom.dom.video.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.wbr = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.wbr.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "wbr", a);
};
dumdom.dom.wbr.cljs$lang$maxFixedArity = 0;
dumdom.dom.wbr.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.circle = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.circle.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.circle.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "circle", a);
};
dumdom.dom.circle.cljs$lang$maxFixedArity = 0;
dumdom.dom.circle.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.clipPath = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.clipPath.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.clipPath.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "clipPath", a);
};
dumdom.dom.clipPath.cljs$lang$maxFixedArity = 0;
dumdom.dom.clipPath.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.defs = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.defs.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.defs.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "defs", a);
};
dumdom.dom.defs.cljs$lang$maxFixedArity = 0;
dumdom.dom.defs.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.ellipse = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "ellipse", a);
};
dumdom.dom.ellipse.cljs$lang$maxFixedArity = 0;
dumdom.dom.ellipse.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.g = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.g.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.g.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "g", a);
};
dumdom.dom.g.cljs$lang$maxFixedArity = 0;
dumdom.dom.g.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.image = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.image.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.image.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "image", a);
};
dumdom.dom.image.cljs$lang$maxFixedArity = 0;
dumdom.dom.image.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.line = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.line.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.line.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "line", a);
};
dumdom.dom.line.cljs$lang$maxFixedArity = 0;
dumdom.dom.line.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.linearGradient = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "linearGradient", a);
};
dumdom.dom.linearGradient.cljs$lang$maxFixedArity = 0;
dumdom.dom.linearGradient.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.mask = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.mask.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.mask.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "mask", a);
};
dumdom.dom.mask.cljs$lang$maxFixedArity = 0;
dumdom.dom.mask.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.path = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.path.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.path.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "path", a);
};
dumdom.dom.path.cljs$lang$maxFixedArity = 0;
dumdom.dom.path.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.pattern = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.pattern.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.pattern.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "pattern", a);
};
dumdom.dom.pattern.cljs$lang$maxFixedArity = 0;
dumdom.dom.pattern.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.polygon = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.polygon.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "polygon", a);
};
dumdom.dom.polygon.cljs$lang$maxFixedArity = 0;
dumdom.dom.polygon.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.polyline = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.polyline.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "polyline", a);
};
dumdom.dom.polyline.cljs$lang$maxFixedArity = 0;
dumdom.dom.polyline.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.radialGradient = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "radialGradient", a);
};
dumdom.dom.radialGradient.cljs$lang$maxFixedArity = 0;
dumdom.dom.radialGradient.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.rect = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.rect.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.rect.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "rect", a);
};
dumdom.dom.rect.cljs$lang$maxFixedArity = 0;
dumdom.dom.rect.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.stop = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.stop.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.stop.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "stop", a);
};
dumdom.dom.stop.cljs$lang$maxFixedArity = 0;
dumdom.dom.stop.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.svg = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.svg.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.svg.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "svg", a);
};
dumdom.dom.svg.cljs$lang$maxFixedArity = 0;
dumdom.dom.svg.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.text = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.text.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.text.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "text", a);
};
dumdom.dom.text.cljs$lang$maxFixedArity = 0;
dumdom.dom.text.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.tspan = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return dumdom.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(b);
};
dumdom.dom.tspan.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, dumdom.dom.el, "tspan", a);
};
dumdom.dom.tspan.cljs$lang$maxFixedArity = 0;
dumdom.dom.tspan.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
dumdom.dom.defined_tags = cljs.core.PersistentHashMap.fromArrays([dumdom.dom.form, dumdom.dom.audio, dumdom.dom.input, dumdom.dom.menuitem, dumdom.dom.radialGradient, dumdom.dom.base, dumdom.dom.h1, dumdom.dom.embed, dumdom.dom.h3, dumdom.dom.body, dumdom.dom.keygen, dumdom.dom.progress, dumdom.dom.main, dumdom.dom.cite, dumdom.dom.rect, dumdom.dom.polyline, dumdom.dom.map, dumdom.dom.object, dumdom.dom.i, dumdom.dom.p, dumdom.dom.nav, dumdom.dom.ruby, dumdom.dom.a, dumdom.dom.menu, dumdom.dom.blockquote, 
dumdom.dom.img, dumdom.dom.text, dumdom.dom.span, dumdom.dom.track, dumdom.dom.data, dumdom.dom.u, dumdom.dom.dl, dumdom.dom.select, dumdom.dom.polygon, dumdom.dom.pattern, dumdom.dom.html, dumdom.dom.thead, dumdom.dom.path, dumdom.dom.del, dumdom.dom.fieldset, dumdom.dom.aside, dumdom.dom.figure, dumdom.dom.figcaption, dumdom.dom.mask, dumdom.dom.q, dumdom.dom.bdi, dumdom.dom.video, dumdom.dom.address, dumdom.dom.caption, dumdom.dom.dd, dumdom.dom.rp, dumdom.dom.hr, dumdom.dom.meta, dumdom.dom.tbody, 
dumdom.dom.table, dumdom.dom.pre, dumdom.dom.ul, dumdom.dom.sup, dumdom.dom.dfn, dumdom.dom.sub, dumdom.dom.mark, dumdom.dom.script, dumdom.dom.big, dumdom.dom.button, dumdom.dom.wbr, dumdom.dom.strong, dumdom.dom.li, dumdom.dom.dt, dumdom.dom.td, dumdom.dom.tr, dumdom.dom.circle, dumdom.dom.section, dumdom.dom.th, dumdom.dom.time, dumdom.dom.optgroup, dumdom.dom.iframe, dumdom.dom.legend, dumdom.dom.em, dumdom.dom.kbd, dumdom.dom.article, dumdom.dom.clipPath, dumdom.dom.abbr, dumdom.dom.source, 
dumdom.dom.output, dumdom.dom.header, dumdom.dom.datalist, dumdom.dom.tfoot, dumdom.dom.s, dumdom.dom.ins, dumdom.dom.footer, dumdom.dom.title, dumdom.dom.h5, dumdom.dom.canvas, dumdom.dom.param, dumdom.dom.div, dumdom.dom.option, dumdom.dom.summary, dumdom.dom.samp, dumdom.dom.small, dumdom.dom.style, dumdom.dom.textarea, dumdom.dom.h4, dumdom.dom.head, dumdom.dom.g, dumdom.dom.stop, dumdom.dom.var$, dumdom.dom.tspan, dumdom.dom.ol, dumdom.dom.details, dumdom.dom.line, dumdom.dom.col, dumdom.dom.label, 
dumdom.dom.rt, dumdom.dom.h6, dumdom.dom.link, dumdom.dom.defs, dumdom.dom.colgroup, dumdom.dom.meter, dumdom.dom.bdo, dumdom.dom.b, dumdom.dom.svg, dumdom.dom.ellipse, dumdom.dom.code, dumdom.dom.linearGradient, dumdom.dom.noscript, dumdom.dom.h2, dumdom.dom.area, dumdom.dom.br, dumdom.dom.image], [dumdom.dom.form, dumdom.dom.audio, dumdom.dom.input, dumdom.dom.menuitem, dumdom.dom.radialGradient, dumdom.dom.base, dumdom.dom.h1, dumdom.dom.embed, dumdom.dom.h3, dumdom.dom.body, dumdom.dom.keygen, 
dumdom.dom.progress, dumdom.dom.main, dumdom.dom.cite, dumdom.dom.rect, dumdom.dom.polyline, dumdom.dom.map, dumdom.dom.object, dumdom.dom.i, dumdom.dom.p, dumdom.dom.nav, dumdom.dom.ruby, dumdom.dom.a, dumdom.dom.menu, dumdom.dom.blockquote, dumdom.dom.img, dumdom.dom.text, dumdom.dom.span, dumdom.dom.track, dumdom.dom.data, dumdom.dom.u, dumdom.dom.dl, dumdom.dom.select, dumdom.dom.polygon, dumdom.dom.pattern, dumdom.dom.html, dumdom.dom.thead, dumdom.dom.path, dumdom.dom.del, dumdom.dom.fieldset, 
dumdom.dom.aside, dumdom.dom.figure, dumdom.dom.figcaption, dumdom.dom.mask, dumdom.dom.q, dumdom.dom.bdi, dumdom.dom.video, dumdom.dom.address, dumdom.dom.caption, dumdom.dom.dd, dumdom.dom.rp, dumdom.dom.hr, dumdom.dom.meta, dumdom.dom.tbody, dumdom.dom.table, dumdom.dom.pre, dumdom.dom.ul, dumdom.dom.sup, dumdom.dom.dfn, dumdom.dom.sub, dumdom.dom.mark, dumdom.dom.script, dumdom.dom.big, dumdom.dom.button, dumdom.dom.wbr, dumdom.dom.strong, dumdom.dom.li, dumdom.dom.dt, dumdom.dom.td, dumdom.dom.tr, 
dumdom.dom.circle, dumdom.dom.section, dumdom.dom.th, dumdom.dom.time, dumdom.dom.optgroup, dumdom.dom.iframe, dumdom.dom.legend, dumdom.dom.em, dumdom.dom.kbd, dumdom.dom.article, dumdom.dom.clipPath, dumdom.dom.abbr, dumdom.dom.source, dumdom.dom.output, dumdom.dom.header, dumdom.dom.datalist, dumdom.dom.tfoot, dumdom.dom.s, dumdom.dom.ins, dumdom.dom.footer, dumdom.dom.title, dumdom.dom.h5, dumdom.dom.canvas, dumdom.dom.param, dumdom.dom.div, dumdom.dom.option, dumdom.dom.summary, dumdom.dom.samp, 
dumdom.dom.small, dumdom.dom.style, dumdom.dom.textarea, dumdom.dom.h4, dumdom.dom.head, dumdom.dom.g, dumdom.dom.stop, dumdom.dom.var$, dumdom.dom.tspan, dumdom.dom.ol, dumdom.dom.details, dumdom.dom.line, dumdom.dom.col, dumdom.dom.label, dumdom.dom.rt, dumdom.dom.h6, dumdom.dom.link, dumdom.dom.defs, dumdom.dom.colgroup, dumdom.dom.meter, dumdom.dom.bdo, dumdom.dom.b, dumdom.dom.svg, dumdom.dom.ellipse, dumdom.dom.code, dumdom.dom.linearGradient, dumdom.dom.noscript, dumdom.dom.h2, dumdom.dom.area, 
dumdom.dom.br, dumdom.dom.image]);
dumdom.core = {};
dumdom.core.current_nodes = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
dumdom.core.element_id = cljs.core.atom.call(null, -1);
dumdom.core.patch = snabbdom.init([snabbdom.eventListenersModule, snabbdom.attributesModule, snabbdom.propsModule, snabbdom.styleModule, snabbdom.datasetModule]);
dumdom.core.set_root_id = function(a) {
  return a.dataset.dumdomId = cljs.core.swap_BANG_.call(null, dumdom.core.element_id, cljs.core.inc);
};
dumdom.core.root_node = function(a) {
  return cljs.core.deref.call(null, dumdom.core.current_nodes).call(null, a.dataset.dumdomId);
};
dumdom.core.register_vnode = function(a, b) {
  return cljs.core.swap_BANG_.call(null, dumdom.core.current_nodes, cljs.core.assoc, a, b);
};
dumdom.core.unregister_vnode = function(a) {
  return cljs.core.swap_BANG_.call(null, dumdom.core.current_nodes, cljs.core.dissoc, a);
};
dumdom.core.init_node_BANG_ = function(a) {
  a.innerHTML = "\x3cdiv\x3e\x3c/div\x3e";
  dumdom.core.set_root_id.call(null, a);
  return a.firstElementChild;
};
dumdom.core.purge_BANG_ = function() {
  return cljs.core.reset_BANG_.call(null, dumdom.core.current_nodes, cljs.core.PersistentArrayMap.EMPTY);
};
dumdom.core.create_vdom = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "handle-event", "handle-event", 2098778308));
  a = dumdom.element.inflate_hiccup.call(null, a);
  if (cljs.core.truth_(a)) {
    var d = dumdom.element._STAR_handle_event_STAR_;
    c = cljs.core.truth_(c) ? c : dumdom.element._STAR_handle_event_STAR_;
    dumdom.element._STAR_handle_event_STAR_ = c;
    try {
      var e = a.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null), cljs.core.PersistentArrayMap.EMPTY);
      return null == e ? null : cljs.core.clj__GT_js.call(null, e);
    } finally {
      dumdom.element._STAR_handle_event_STAR_ = d;
    }
  } else {
    return null;
  }
};
dumdom.core.set_event_handler_BANG_ = function(a) {
  var b = cljs.core, c = b.truth_;
  var d = cljs.core.truth_(a) ? !cljs.core.ifn_QMARK_.call(null, a) : a;
  if (c.call(b, d)) {
    throw cljs.core.ex_info.call(null, "Event handler must be a function", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "f", "f", -1597136552), a], null));
  }
  return dumdom.element._STAR_handle_event_STAR_ = a;
};
dumdom.core.dispatch_event_data = function(a, b) {
  if (cljs.core.truth_(dumdom.element._STAR_handle_event_STAR_)) {
    return dumdom.element._STAR_handle_event_STAR_.call(null, a, b);
  }
  throw Error("Cannot dispatch custom event data without a global event handler. Call dumdom.core/set-event-handler!");
};
dumdom.core.render = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return dumdom.core.render.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
dumdom.core.render.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  var d = cljs.core.nth.call(null, c, 0, null);
  if (cljs.core.truth_(function() {
    var f = (new cljs.core.Keyword(null, "handle-event", "handle-event", 2098778308)).cljs$core$IFn$_invoke$arity$1(d);
    return cljs.core.truth_(f) ? !cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "handle-event", "handle-event", 2098778308)).cljs$core$IFn$_invoke$arity$1(d)) : f;
  }())) {
    throw cljs.core.ex_info.call(null, "Called dumdom.core/render with a handle-event that is not a function", d);
  }
  c = function() {
    var f = dumdom.core.root_node.call(null, b);
    return cljs.core.truth_(f) ? f : dumdom.core.init_node_BANG_.call(null, b);
  }();
  var e = b.dataset.dumdomId;
  a = dumdom.core.create_vdom.call(null, a, e, d);
  cljs.core.truth_(a) ? (cljs.core.truth_(a.key) || (a.key = "root-node"), dumdom.core.patch.call(null, c, a), dumdom.core.register_vnode.call(null, e, a)) : (b.innerHTML = "", dumdom.core.unregister_vnode.call(null, e));
  return cljs.core.truth_(dumdom.component._STAR_render_eagerly_QMARK__STAR_) ? cljs.core.reset_BANG_.call(null, dumdom.component.eager_render_required_QMARK_, !1) : null;
};
dumdom.core.render.cljs$lang$maxFixedArity = 2;
dumdom.core.render.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
dumdom.core.render_once = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return dumdom.core.render_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
dumdom.core.render_once.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  var d = cljs.core, e = d.truth_;
  var f = (new cljs.core.Keyword(null, "handle-event", "handle-event", 2098778308)).cljs$core$IFn$_invoke$arity$1(c);
  f = cljs.core.truth_(f) ? !cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "handle-event", "handle-event", 2098778308)).cljs$core$IFn$_invoke$arity$1(c)) : f;
  if (e.call(d, f)) {
    throw cljs.core.ex_info.call(null, "Called dumdom.core/render-once with a handle-event that is not a function", c);
  }
  d = dumdom.core.init_node_BANG_.call(null, b);
  a = dumdom.core.create_vdom.call(null, a, b.dataset.dumdomId, c);
  cljs.core.truth_(a) && dumdom.core.patch.call(null, d, a);
  return cljs.core.truth_(dumdom.component._STAR_render_eagerly_QMARK__STAR_) ? cljs.core.reset_BANG_.call(null, dumdom.component.eager_render_required_QMARK_, !1) : null;
};
dumdom.core.render_once.cljs$lang$maxFixedArity = 2;
dumdom.core.render_once.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
dumdom.core.unmount = function(a) {
  return dumdom.core.unregister_vnode.call(null, a.dataset.dumdomId);
};
dumdom.core.component = dumdom.component.component;
dumdom.core.component_QMARK_ = dumdom.component.component_QMARK_;
dumdom.core.render_string = dumdom.string.render;
dumdom.core.TransitionGroup = function(a, b) {
  return dumdom.component.TransitionGroup.call(null, dumdom.dom.el, a, b);
};
dumdom.core.CSSTransitionGroup = function(a, b) {
  return dumdom.component.CSSTransitionGroup.call(null, dumdom.dom.el, a, b);
};
portfolio.icon = {};
portfolio.icons = {};
portfolio.icons.hamburger = {};
var sym__15832__auto___15842 = cljs.core.symbol.call(null, "portfolio.icons.hamburger/icon");
portfolio.icons.hamburger.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentArrayMap(null, 
6, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M48.8,96A8,8,0,0,1,41,86.3C47.4,55.5,83.9,32,128,32s80.6,23.5,87,54.3a8,8,0,0,1-7.8,9.7Z", new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", 
"stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M208,168v16a32,32,0,0,1-32,32H80a32,32,0,0,1-32-32V168", new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, 
"stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, 
"points", "points", -1486596883), "28 176 68 160 108 176 148 160 188 176 228 160", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "y1", "y1", 589123466), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, 
"x1", "x1", -1863922247), new cljs.core.Keyword(null, "y2", "y2", -718691301), new cljs.core.Keyword(null, "x2", "x2", -1362513475)], "currentColor none round 128 round 16 24 128 232".split(" "))], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___15842, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___15842)], null));
portfolio.components = {};
portfolio.components.header = {};
portfolio.components.header.Header = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "actions", "actions", -812656882));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-shrink", "flex-shrink", 1481146383), "0", new cljs.core.Keyword(null, "padding", "padding", 1660304693), 
  "0 20px", new cljs.core.Keyword(null, "transition", "transition", 765692007), "height 0.25s ease", new cljs.core.Keyword(null, "height", "height", 1025178622), 0, new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden", new cljs.core.Keyword(null, "align-items", "align-items", -267946462), "center"], null), new cljs.core.Keyword(null, "mounted-style", "mounted-style", 783212842), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 
  35], null), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 0], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, 
  "margin-right", "margin-right", 809689658), 10, new cljs.core.Keyword(null, "margin-top", "margin-top", 392161226), 10, new cljs.core.Keyword(null, "width", "width", -384071477), 24, new cljs.core.Keyword(null, "height", "height", 1025178622), 24, new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), "pointer"], null), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), b], null), portfolio.icons.hamburger.icon], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "h1.h2", "h1.h2", 1073238485), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin-top", "margin-top", 392161226), 10], null)], null), a], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.header/Header"], null));
portfolio.components.triangle = {};
portfolio.components.triangle.Triangle = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "direction", "direction", -633359395)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "actions", "actions", -812656882));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "text", "text", -1790561697));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), d, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(d) ? "pointer" : null, new cljs.core.Keyword(null, "display", 
  "display", 242065432), "inline-block", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "0 6px"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), b, new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "transform", 
  "transform", 1381301764), new cljs.core.Keyword(null, "color", "color", 1011675173), new cljs.core.Keyword(null, "transition", "transition", 765692007), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "border-left", "border-left", -1150760178), new cljs.core.Keyword(null, "display", "display", 242065432), new cljs.core.Keyword(null, "border-top", "border-top", -158897573), new cljs.core.Keyword(null, "height", "height", 1025178622), new cljs.core.Keyword(null, 
  "border-bottom", "border-bottom", 2110948415)], [function() {
    switch(c instanceof cljs.core.Keyword ? c.fqn : null) {
      case "down":
        return "rotateZ(90deg)";
      case "left":
        return "rotateZ(180deg)";
      case "up":
        return "rotateZ(270deg)";
      default:
        return "none";
    }
  }(), cljs.core.truth_(a) ? a : "rgba(153, 153, 153, 0.6)", "transform 0.1s ease-out 0s", 0, "4px solid", "inline-block", "4px solid transparent", 0, "4px solid transparent"])], null)], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.triangle/Triangle"], null));
portfolio.components.triangle.TriangleButton = dumdom.core.component.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "background", "background", -863952629), function() {
    var b = (new cljs.core.Keyword(null, "bg-color", "bg-color", 455102491)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : "#f0f0f0";
  }(), new cljs.core.Keyword(null, "width", "width", -384071477), 24, new cljs.core.Keyword(null, "height", "height", 1025178622), 24, new cljs.core.Keyword(null, "text-align", "text-align", 1786091845), "center", new cljs.core.Keyword(null, "border-radius", "border-radius", 419594011), "50%"], null)], null), portfolio.components.triangle.Triangle.call(null, cljs.core.update.call(null, a, new cljs.core.Keyword(null, "color", "color", 1011675173), function(b) {
    return cljs.core.truth_(b) ? b : "#999";
  }))], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.triangle/TriangleButton"], null));
portfolio.icons.caret_double_left = {};
var sym__15832__auto___15849 = cljs.core.symbol.call(null, "portfolio.icons.caret-double-left/icon");
portfolio.icons.caret_double_left.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"rect", "rect", -108902628), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "height", "height", 1025178622), "256", new cljs.core.Keyword(null, "width", "width", -384071477), "256"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "points", "points", -1486596883), "200 208 120 128 200 48", 
new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.PersistentArrayMap(null, 
5, [new cljs.core.Keyword(null, "points", "points", -1486596883), "120 208 40 128 120 48", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"ns", "ns", 441598760), sym__15832__auto___15849, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___15849)], null));
portfolio.components.sidebar = {};
portfolio.components.sidebar.Sidebar = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a), c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "width", "width", -384071477)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "lists", "lists", -884730684)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "actions", "actions", -812656882)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "slide?", "slide?", 
  1648217264));
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "background", "background", -863952629), "#e1e4ec", new cljs.core.Keyword(null, "width", "width", -384071477), cljs.core.truth_(g) ? 0 : c, new cljs.core.Keyword(null, "flex-shrink", 
  "flex-shrink", 1481146383), "0", new cljs.core.Keyword(null, "transition", "transition", 765692007), "width 0.25s ease"], null), new cljs.core.Keyword(null, "mounted-style", "mounted-style", 783212842), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), c], null), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), 0], null)], 
  null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "margin", "margin", -995903681), "20px 0 0 10px", new cljs.core.Keyword(null, "width", "width", -384071477), 16, new cljs.core.Keyword(null, "height", "height", 1025178622), 16, new cljs.core.Keyword(null, 
  "cursor", "cursor", 1011937484), "pointer"], null), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), f], null), portfolio.icons.caret_double_left.icon], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1.h1", "h1.h1", -1010377955), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin", 
  "margin", -995903681), "20px 10px"], null)], null), d], null), function() {
    return function l(k) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var m = cljs.core.seq.call(null, k);
          if (m) {
            var n = m;
            if (cljs.core.chunked_seq_QMARK_.call(null, n)) {
              var p = cljs.core.chunk_first.call(null, n), r = cljs.core.count.call(null, p), u = cljs.core.chunk_buffer.call(null, r);
              return function() {
                for (var D = 0;;) {
                  if (D < r) {
                    var H = cljs.core._nth.call(null, p, D);
                    cljs.core.chunk_append.call(null, u, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin-bottom", "margin-bottom", 388334941), 20], null)], null), cljs.core.truth_((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(H)) ? 
                    new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2.h4", "h2.h4", 1151335370), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin", "margin", -995903681), "0 10px 10px"], null)], null), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(H)], null) : 
                    null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
                      return function(L, P, S, U, V, q, t, v, w, x, y, A, B, C) {
                        return function G(F) {
                          return new cljs.core.LazySeq(null, function(I, J, K, M, N, O, Q, R, T, W, X, ca, ea, na) {
                            return function() {
                              for (;;) {
                                var da = cljs.core.seq.call(null, F);
                                if (da) {
                                  var Y = da;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, Y)) {
                                    var fa = cljs.core.chunk_first.call(null, Y), ha = cljs.core.count.call(null, fa), ba = cljs.core.chunk_buffer.call(null, ha);
                                    return function() {
                                      for (var xa = 0;;) {
                                        if (xa < ha) {
                                          var ya = cljs.core._nth.call(null, fa, xa), ka = cljs.core.__destructure_map.call(null, ya), la = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "title", "title", 636505583)), ma = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "selected?", "selected?", -742502788)), ia = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)), ja = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "items", 
                                          "items", 1031954938)), ra = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "expand-actions", "expand-actions", -1008648499)), oa = cljs.core.get.call(null, ka, new cljs.core.Keyword(null, "actions", "actions", -812656882));
                                          cljs.core.chunk_append.call(null, ba, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), cljs.core.truth_(la) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
                                          2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(ma) ? "#1ea7fd26" : null, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 4], null)], null), portfolio.components.triangle.Triangle.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgba(153, 153, 153, 0.6)", new cljs.core.Keyword(null, "direction", "direction", -633359395), cljs.core.truth_(ia) ? 
                                          new cljs.core.Keyword(null, "down", "down", 1565245570) : new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "actions", "actions", -812656882), ra], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), oa, new cljs.core.Keyword(null, 
                                          "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(oa) ? "pointer" : null, new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 0"], null)], null), la], null)], null) : null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
                                          "ul", "ul", -1349521403), function() {
                                            return function(pa, za, Ma, Na, jb, Oa, Ha, Xa, Ya, Za, $a, ab, bb, cb, db, xb, eb, Pa, kb, lb, mb, nb, ob, pb, qb, rb, sb, tb) {
                                              return function fb(ub) {
                                                return new cljs.core.LazySeq(null, function(Aa, ua, sa, ta, Qa, Ia, Ea, gb, zb, Ab, Bb, Fa, Ba, va, wa, hb, Ra, Ja, vb, Db, Eb, Fb, Gb, Hb, Ib, Jb, Kb, Lb) {
                                                  return function() {
                                                    for (;;) {
                                                      var Ka = cljs.core.seq.call(null, ub);
                                                      if (Ka) {
                                                        if (cljs.core.chunked_seq_QMARK_.call(null, Ka)) {
                                                          var Ga = cljs.core.chunk_first.call(null, Ka), Ca = cljs.core.count.call(null, Ga), Da = cljs.core.chunk_buffer.call(null, Ca);
                                                          a: {
                                                            for (var wb = 0;;) {
                                                              if (wb < Ca) {
                                                                var ib = cljs.core._nth.call(null, Ga, wb), Sa = cljs.core.__destructure_map.call(null, ib);
                                                                ib = cljs.core.get.call(null, Sa, new cljs.core.Keyword(null, "title", "title", 636505583));
                                                                var yb = cljs.core.get.call(null, Sa, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                                                Sa = cljs.core.get.call(null, Sa, new cljs.core.Keyword(null, "url", "url", 276297046));
                                                                cljs.core.chunk_append.call(null, Da, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(yb) ? "#1ea7fd" : 
                                                                null, new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(yb) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), ib], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 
                                                                2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), Sa], null), ib], null)], null));
                                                                wb += 1;
                                                              } else {
                                                                Ga = !0;
                                                                break a;
                                                              }
                                                            }
                                                          }
                                                          return Ga ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, Da), fb.call(null, cljs.core.chunk_rest.call(null, Ka))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, Da), null);
                                                        }
                                                        Da = cljs.core.first.call(null, Ka);
                                                        Ca = cljs.core.__destructure_map.call(null, Da);
                                                        Da = cljs.core.get.call(null, Ca, new cljs.core.Keyword(null, "title", "title", 636505583));
                                                        Ga = cljs.core.get.call(null, Ca, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                                        Ca = cljs.core.get.call(null, Ca, new cljs.core.Keyword(null, "url", "url", 276297046));
                                                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(Ga) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                                        "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(Ga) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), Da], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
                                                        "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), Ca], null), Da], null)], null), fb.call(null, cljs.core.rest.call(null, Ka)));
                                                      }
                                                      return null;
                                                    }
                                                  };
                                                }(pa, za, Ma, Na, jb, Oa, Ha, Xa, Ya, Za, $a, ab, bb, cb, db, xb, eb, Pa, kb, lb, mb, nb, ob, pb, qb, rb, sb, tb), null, null);
                                              };
                                            }(xa, I, ya, ka, la, ma, ia, ja, ra, oa, fa, ha, ba, Y, da, J, K, M, N, O, Q, R, T, W, X, ca, ea, na).call(null, ja);
                                          }()], null)], null));
                                          xa += 1;
                                        } else {
                                          return !0;
                                        }
                                      }
                                    }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ba), G.call(null, cljs.core.chunk_rest.call(null, Y))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ba), null);
                                  }
                                  var Z = cljs.core.first.call(null, Y), aa = cljs.core.__destructure_map.call(null, Z), qa = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "title", "title", 636505583)), Ta = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "selected?", "selected?", -742502788)), Ua = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)), Va = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "items", "items", 1031954938)), 
                                  Wa = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "expand-actions", "expand-actions", -1008648499)), La = cljs.core.get.call(null, aa, new cljs.core.Keyword(null, "actions", "actions", -812656882));
                                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), cljs.core.truth_(qa) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
                                  2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(Ta) ? "#1ea7fd26" : null, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 4], null)], null), portfolio.components.triangle.Triangle.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgba(153, 153, 153, 0.6)", new cljs.core.Keyword(null, "direction", "direction", -633359395), cljs.core.truth_(Ua) ? 
                                  new cljs.core.Keyword(null, "down", "down", 1565245570) : new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "actions", "actions", -812656882), Wa], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), La, new cljs.core.Keyword(null, 
                                  "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(La) ? "pointer" : null, new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 0"], null)], null), qa], null)], null) : null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
                                  "ul", "ul", -1349521403), function() {
                                    return function(xa, ya, ka, la, ma, ia, ja, ra, oa, pa, za, Ma, Na, jb, Oa, Ha, Xa, Ya, Za, $a, ab, bb, cb, db) {
                                      return function Pa(eb) {
                                        return new cljs.core.LazySeq(null, function(kb, lb, mb, nb, ob, pb, qb, rb, sb, tb, Cb, ub, fb, Aa, ua, sa, ta, Qa, Ia, Ea, gb, zb, Ab, Bb) {
                                          return function() {
                                            for (;;) {
                                              var Fa = cljs.core.seq.call(null, eb);
                                              if (Fa) {
                                                if (cljs.core.chunked_seq_QMARK_.call(null, Fa)) {
                                                  var Ba = cljs.core.chunk_first.call(null, Fa), va = cljs.core.count.call(null, Ba), wa = cljs.core.chunk_buffer.call(null, va);
                                                  a: {
                                                    for (var hb = 0;;) {
                                                      if (hb < va) {
                                                        var Ra = cljs.core._nth.call(null, Ba, hb), Ja = cljs.core.__destructure_map.call(null, Ra);
                                                        Ra = cljs.core.get.call(null, Ja, new cljs.core.Keyword(null, "title", "title", 636505583));
                                                        var vb = cljs.core.get.call(null, Ja, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                                        Ja = cljs.core.get.call(null, Ja, new cljs.core.Keyword(null, "url", "url", 276297046));
                                                        cljs.core.chunk_append.call(null, wa, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(vb) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                                        "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(vb) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), Ra], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
                                                        "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), Ja], null), Ra], null)], null));
                                                        hb += 1;
                                                      } else {
                                                        Ba = !0;
                                                        break a;
                                                      }
                                                    }
                                                  }
                                                  return Ba ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, wa), Pa.call(null, cljs.core.chunk_rest.call(null, Fa))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, wa), null);
                                                }
                                                wa = cljs.core.first.call(null, Fa);
                                                va = cljs.core.__destructure_map.call(null, wa);
                                                wa = cljs.core.get.call(null, va, new cljs.core.Keyword(null, "title", "title", 636505583));
                                                Ba = cljs.core.get.call(null, va, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                                va = cljs.core.get.call(null, va, new cljs.core.Keyword(null, "url", "url", 276297046));
                                                return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(Ba) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                                "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(Ba) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), wa], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", 
                                                "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), va], null), wa], null)], null), Pa.call(null, cljs.core.rest.call(null, Fa)));
                                              }
                                              return null;
                                            }
                                          };
                                        }(xa, ya, ka, la, ma, ia, ja, ra, oa, pa, za, Ma, Na, jb, Oa, Ha, Xa, Ya, Za, $a, ab, bb, cb, db), null, null);
                                      };
                                    }(I, Z, aa, qa, Ta, Ua, Va, Wa, La, Y, da, J, K, M, N, O, Q, R, T, W, X, ca, ea, na).call(null, Va);
                                  }()], null)], null), G.call(null, cljs.core.rest.call(null, Y)));
                                }
                                return null;
                              }
                            };
                          }(L, P, S, U, V, q, t, v, w, x, y, A, B, C), null, null);
                        };
                      }(D, H, p, r, u, n, m, a, b, c, d, e, f, g).call(null, (new cljs.core.Keyword(null, "items", "items", 1031954938)).cljs$core$IFn$_invoke$arity$1(H));
                    }()], null)], null));
                    D += 1;
                  } else {
                    return !0;
                  }
                }
              }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, u), l.call(null, cljs.core.chunk_rest.call(null, n))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, u), null);
            }
            var z = cljs.core.first.call(null, n);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin-bottom", "margin-bottom", 388334941), 20], null)], null), cljs.core.truth_((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(z)) ? 
            new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2.h4", "h2.h4", 1151335370), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin", "margin", -995903681), "0 10px 10px"], null)], null), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(z)], null) : null, new cljs.core.PersistentVector(null, 
            2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
              return function(D, H, L, P, S, U, V, q, t, v) {
                return function y(x) {
                  return new cljs.core.LazySeq(null, function() {
                    for (;;) {
                      var A = cljs.core.seq.call(null, x);
                      if (A) {
                        var B = A;
                        if (cljs.core.chunked_seq_QMARK_.call(null, B)) {
                          var C = cljs.core.chunk_first.call(null, B), E = cljs.core.count.call(null, C), F = cljs.core.chunk_buffer.call(null, E);
                          return function() {
                            for (var R = 0;;) {
                              if (R < E) {
                                var T = cljs.core._nth.call(null, C, R), W = cljs.core.__destructure_map.call(null, T), X = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "title", "title", 636505583)), ca = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "selected?", "selected?", -742502788)), ea = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)), na = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "items", "items", 1031954938)), 
                                da = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "expand-actions", "expand-actions", -1008648499)), Y = cljs.core.get.call(null, W, new cljs.core.Keyword(null, "actions", "actions", -812656882));
                                cljs.core.chunk_append.call(null, F, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), cljs.core.truth_(X) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
                                2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(ca) ? "#1ea7fd26" : null, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 4], null)], null), portfolio.components.triangle.Triangle.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgba(153, 153, 153, 0.6)", new cljs.core.Keyword(null, "direction", "direction", -633359395), cljs.core.truth_(ea) ? 
                                new cljs.core.Keyword(null, "down", "down", 1565245570) : new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "actions", "actions", -812656882), da], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), Y, new cljs.core.Keyword(null, 
                                "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(Y) ? "pointer" : null, new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 0"], null)], null), X], null)], null) : null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
                                "ul", "ul", -1349521403), function() {
                                  return function(fa, ha, ba, Z, aa, qa, Ta, Ua, Va, Wa, La, xa, ya, ka, la, ma, ia, ja, ra, oa, pa, za, Ma, Na) {
                                    return function Ha(Oa) {
                                      return new cljs.core.LazySeq(null, function(Xa, Ya, Za, $a, ab, bb, cb, db, xb, eb, Pa, kb, lb, mb, nb, ob, pb, qb, rb, sb, tb, Cb, ub, fb) {
                                        return function() {
                                          for (;;) {
                                            var Aa = cljs.core.seq.call(null, Oa);
                                            if (Aa) {
                                              if (cljs.core.chunked_seq_QMARK_.call(null, Aa)) {
                                                var ua = cljs.core.chunk_first.call(null, Aa), sa = cljs.core.count.call(null, ua), ta = cljs.core.chunk_buffer.call(null, sa);
                                                a: {
                                                  for (var Qa = 0;;) {
                                                    if (Qa < sa) {
                                                      var Ia = cljs.core._nth.call(null, ua, Qa), Ea = cljs.core.__destructure_map.call(null, Ia);
                                                      Ia = cljs.core.get.call(null, Ea, new cljs.core.Keyword(null, "title", "title", 636505583));
                                                      var gb = cljs.core.get.call(null, Ea, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                                      Ea = cljs.core.get.call(null, Ea, new cljs.core.Keyword(null, "url", "url", 276297046));
                                                      cljs.core.chunk_append.call(null, ta, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(gb) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                                      "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(gb) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), Ia], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
                                                      "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), Ea], null), Ia], null)], null));
                                                      Qa += 1;
                                                    } else {
                                                      ua = !0;
                                                      break a;
                                                    }
                                                  }
                                                }
                                                return ua ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ta), Ha.call(null, cljs.core.chunk_rest.call(null, Aa))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ta), null);
                                              }
                                              ta = cljs.core.first.call(null, Aa);
                                              sa = cljs.core.__destructure_map.call(null, ta);
                                              ta = cljs.core.get.call(null, sa, new cljs.core.Keyword(null, "title", "title", 636505583));
                                              ua = cljs.core.get.call(null, sa, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                              sa = cljs.core.get.call(null, sa, new cljs.core.Keyword(null, "url", "url", 276297046));
                                              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(ua) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                              "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(ua) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), ta], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", 
                                              "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), sa], null), ta], null)], null), Ha.call(null, cljs.core.rest.call(null, Aa)));
                                            }
                                            return null;
                                          }
                                        };
                                      }(fa, ha, ba, Z, aa, qa, Ta, Ua, Va, Wa, La, xa, ya, ka, la, ma, ia, ja, ra, oa, pa, za, Ma, Na), null, null);
                                    };
                                  }(R, T, W, X, ca, ea, na, da, Y, C, E, F, B, A, D, H, L, P, S, U, V, q, t, v).call(null, na);
                                }()], null)], null));
                                R += 1;
                              } else {
                                return !0;
                              }
                            }
                          }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, F), y.call(null, cljs.core.chunk_rest.call(null, B))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, F), null);
                        }
                        var G = cljs.core.first.call(null, B), I = cljs.core.__destructure_map.call(null, G), J = cljs.core.get.call(null, I, new cljs.core.Keyword(null, "title", "title", 636505583)), K = cljs.core.get.call(null, I, new cljs.core.Keyword(null, "selected?", "selected?", -742502788)), M = cljs.core.get.call(null, I, new cljs.core.Keyword(null, "expanded?", "expanded?", 2055832296)), N = cljs.core.get.call(null, I, new cljs.core.Keyword(null, "items", "items", 1031954938)), O = cljs.core.get.call(null, 
                        I, new cljs.core.Keyword(null, "expand-actions", "expand-actions", -1008648499)), Q = cljs.core.get.call(null, I, new cljs.core.Keyword(null, "actions", "actions", -812656882));
                        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), cljs.core.truth_(J) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
                        "background", "background", -863952629), cljs.core.truth_(K) ? "#1ea7fd26" : null, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 4], null)], null), portfolio.components.triangle.Triangle.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgba(153, 153, 153, 0.6)", new cljs.core.Keyword(null, "direction", "direction", -633359395), cljs.core.truth_(M) ? new cljs.core.Keyword(null, "down", 
                        "down", 1565245570) : new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "actions", "actions", -812656882), O], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), Q, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
                        3, [new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(Q) ? "pointer" : null, new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 0"], null)], null), J], null)], null) : null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
                          return function(R, T, W, X, ca, ea, na, da, Y, fa, ha, ba, Z, aa, qa, Ta, Ua, Va, Wa, La) {
                            return function ka(ya) {
                              return new cljs.core.LazySeq(null, function() {
                                for (;;) {
                                  var la = cljs.core.seq.call(null, ya);
                                  if (la) {
                                    if (cljs.core.chunked_seq_QMARK_.call(null, la)) {
                                      var ma = cljs.core.chunk_first.call(null, la), ia = cljs.core.count.call(null, ma), ja = cljs.core.chunk_buffer.call(null, ia);
                                      a: {
                                        for (var ra = 0;;) {
                                          if (ra < ia) {
                                            var oa = cljs.core._nth.call(null, ma, ra), pa = cljs.core.__destructure_map.call(null, oa);
                                            oa = cljs.core.get.call(null, pa, new cljs.core.Keyword(null, "title", "title", 636505583));
                                            var za = cljs.core.get.call(null, pa, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                            pa = cljs.core.get.call(null, pa, new cljs.core.Keyword(null, "url", "url", 276297046));
                                            cljs.core.chunk_append.call(null, ja, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(za) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                            "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(za) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), oa], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", 
                                            "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), pa], null), oa], null)], null));
                                            ra += 1;
                                          } else {
                                            ma = !0;
                                            break a;
                                          }
                                        }
                                      }
                                      return ma ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ja), ka.call(null, cljs.core.chunk_rest.call(null, la))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, ja), null);
                                    }
                                    ja = cljs.core.first.call(null, la);
                                    ia = cljs.core.__destructure_map.call(null, ja);
                                    ja = cljs.core.get.call(null, ia, new cljs.core.Keyword(null, "title", "title", 636505583));
                                    ma = cljs.core.get.call(null, ia, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                                    ia = cljs.core.get.call(null, ia, new cljs.core.Keyword(null, "url", "url", 276297046));
                                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.text-s", "li.text-s", 1011029760), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(ma) ? "#1ea7fd" : null, new cljs.core.Keyword(null, 
                                    "padding", "padding", 1660304693), "5px 20px"], null)], null), cljs.core.truth_(ma) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 269529000), ja], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 
                                    -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null), new cljs.core.Keyword(null, "href", "href", -793805698), ia], null), ja], null)], null), ka.call(null, cljs.core.rest.call(null, la)));
                                  }
                                  return null;
                                }
                              }, null, null);
                            };
                          }(G, I, J, K, M, N, O, Q, B, A, D, H, L, P, S, U, V, q, t, v).call(null, N);
                        }()], null)], null), y.call(null, cljs.core.rest.call(null, B)));
                      }
                      return null;
                    }
                  }, null, null);
                };
              }(z, n, m, a, b, c, d, e, f, g).call(null, (new cljs.core.Keyword(null, "items", "items", 1031954938)).cljs$core$IFn$_invoke$arity$1(z));
            }()], null)], null), l.call(null, cljs.core.rest.call(null, n)));
          }
          return null;
        }
      }, null, null);
    }.call(null, e);
  }()], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.sidebar/Sidebar"], null));
portfolio.components.tab_bar = {};
portfolio.components.tab_bar.TabBar = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "tabs", "tabs", -779855354));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), "#fff", new cljs.core.Keyword(null, "border-bottom", "border-bottom", 2110948415), "1px solid #e5e5e5"], null)], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    return function e(d) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, d);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l), n = cljs.core.__destructure_map.call(null, m);
                    m = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "title", "title", 636505583));
                    var p = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "url", "url", 276297046));
                    n = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                    cljs.core.chunk_append.call(null, k, cljs.core.truth_(n) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px", new cljs.core.Keyword(null, "display", "display", 242065432), 
                    "inline-block", new cljs.core.Keyword(null, "border-bottom", "border-bottom", 2110948415), "2px solid #1ea7fd", new cljs.core.Keyword(null, "color", "color", 1011675173), "#1ea7fd"], null)], null), m], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
                    2, [new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px", new cljs.core.Keyword(null, "color", "color", 1011675173), "#000"], null), new cljs.core.Keyword(null, "href", "href", -793805698), p], null), m], null));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            k = cljs.core.first.call(null, f);
            h = cljs.core.__destructure_map.call(null, k);
            k = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "title", "title", 636505583));
            g = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "url", "url", 276297046));
            h = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
            return cljs.core.cons.call(null, cljs.core.truth_(h) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px", new cljs.core.Keyword(null, "display", "display", 242065432), "inline-block", 
            new cljs.core.Keyword(null, "border-bottom", "border-bottom", 2110948415), "2px solid #1ea7fd", new cljs.core.Keyword(null, "color", "color", 1011675173), "#1ea7fd"], null)], null), k], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
            "padding", "padding", 1660304693), "10px 20px", new cljs.core.Keyword(null, "color", "color", 1011675173), "#000"], null), new cljs.core.Keyword(null, "href", "href", -793805698), g], null), k], null), e.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, b);
  }()], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.tab-bar/TabBar"], null));
portfolio.components.app = {};
portfolio.components.app.App = dumdom.core.component.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "left", "left", -399115937), 0, new cljs.core.Keyword(null, 
  "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "right", "right", -452581833), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 0], null)], null), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "sidebar", "sidebar", 35784458)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : portfolio.components.sidebar.Sidebar.call(null, b);
  }(), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "background", "background", -863952629), "#e1e4ec", new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 
  364609438), "column", new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), 1], null)], null), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "header", "header", 119441134)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : portfolio.components.header.Header.call(null, b);
  }(), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "box-shadow", "box-shadow", 1600206755), "rgba(0, 0, 0, 0.1) 0px 1px 5px 0px", new cljs.core.Keyword(null, "border-radius", "border-radius", 419594011), 4, new cljs.core.Keyword(null, 
  "flex-grow", "flex-grow", 1865160747), 1, new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 364609438), "column", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden", new cljs.core.Keyword(null, "margin", "margin", -995903681), cljs.core.truth_((new cljs.core.Keyword(null, "sidebar", "sidebar", 35784458)).cljs$core$IFn$_invoke$arity$1(a)) ? "10px 10px 10px 0" : cljs.core.truth_((new cljs.core.Keyword(null, 
  "small?", "small?", 95242445)).cljs$core$IFn$_invoke$arity$1(a)) ? "10px 0 0" : 10], null)], null), 1 < function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "tab-bar", "tab-bar", -787971209)).cljs$core$IFn$_invoke$arity$1(a);
    b = null == b ? null : (new cljs.core.Keyword(null, "tabs", "tabs", -779855354)).cljs$core$IFn$_invoke$arity$1(b);
    b = null == b ? null : cljs.core.count.call(null, b);
    return cljs.core.truth_(b) ? b : 0;
  }() ? portfolio.components.tab_bar.TabBar.call(null, (new cljs.core.Keyword(null, "tab-bar", "tab-bar", -787971209)).cljs$core$IFn$_invoke$arity$1(a)) : null, portfolio.view.render_view.call(null, (new cljs.core.Keyword(null, "view", "view", 1247994814)).cljs$core$IFn$_invoke$arity$1(a))], null)], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.app/App"], null));
portfolio.client = {};
portfolio.client.render = function(a, b) {
  b = cljs.core.__destructure_map.call(null, b);
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-render", "on-render", 2096729391));
  var c = cljs.core.deref.call(null, a);
  c = portfolio.core.prepare_data.call(null, c, (new cljs.core.Keyword(null, "location", "location", 1815599388)).cljs$core$IFn$_invoke$arity$1(c));
  a = portfolio.actions.actionize_data.call(null, a, c);
  cljs.core.ifn_QMARK_.call(null, b) && b.call(null, c);
  b = document.getElementById("portfolio");
  return cljs.core.truth_(b) ? dumdom.core.render.call(null, portfolio.components.app.App.call(null, a), b) : console.error('Unable to render portfolio: no element with id "portfolio"');
};
portfolio.client.a_element = function(a) {
  for (;;) {
    if (null == a) {
      return null;
    }
    var b = cljs.core, c = b.truth_;
    var d = a.href;
    d = cljs.core.truth_(d) ? cljs.core._EQ_.call(null, "A", a.tagName) : d;
    if (c.call(b, d)) {
      return a;
    }
    a = a.parentNode;
  }
};
portfolio.client.get_path = function(a) {
  return cljs.core.truth_(cljs.core.not_empty.call(null, a)) ? a.replace(location.origin, "") : null;
};
portfolio.client.relay_body_clicks = function(a, b) {
  var c = function() {
    var d = b.target;
    d = null == d ? null : portfolio.client.a_element.call(null, d);
    d = null == d ? null : d.href;
    return null == d ? null : portfolio.client.get_path.call(null, d);
  }();
  if (cljs.core.truth_(cljs.core.truth_(c) ? cljs.core.re_find.call(null, /^\//, c) : c)) {
    b.preventDefault();
    if (cljs.core.truth_(function() {
      var d = b.ctrlKey;
      return cljs.core.truth_(d) ? d : b.metaKey;
    }())) {
      return window.open(c, "_blank");
    }
    history.pushState(!1, !1, c);
    return portfolio.actions.execute_action_BANG_.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-current-location", "go-to-current-location", 1620881583)], null));
  }
  return null;
};
portfolio.client.ensure_portfolio_css_BANG_ = function(a) {
  if (cljs.core.not.call(null, document.getElementById("portfolio-css"))) {
    var b = portfolio.css.create_css_link.call(null, "/portfolio/styles/portfolio.css");
    b.addEventListener("load", function e(d) {
      b.removeEventListener("load", e);
      return a.call(null);
    });
    return document.head.appendChild(b);
  }
  return a.call(null);
};
portfolio.client.ensure_element_BANG_ = function() {
  if (cljs.core.truth_(document.getElementById("portfolio"))) {
    return null;
  }
  var a = document.createElement("div");
  a.id = "portfolio";
  document.body.appendChild(a);
  a = document.createElement("script");
  a.type = "text/javascript";
  a.src = "/portfolio/prism.js";
  return document.body.appendChild(a);
};
portfolio.client.set_window_size = function(a) {
  var b = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "w", "w", 354169001), window.innerWidth, new cljs.core.Keyword(null, "h", "h", 1109658740), window.innerHeight], null);
  return cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "win", "win", -1624642689), b);
};
portfolio.client.set_window_size_debounced = portfolio.homeless.debounce.call(null, portfolio.client.set_window_size, 100);
portfolio.client.keep_size_up_to_date = function(a) {
  portfolio.client.set_window_size.call(null, a);
  return window.onresize = function() {
    return portfolio.client.set_window_size_debounced.call(null, a);
  };
};
portfolio.client.keep_css_files_up_to_date = function(a) {
  return cljs.core.truth_((new cljs.core.Keyword("portfolio.client", "css-listener", "portfolio.client/css-listener", 570337463)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a))) ? null : document.body.addEventListener("figwheel.after-css-load", function d(c) {
    cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword("portfolio.client", "css-listener", "portfolio.client/css-listener", 570337463), d);
    c = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "css-files", "css-files", -502009265)).cljs$core$IFn$_invoke$arity$1(c.data));
    for (var e = null, f = 0, g = 0;;) {
      if (g < f) {
        var h = cljs.core._nth.call(null, e, g);
        portfolio.css.reload_css_file.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(m, n, p, r, u) {
          return function(z) {
            return clojure.string.includes_QMARK_.call(null, u, z);
          };
        }(c, e, f, g, h), (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a)))));
        g += 1;
      } else {
        var k = cljs.core.seq.call(null, c);
        if (k) {
          var l = k;
          cljs.core.chunked_seq_QMARK_.call(null, l) ? (c = cljs.core.chunk_first.call(null, l), f = cljs.core.chunk_rest.call(null, l), e = c, l = cljs.core.count.call(null, c), c = f, f = l) : (h = cljs.core.first.call(null, l), portfolio.css.reload_css_file.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(m, n, p, r, u, z, D) {
            return function(H) {
              return clojure.string.includes_QMARK_.call(null, u, H);
            };
          }(c, e, f, g, h, l, k), (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a))))), c = cljs.core.next.call(null, l), e = null, f = 0);
          g = 0;
        } else {
          return null;
        }
      }
    }
  });
};
portfolio.client.start_app = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 1 < b.length ? new cljs.core.IndexedSeq(b.slice(1), 0, null) : null;
  return portfolio.client.start_app.cljs$core$IFn$_invoke$arity$variadic(arguments[0], b);
};
portfolio.client.start_app.cljs$core$IFn$_invoke$arity$variadic = function(a, b) {
  b = cljs.core.nth.call(null, b, 0, null);
  b = cljs.core.__destructure_map.call(null, b);
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-render", "on-render", 2096729391));
  portfolio.css.load_css_files.call(null, (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a)));
  cljs.core.truth_((new cljs.core.Keyword("portfolio.client", "started?", "portfolio.client/started?", -1423635518)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a))) ? portfolio.client.render.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-render", "on-render", 2096729391), c], null)) : (document.body.addEventListener("click", function(d) {
    return portfolio.client.relay_body_clicks.call(null, a, d);
  }), portfolio.client.keep_size_up_to_date.call(null, a), portfolio.client.keep_css_files_up_to_date.call(null, a), portfolio.client.ensure_element_BANG_.call(null), portfolio.client.ensure_portfolio_css_BANG_.call(null, function() {
    window.onpopstate = function() {
      return portfolio.actions.execute_action_BANG_.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-current-location", "go-to-current-location", 1620881583)], null));
    };
    cljs.core.add_tap.call(null, function(d) {
      return cljs.core.swap_BANG_.call(null, a, cljs.core.update, new cljs.core.Keyword(null, "taps", "taps", 480110748), cljs.core.conj, d);
    });
    cljs.core.add_watch.call(null, a, new cljs.core.Keyword("portfolio.client", "render", "portfolio.client/render", -1813739513), function(d, e, f, g) {
      return portfolio.client.render.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-render", "on-render", 2096729391), c], null));
    });
    portfolio.actions.execute_action_BANG_.call(null, a, cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(portfolio.router.get_current_location.call(null))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-location", "go-to-location", -1047138405), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 
    900640534), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "scenes", "scenes", -425219404)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, a))))))], null)], null)], null) : new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-current-location", "go-to-current-location", 1620881583)], null));
    return cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword("portfolio.client", "started?", "portfolio.client/started?", -1423635518), !0);
  }));
  return a;
};
portfolio.client.start_app.cljs$lang$maxFixedArity = 1;
portfolio.client.start_app.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a);
  a = cljs.core.next.call(null, a);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a);
};
portfolio.adapter = {};
portfolio.adapter.IComponentLibrary = function() {
};
var portfolio$adapter$IComponentLibrary$render_component$dyn_15391 = function(a, b) {
  var c = portfolio.adapter.render_component[goog.typeOf(null == a ? null : a)];
  if (null != c) {
    return c.call(null, a, b);
  }
  c = portfolio.adapter.render_component._;
  if (null != c) {
    return c.call(null, a, b);
  }
  throw cljs.core.missing_protocol.call(null, "IComponentLibrary.render-component", a);
};
portfolio.adapter.render_component = function(a, b) {
  var c = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.adapter", "render-component", "portfolio.adapter/render-component", -433053335, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return c ? c.call(null, a, b) : null != a && null != a.portfolio$adapter$IComponentLibrary$render_component$arity$2 ? a.portfolio$adapter$IComponentLibrary$render_component$arity$2(a, b) : portfolio$adapter$IComponentLibrary$render_component$dyn_15391.call(null, a, b);
};
portfolio.adapter.prepare_scene = function(a, b) {
  return cljs.core.with_meta.call(null, a, b);
};
portfolio.components.code = {};
portfolio.components.code.Code = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "code", "code", 1586293142));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre.language-clojure", "pre.language-clojure", 296125079), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "font-family", "font-family", -667419874), "monospace"], null)], null), a], null);
}, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.code/Code", new cljs.core.Keyword(null, "keyfn", "keyfn", 780060332), new cljs.core.Keyword(null, "code", "code", 1586293142), new cljs.core.Keyword(null, "on-render", "on-render", 2096729391), function(a) {
  return Prism.highlightElement(a);
}], null));
portfolio.views = {};
portfolio.views.canvas = {};
portfolio.views.canvas.protocols = {};
portfolio.views.canvas.protocols.ICanvasToolbarButtonData = function() {
};
var portfolio$views$canvas$protocols$ICanvasToolbarButtonData$prepare_toolbar_button$dyn_12778 = function(a, b, c) {
  var d = portfolio.views.canvas.protocols.prepare_toolbar_button[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.views.canvas.protocols.prepare_toolbar_button._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasToolbarButtonData.prepare-toolbar-button", a);
};
portfolio.views.canvas.protocols.prepare_toolbar_button = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasToolbarButtonData$prepare_toolbar_button$arity$3 ? a.portfolio$views$canvas$protocols$ICanvasToolbarButtonData$prepare_toolbar_button$arity$3(a, b, c) : portfolio$views$canvas$protocols$ICanvasToolbarButtonData$prepare_toolbar_button$dyn_12778.call(null, a, b, c);
};
portfolio.views.canvas.protocols.ICanvasToolbarButtonView = function() {
};
var portfolio$views$canvas$protocols$ICanvasToolbarButtonView$render_toolbar_button$dyn_12779 = function(a) {
  var b = portfolio.views.canvas.protocols.render_toolbar_button[goog.typeOf(null == a ? null : a)];
  if (null != b) {
    return b.call(null, a);
  }
  b = portfolio.views.canvas.protocols.render_toolbar_button._;
  if (null != b) {
    return b.call(null, a);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasToolbarButtonView.render-toolbar-button", a);
};
portfolio.views.canvas.protocols.render_toolbar_button = function(a) {
  var b = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return b ? b.call(null, a) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasToolbarButtonView$render_toolbar_button$arity$1 ? a.portfolio$views$canvas$protocols$ICanvasToolbarButtonView$render_toolbar_button$arity$1(a) : portfolio$views$canvas$protocols$ICanvasToolbarButtonView$render_toolbar_button$dyn_12779.call(null, a);
};
portfolio.views.canvas.protocols.ICanvasTool = function() {
};
var portfolio$views$canvas$protocols$ICanvasTool$prepare_canvas$dyn_12780 = function(a, b, c) {
  var d = portfolio.views.canvas.protocols.prepare_canvas[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.views.canvas.protocols.prepare_canvas._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasTool.prepare-canvas", a);
};
portfolio.views.canvas.protocols.prepare_canvas = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasTool$prepare_canvas$arity$3 ? a.portfolio$views$canvas$protocols$ICanvasTool$prepare_canvas$arity$3(a, b, c) : portfolio$views$canvas$protocols$ICanvasTool$prepare_canvas$dyn_12780.call(null, a, b, c);
};
var portfolio$views$canvas$protocols$ICanvasTool$finalize_canvas$dyn_12781 = function(a, b, c) {
  var d = portfolio.views.canvas.protocols.finalize_canvas[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.views.canvas.protocols.finalize_canvas._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasTool.finalize-canvas", a);
};
portfolio.views.canvas.protocols.finalize_canvas = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasTool$finalize_canvas$arity$3 ? a.portfolio$views$canvas$protocols$ICanvasTool$finalize_canvas$arity$3(a, b, c) : portfolio$views$canvas$protocols$ICanvasTool$finalize_canvas$dyn_12781.call(null, a, b, c);
};
portfolio.views.canvas.protocols.ICanvasToolValue = function() {
};
var portfolio$views$canvas$protocols$ICanvasToolValue$get_tool_value$dyn_12782 = function(a, b, c) {
  var d = portfolio.views.canvas.protocols.get_tool_value[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.views.canvas.protocols.get_tool_value._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasToolValue.get-tool-value", a);
};
portfolio.views.canvas.protocols.get_tool_value = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "get-tool-value", "portfolio.views.canvas.protocols/get-tool-value", -1168238097, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasToolValue$get_tool_value$arity$3 ? a.portfolio$views$canvas$protocols$ICanvasToolValue$get_tool_value$arity$3(a, b, c) : portfolio$views$canvas$protocols$ICanvasToolValue$get_tool_value$dyn_12782.call(null, a, b, c);
};
portfolio.views.canvas.protocols.ICanvasPanelAddon = function() {
};
var portfolio$views$canvas$protocols$ICanvasPanelAddon$prepare_panel_content$dyn_12783 = function(a, b, c) {
  var d = portfolio.views.canvas.protocols.prepare_panel_content[goog.typeOf(null == a ? null : a)];
  if (null != d) {
    return d.call(null, a, b, c);
  }
  d = portfolio.views.canvas.protocols.prepare_panel_content._;
  if (null != d) {
    return d.call(null, a, b, c);
  }
  throw cljs.core.missing_protocol.call(null, "ICanvasPanelAddon.prepare-panel-content", a);
};
portfolio.views.canvas.protocols.prepare_panel_content = function(a, b, c) {
  var d = cljs.core.get.call(null, cljs.core.meta.call(null, a), cljs.core.with_meta(new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-panel-content", "portfolio.views.canvas.protocols/prepare-panel-content", 997549574, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017), !0], null)));
  return d ? d.call(null, a, b, c) : null != a && null != a.portfolio$views$canvas$protocols$ICanvasPanelAddon$prepare_panel_content$arity$3 ? a.portfolio$views$canvas$protocols$ICanvasPanelAddon$prepare_panel_content$arity$3(a, b, c) : portfolio$views$canvas$protocols$ICanvasPanelAddon$prepare_panel_content$dyn_12783.call(null, a, b, c);
};
portfolio.components.canvas = {};
portfolio.components.canvas.get_iframe = function(a) {
  return null == a ? null : a.querySelector(".canvas");
};
portfolio.components.canvas.get_iframe_document = function(a) {
  a = null == a ? null : portfolio.components.canvas.get_iframe.call(null, a);
  a = null == a ? null : a.contentWindow;
  return null == a ? null : a.document;
};
portfolio.components.canvas.get_iframe_body = function(a) {
  a = null == a ? null : portfolio.components.canvas.get_iframe_document.call(null, a);
  return null == a ? null : a.body;
};
portfolio.components.canvas.ComponentError = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "component-param", "component-param", 1099370170));
  a = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "error", "error", -978969032));
  var c = cljs.core.PersistentVector, d = cljs.core.PersistentVector.EMPTY_NODE, e = new cljs.core.Keyword(null, "div", "div", 1057191632), f = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "background", "background", -863952629), "#fff", new cljs.core.Keyword(null, "width", "width", -384071477), "100%", new cljs.core.Keyword(null, "height", "height", 1025178622), "100%", 
  new cljs.core.Keyword(null, "padding", "padding", 1660304693), 20], null)], null), g = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1.h1.error", "h1.h1.error", -1200773667), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a)], null), h = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p.mod", "p.mod", 441848325), (new cljs.core.Keyword(null, 
  "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(a)], null);
  b = cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.vs-s.mod", "div.vs-s.mod", -2084413467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2.h3.mod", "h2.h3.mod", -1804883470), "Component param"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p.mod", "p.mod", 441848325), 
  portfolio.components.code.Code.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), b], null))], null)], null) : null;
  var k = (new cljs.core.Keyword(null, "ex-data", "ex-data", -309040259)).cljs$core$IFn$_invoke$arity$1(a);
  k = cljs.core.truth_(k) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.vs-s.mod", "div.vs-s.mod", -2084413467), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2.h3.mod", "h2.h3.mod", -1804883470), "ex-data"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p.mod", "p.mod", 441848325), portfolio.components.code.Code.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), k], null))], null)], null) : null;
  return new c(null, 7, 5, d, [e, f, g, h, b, k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre", "pre", 2118456869), (new cljs.core.Keyword(null, "stack", "stack", -793405930)).cljs$core$IFn$_invoke$arity$1(a)], null)], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/ComponentError"], null));
portfolio.components.canvas.get_error_container = function(a) {
  var b = a.querySelector("error-container");
  cljs.core.truth_(b) ? b.innerHTML = "" : b = null;
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = document.createElement("div");
  b.className = "error-container";
  b.style.overflow = "scroll";
  a.appendChild(b);
  return b;
};
portfolio.components.canvas.render_error = function(a, b, c, d) {
  var e = portfolio.components.canvas.get_error_container.call(null, a);
  setTimeout(function() {
    return a.style.height = "auto";
  }, 100);
  b.style.display = "none";
  return dumdom.core.render.call(null, portfolio.components.canvas.ComponentError.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "component-param", "component-param", 1099370170), (new cljs.core.Keyword(null, "component-param", "component-param", 1099370170)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "title", "title", 636505583), "Failed to mount component", 
  new cljs.core.Keyword(null, "message", "message", -406056002), d.message, new cljs.core.Keyword(null, "stack", "stack", -793405930), d.stack, new cljs.core.Keyword(null, "ex-data", "ex-data", -309040259), function() {
    var f = cljs.core.ex_data.call(null, d);
    if (cljs.core.truth_(f)) {
      var g = new goog.string.StringBuffer(), h = cljs.core._STAR_print_newline_STAR_, k = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = !0;
      cljs.core._STAR_print_fn_STAR_ = function(l) {
        return g.append(l);
      };
      try {
        cljs.pprint.pprint.call(null, f);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = k, cljs.core._STAR_print_newline_STAR_ = h;
      }
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(g);
    }
    return null;
  }()], null)], null)), e);
};
portfolio.components.canvas.render_scene = function(a, b) {
  b = cljs.core.__destructure_map.call(null, b);
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "scene", "scene", 1523800415)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "tools", "tools", -1241731990)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "opt", "opt", -794706369)), f = portfolio.components.canvas.get_iframe.call(null, a);
  b = function() {
    var H = null == f ? null : f.contentDocument;
    return null == H ? null : H.getElementById("canvas");
  }();
  var g = a.querySelector(".error-container");
  cljs.core.truth_(g) && (g.parentNode.removeChild(g), f.style.display = "block");
  try {
    var h = cljs.core.seq.call(null, d);
    g = null;
    for (var k = 0, l = 0;;) {
      if (l < k) {
        var m = cljs.core._nth.call(null, g, l);
        portfolio.views.canvas.protocols.prepare_canvas.call(null, m, a, e);
        l += 1;
      } else {
        var n = cljs.core.seq.call(null, h);
        if (n) {
          var p = n;
          if (cljs.core.chunked_seq_QMARK_.call(null, p)) {
            var r = cljs.core.chunk_first.call(null, p), u = cljs.core.chunk_rest.call(null, p);
            p = r;
            var z = cljs.core.count.call(null, r);
            h = u;
            g = p;
            k = z;
          } else {
            var D = cljs.core.first.call(null, p);
            portfolio.views.canvas.protocols.prepare_canvas.call(null, D, a, e);
            h = cljs.core.next.call(null, p);
            g = null;
            k = 0;
          }
          l = 0;
        } else {
          break;
        }
      }
    }
    portfolio.adapter.render_component.call(null, c, b);
    return setTimeout(function() {
      try {
        for (var H = cljs.core.seq.call(null, d), L = null, P = 0, S = 0;;) {
          if (S < P) {
            var U = cljs.core._nth.call(null, L, S);
            portfolio.views.canvas.protocols.finalize_canvas.call(null, U, a, e);
            S += 1;
          } else {
            var V = cljs.core.seq.call(null, H);
            if (V) {
              var q = V;
              if (cljs.core.chunked_seq_QMARK_.call(null, q)) {
                var t = cljs.core.chunk_first.call(null, q), v = cljs.core.chunk_rest.call(null, q);
                q = t;
                var w = cljs.core.count.call(null, t);
                H = v;
                L = q;
                P = w;
              } else {
                U = cljs.core.first.call(null, q), portfolio.views.canvas.protocols.finalize_canvas.call(null, U, a, e), H = cljs.core.next.call(null, q), L = null, P = 0;
              }
              S = 0;
            } else {
              return null;
            }
          }
        }
      } catch (x) {
        return portfolio.components.canvas.render_error.call(null, a, f, c, x);
      }
    }, 50);
  } catch (H) {
    return portfolio.components.canvas.render_error.call(null, a, f, c, H);
  }
};
portfolio.components.canvas.on_mounted = function(a, b) {
  return cljs.core.truth_(function() {
    var c = null == a ? null : a.contentDocument;
    return null == c ? null : c.getElementById("canvas");
  }()) ? b.call(null) : a.addEventListener("load", function(c) {
    c = a.contentDocument;
    c.documentElement.style.height = "auto";
    if (!cljs.core.truth_(c.getElementById("canvas"))) {
      var d = c.createElement.call(null, "div");
      d.id = "canvas";
      c.body.appendChild(d);
    }
    return b.call(null);
  });
};
portfolio.components.canvas.init_canvas = function(a, b, c) {
  a = portfolio.components.canvas.get_iframe_document.call(null, a);
  var d = a.head, e = cljs.core.atom.call(null, 0), f = function() {
    return cljs.core._EQ_.call(null, cljs.core.count.call(null, (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(b)), cljs.core.deref.call(null, e)) ? c.call(null) : null;
  };
  f.call(null);
  for (var g = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(b)), h = null, k = 0, l = 0;;) {
    if (l < k) {
      var m = cljs.core._nth.call(null, h, l), n = document.createElement("link");
      n.rel = "stylesheet";
      n.type = "text/css";
      n.href = m;
      n.addEventListener("load", function(u, z, D, H, L, P, S, U, V, q) {
        return function(t) {
          cljs.core.swap_BANG_.call(null, V, cljs.core.inc);
          return q.call(null);
        };
      }(g, h, k, l, n, m, a, d, e, f));
      d.appendChild(n);
      l += 1;
    } else {
      if (n = cljs.core.seq.call(null, g)) {
        m = n;
        if (cljs.core.chunked_seq_QMARK_.call(null, m)) {
          g = cljs.core.chunk_first.call(null, m), l = cljs.core.chunk_rest.call(null, m), h = g, k = cljs.core.count.call(null, g), g = l;
        } else {
          var p = cljs.core.first.call(null, m), r = document.createElement("link");
          r.rel = "stylesheet";
          r.type = "text/css";
          r.href = p;
          r.addEventListener("load", function(u, z, D, H, L, P, S, U, V, q, t, v) {
            return function(w) {
              cljs.core.swap_BANG_.call(null, t, cljs.core.inc);
              return v.call(null);
            };
          }(g, h, k, l, r, p, m, n, a, d, e, f));
          d.appendChild(r);
          g = cljs.core.next.call(null, m);
          h = null;
          k = 0;
        }
        l = 0;
      } else {
        break;
      }
    }
  }
  h = (new cljs.core.Keyword("viewport", "padding", "viewport/padding", -1583726021)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opt", "opt", -794706369)).cljs$core$IFn$_invoke$arity$1(b));
  d = cljs.core.nth.call(null, h, 0, null);
  f = cljs.core.nth.call(null, h, 1, null);
  g = cljs.core.nth.call(null, h, 2, null);
  h = cljs.core.nth.call(null, h, 3, null);
  cljs.core.truth_(d) && (a.body.style.paddingTop = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), "px"].join(""));
  cljs.core.truth_(f) && (a.body.style.paddingBottom = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(f), "px"].join(""));
  cljs.core.truth_(g) && (a.documentElement.style.paddingLeft = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(g), "px"].join(""));
  return cljs.core.truth_(h) ? a.documentElement.style.paddingRight = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), "px"].join("") : null;
};
portfolio.components.canvas.Canvas = dumdom.core.component.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), "#fff", new cljs.core.Keyword(null, "transition", "transition", 765692007), "width 0.25s, height 0.25s"], null)], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "iframe.canvas", "iframe.canvas", 2014956060), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), function() {
    var b = (new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : "/portfolio/canvas.html";
  }(), new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "border", "border", 1444987323), "none", new cljs.core.Keyword(null, "width", "width", -384071477), function() {
    var b = "number" === typeof(new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opt", "opt", -794706369)).cljs$core$IFn$_invoke$arity$1(a)) ? (new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opt", "opt", -794706369)).cljs$core$IFn$_invoke$arity$1(a)) : null;
    return cljs.core.truth_(b) ? b : "100%";
  }(), new cljs.core.Keyword(null, "height", "height", 1025178622), function() {
    var b = "number" === typeof(new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opt", "opt", -794706369)).cljs$core$IFn$_invoke$arity$1(a)) ? (new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opt", "opt", -794706369)).cljs$core$IFn$_invoke$arity$1(a)) : null;
    return cljs.core.truth_(b) ? b : "100%";
  }()], null)], null)], null)], null);
}, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/Canvas", new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840), function(a, b) {
  return portfolio.components.canvas.on_mounted.call(null, portfolio.components.canvas.get_iframe.call(null, a), function() {
    return portfolio.components.canvas.init_canvas.call(null, a, b, function() {
      return portfolio.components.canvas.render_scene.call(null, a, b);
    });
  });
}, new cljs.core.Keyword(null, "on-update", "on-update", 1680216496), function(a, b) {
  return portfolio.components.canvas.on_mounted.call(null, portfolio.components.canvas.get_iframe.call(null, a), function() {
    return portfolio.components.canvas.render_scene.call(null, a, b);
  });
}], null));
portfolio.components.canvas.Toolbar = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "buttons", "buttons", -1953831197));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nav", "nav", 719540477), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "background", "background", -863952629), "#fff", new cljs.core.Keyword(null, "border-bottom", "border-bottom", 2110948415), "1px solid #e5e5e5", new cljs.core.Keyword(null, "display", 
  "display", 242065432), "flex", new cljs.core.Keyword(null, "align-items", "align-items", -267946462), "center", new cljs.core.Keyword(null, "gap", "gap", 80255254), 20, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 20, new cljs.core.Keyword(null, "padding-right", "padding-right", -1250249681), 20], null)], null), function() {
    return function e(d) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, d);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l);
                    cljs.core.chunk_append.call(null, k, portfolio.views.canvas.protocols.render_toolbar_button.call(null, m));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            k = cljs.core.first.call(null, f);
            return cljs.core.cons.call(null, portfolio.views.canvas.protocols.render_toolbar_button.call(null, k), e.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, b);
  }()], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/Toolbar"], null));
portfolio.components.canvas.CanvasPanel = dumdom.core.component.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "border-top", "border-top", -158897573), "1px solid #ccc", new cljs.core.Keyword(null, "background", "background", -863952629), "#ffffff", new cljs.core.Keyword(null, "height", "height", 
  1025178622), cljs.core.truth_((new cljs.core.Keyword(null, "minimized?", "minimized?", 1807883709)).cljs$core$IFn$_invoke$arity$1(a)) ? "40px" : "30%", new cljs.core.Keyword(null, "transition", "transition", 765692007), "height 0.25s", new cljs.core.Keyword(null, "position", "position", -2011731912), "relative"], null)], null), function() {
    var b = (new cljs.core.Keyword(null, "button", "button", 1456579943)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "right", "right", -452581833), 20, new cljs.core.Keyword(null, "top", "top", -1856271961), 
    10], null)], null), portfolio.components.triangle.TriangleButton.call(null, b)], null) : null;
  }(), portfolio.components.tab_bar.TabBar.call(null, a), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "content", "content", 15833224)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : portfolio.view.render_view.call(null, b);
  }()], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/CanvasPanel"], null));
portfolio.components.canvas.CanvasHeader = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "url", "url", 276297046));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "description", "description", -1428560544));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin", "margin", -995903681), 20], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2.h3", "h2.h3", 
  132008135), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin", "margin", -995903681), "0 0 10px"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), c], null), a], null)], 
  null), cljs.core.empty_QMARK_.call(null, b) ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), b], null)], null);
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/CanvasHeader", new cljs.core.Keyword(null, "keyfn", "keyfn", 780060332), new cljs.core.Keyword(null, "title", "title", 636505583)], null));
portfolio.components.canvas.render_canvas = function(a) {
  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a)) ? portfolio.components.canvas.CanvasHeader.call(null, a) : null, cljs.core.truth_((new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.truth_((new cljs.core.Keyword(null, "component", "component", 
  1555936782)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(a))) ? portfolio.components.canvas.Canvas.call(null, a) : portfolio.components.canvas.ComponentError.call(null, (new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(a)) : null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "separator", "separator", -1628749125), (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)) ? 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), "separator", new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 20], null)], null)], null) : null], null));
};
portfolio.components.canvas.Problem = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "text", "text", -1790561697));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "code", "code", 1586293142));
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "background", "background", -863952629), "#fff", new cljs.core.Keyword(null, "padding", "padding", 1660304693), 20], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "h2.h2", "h2.h2", -608300904), a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p.mod", "p.mod", 441848325), c], null), portfolio.components.code.Code.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "code", "code", 1586293142), b], null))], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/Problem"], null));
portfolio.components.canvas.direction = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "rows", "rows", 850049680), "column", new cljs.core.Keyword(null, "cols", "cols", -1914801295), "row"], null);
portfolio.components.canvas.render_layout = function(a) {
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "rows", "rows", 850049680), null, new cljs.core.Keyword(null, "cols", "cols", -1914801295), null], null), null)).call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)))) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), 1, new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 364609438), 
    portfolio.components.canvas.direction.call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "justify-content", "justify-content", -1990475787), "space-evenly", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null)], null), cljs.core.interpose.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), 
    new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "rows", "rows", 850049680), (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.Keyword(null, "border-top", "border-top", -158897573) : new cljs.core.Keyword(null, "border-left", "border-left", -1150760178), "5px solid #ddd"])], null)], 
    null), cljs.core.map.call(null, portfolio.components.canvas.render_layout, (new cljs.core.Keyword(null, "xs", "xs", 649443341)).cljs$core$IFn$_invoke$arity$1(a)))], null);
  }
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "toolbar", "toolbar", -1172789065));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "canvases", "canvases", -441653731));
  var c = cljs.core.PersistentVector, d = cljs.core.PersistentVector.EMPTY_NODE, e = new cljs.core.Keyword(null, "div", "div", 1057191632), f = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), 1, new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 364609438), 
  "column", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null)], null);
  a = null == a ? null : portfolio.components.canvas.Toolbar.call(null, a);
  return new c(null, 4, 5, d, [e, f, a, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "scroll", new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), "1"], null)], null), cljs.core.mapcat.call(null, 
  portfolio.components.canvas.render_canvas, cljs.core.interpose.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "separator", "separator", -1628749125)], null), b))], null)], null);
};
portfolio.components.canvas.CanvasView = dumdom.core.component.call(null, function(a) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "background", "background", -863952629), "#eee", new cljs.core.Keyword(null, "flex-grow", "flex-grow", 1865160747), 1, new cljs.core.Keyword(null, "display", "display", 242065432), 
  "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 364609438), "column", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null)], null), function() {
    var b = (new cljs.core.Keyword(null, "problems", "problems", 2097327077)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "scroll"], null)], null), cljs.core.map.call(null, portfolio.components.canvas.Problem, b)], null) : null;
  }(), portfolio.components.canvas.render_layout.call(null, a), function() {
    var b = null == a ? null : (new cljs.core.Keyword(null, "panel", "panel", -558637456)).cljs$core$IFn$_invoke$arity$1(a);
    return null == b ? null : portfolio.components.canvas.CanvasPanel.call(null, b);
  }()], null);
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas/CanvasView", new cljs.core.Keyword(null, "keyfn", "keyfn", 780060332), new cljs.core.Keyword(null, "id", "id", -1388402092)], null));
portfolio.views.canvas.view_impl = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.view", "render-view", "portfolio.view/render-view", -822188357, null), new cljs.core.Var(function() {
  return portfolio.components.canvas.CanvasView;
}, new cljs.core.Symbol("portfolio.components.canvas", "CanvasView", "portfolio.components.canvas/CanvasView", -1195790877, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas", "portfolio.components.canvas", -1989616955, null), new cljs.core.Symbol(null, "CanvasView", "CanvasView", 1270527477, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas.cljs", 
27, 1, 223, 223, cljs.core.List.EMPTY, "", cljs.core.truth_(portfolio.components.canvas.CanvasView) ? portfolio.components.canvas.CanvasView.cljs$lang$test : null]))], null);
cljs.core.PersistentArrayMap.prototype.portfolio$views$canvas$protocols$ICanvasToolValue$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.portfolio$views$canvas$protocols$ICanvasToolValue$get_tool_value$arity$3 = function(a, b, c) {
  return cljs.core.get_in.call(null, b, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(this), c, new cljs.core.Keyword(null, "value", "value", 305978217)], null));
};
portfolio.views.canvas.gallery_QMARK_ = function(a, b) {
  return cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(b), new cljs.core.Keyword(null, "namespace", "namespace", -377510372)) || 1 < cljs.core.count.call(null, (new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721)).cljs$core$IFn$_invoke$arity$1(a));
};
portfolio.views.canvas.inflate_layout = function(a) {
  return cljs.core.vector_QMARK_.call(null, a) ? cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a)) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "xs", "xs", 649443341), cljs.core.first.call(null, a)], null) : new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "rows", "rows", 
  850049680), new cljs.core.Keyword(null, "xs", "xs", 649443341), function() {
    return function d(c) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var e = cljs.core.seq.call(null, c);
          if (e) {
            if (cljs.core.chunked_seq_QMARK_.call(null, e)) {
              var f = cljs.core.chunk_first.call(null, e), g = cljs.core.count.call(null, f), h = cljs.core.chunk_buffer.call(null, g);
              a: {
                for (var k = 0;;) {
                  if (k < g) {
                    var l = cljs.core._nth.call(null, f, k);
                    cljs.core.chunk_append.call(null, h, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "xs", "xs", 649443341), l], null));
                    k += 1;
                  } else {
                    f = !0;
                    break a;
                  }
                }
              }
              return f ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), d.call(null, cljs.core.chunk_rest.call(null, e))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, h), null);
            }
            h = cljs.core.first.call(null, e);
            return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "xs", "xs", 649443341), h], null), d.call(null, cljs.core.rest.call(null, e)));
          }
          return null;
        }
      }, null, null);
    }.call(null, a);
  }()], null) : a;
};
portfolio.views.canvas.get_layout = function(a, b, c) {
  var d = cljs.core.PersistentArrayMap, e = new cljs.core.Keyword(null, "layout", "layout", -2120940921), f = portfolio.views.canvas.inflate_layout, g = f.call;
  a = cljs.core.get_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "layout", "layout", -2120940921), c], null));
  b = cljs.core.truth_(a) ? a : b;
  return new d(null, 2, [e, g.call(f, null, b), new cljs.core.Keyword(null, "source", "source", -433931539), c], null);
};
portfolio.views.canvas.get_current_layout = function(a, b, c) {
  if (portfolio.views.canvas.gallery_QMARK_.call(null, a, b)) {
    return portfolio.views.canvas.get_layout.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772), new cljs.core.Keyword(null, "auto", "auto", -566279492)], null), (new cljs.core.Keyword("canvas", "gallery-defaults", "canvas/gallery-defaults", 
    119496358)).cljs$core$IFn$_invoke$arity$1(a))], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("portfolio.views.canvas", "gallery-default", "portfolio.views.canvas/gallery-default", 85792540)], null));
  }
  b = function() {
    var d = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721)).cljs$core$IFn$_invoke$arity$1(a)));
    return cljs.core.truth_(d) ? portfolio.views.canvas.get_layout.call(null, a, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721)).cljs$core$IFn$_invoke$arity$1(a)))], null)) : null;
  }();
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = function() {
    var d = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-namespace", "current-namespace", -1512089502)).cljs$core$IFn$_invoke$arity$1(a));
    return cljs.core.truth_(d) ? portfolio.views.canvas.get_layout.call(null, a, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-namespace", "current-namespace", -1512089502)).cljs$core$IFn$_invoke$arity$1(a))], null)) : null;
  }();
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = function() {
    var d = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-collection", "current-collection", -1148466995)).cljs$core$IFn$_invoke$arity$1(a));
    return cljs.core.truth_(d) ? portfolio.views.canvas.get_layout.call(null, a, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "collection", "collection", -683361892), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-collection", "current-collection", -1148466995)).cljs$core$IFn$_invoke$arity$1(a))], null)) : null;
  }();
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = function() {
    var d = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(d) ? portfolio.views.canvas.get_layout.call(null, a, d, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-layout", "state-layout", 2065724593)], null)) : null;
  }();
  if (cljs.core.truth_(b)) {
    return b;
  }
  b = function() {
    var d = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1(c);
    return cljs.core.truth_(d) ? portfolio.views.canvas.get_layout.call(null, a, d, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "view", "view", 1247994814), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(c)], null)) : null;
  }();
  return cljs.core.truth_(b) ? b : portfolio.views.canvas.get_layout.call(null, a, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY], null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("layout", "default", "layout/default", -941526574)], null));
};
portfolio.views.canvas.get_current_addon = function(a, b) {
  a = null == a ? null : (new cljs.core.Keyword(null, "query-params", "query-params", 900640534)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : (new cljs.core.Keyword(null, "addon", "addon", 931813532)).cljs$core$IFn$_invoke$arity$1(a);
  a = null == a ? null : cljs.core.keyword.call(null, a);
  a = cljs.core.truth_(a) ? cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([a]), new cljs.core.Keyword(null, "id", "id", -1388402092)), b)) : null;
  return cljs.core.truth_(a) ? a : cljs.core.first.call(null, b);
};
portfolio.views.canvas.prepare_panel = function(a, b, c, d) {
  var e = portfolio.views.canvas.get_current_addon.call(null, b, d), f = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("canvas", "panel", "canvas/panel", 892496792), new cljs.core.Keyword(null, "minimized?", "minimized?", 1807883709)], null);
  c = portfolio.views.canvas.protocols.prepare_panel_content.call(null, e, a, c);
  a = cljs.core.get_in.call(null, a, f, cljs.core.not.call(null, c));
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "tabs", "tabs", -779855354), function() {
    return function k(h) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var l = cljs.core.seq.call(null, h);
          if (l) {
            if (cljs.core.chunked_seq_QMARK_.call(null, l)) {
              var m = cljs.core.chunk_first.call(null, l), n = cljs.core.count.call(null, m), p = cljs.core.chunk_buffer.call(null, n);
              return function() {
                for (var u = 0;;) {
                  if (u < n) {
                    var z = cljs.core._nth.call(null, m, u), D = cljs.core.chunk_append, H = D.call, L = p;
                    var P = z;
                    P = cljs.core._EQ_.call(null, e, z) ? cljs.core.assoc.call(null, P, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), !0) : P;
                    z = cljs.core.not_EQ_.call(null, e, z) ? cljs.core.assoc.call(null, P, new cljs.core.Keyword(null, "url", "url", 276297046), portfolio.router.get_url.call(null, cljs.core.assoc_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "addon", "addon", 931813532)], null), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(z)))) : 
                    P;
                    H.call(D, null, L, z);
                    u += 1;
                  } else {
                    return !0;
                  }
                }
              }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, p), k.call(null, cljs.core.chunk_rest.call(null, l))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, p), null);
            }
            var r = cljs.core.first.call(null, l);
            return cljs.core.cons.call(null, function() {
              var u = r;
              u = cljs.core._EQ_.call(null, e, r) ? cljs.core.assoc.call(null, u, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), !0) : u;
              return cljs.core.not_EQ_.call(null, e, r) ? cljs.core.assoc.call(null, u, new cljs.core.Keyword(null, "url", "url", 276297046), portfolio.router.get_url.call(null, cljs.core.assoc_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "addon", "addon", 931813532)], null), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(r)))) : 
              u;
            }(), k.call(null, cljs.core.rest.call(null, l)));
          }
          return null;
        }
      }, null, null);
    }.call(null, d);
  }(), new cljs.core.Keyword(null, "minimized?", "minimized?", 1807883709), a, new cljs.core.Keyword(null, "button", "button", 1456579943), cljs.core.truth_(a) ? new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Maximize", new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), f], null)], null), new cljs.core.Keyword(null, "direction", "direction", -633359395), new cljs.core.Keyword(null, "up", "up", -269712113)], null) : new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Minimize", new cljs.core.Keyword(null, "direction", "direction", -633359395), new cljs.core.Keyword(null, "down", "down", 1565245570), new cljs.core.Keyword(null, "actions", "actions", 
  -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), f, !0], null)], null)], null), new cljs.core.Keyword(null, "content", "content", 15833224), c], null);
};
portfolio.views.canvas.get_tool_defaults = function(a) {
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, new cljs.core.Keyword(null, "default-value", "default-value", 232220170), a));
};
portfolio.views.canvas.toolbar_value_QMARK_ = function(a) {
  var b = null != a ? cljs.core.PROTOCOL_SENTINEL === a.portfolio$views$canvas$protocols$ICanvasToolValue$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasToolValue, a) : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasToolValue, a);
  return b ? b : cljs.core.ifn_QMARK_.call(null, cljs.core.get.call(null, cljs.core.meta.call(null, a), new cljs.core.Symbol("portfolio.views.canvas.protocols", "get-tool-value", "portfolio.views.canvas.protocols/get-tool-value", -1168238097, null)));
};
portfolio.views.canvas.get_tool_values = function(a, b, c) {
  return cljs.core.apply.call(null, cljs.core.merge, cljs.core.map.call(null, function(d) {
    return portfolio.views.canvas.protocols.get_tool_value.call(null, d, a, b);
  }, cljs.core.filter.call(null, portfolio.views.canvas.toolbar_value_QMARK_, c)));
};
portfolio.views.canvas.prepare_canvas = function(a, b) {
  var c = (new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "scene", "scene", 1523800415)).cljs$core$IFn$_invoke$arity$1(b));
  b = cljs.core.assoc.call(null, b, new cljs.core.Keyword(null, "opt", "opt", -794706369), a);
  try {
    return cljs.core.ifn_QMARK_.call(null, c) ? cljs.core.assoc_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), new cljs.core.Keyword(null, "component", "component", 1555936782)], null), c.call(null, a)) : b;
  } catch (d) {
    return a = d, cljs.core.assoc_in.call(null, b, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), new cljs.core.Keyword(null, "error", "error", -978969032)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "message", "message", -406056002), a.message, new cljs.core.Keyword(null, "ex-data", "ex-data", -309040259), portfolio.code.code_str.call(null, cljs.core.ex_data.call(null, 
    a)), new cljs.core.Keyword(null, "stack", "stack", -793405930), a.stack, new cljs.core.Keyword(null, "title", "title", 636505583), "Failed to render component"], null));
  }
};
portfolio.views.canvas.toolbar_button_QMARK_ = function(a) {
  var b = null != a ? cljs.core.PROTOCOL_SENTINEL === a.portfolio$views$canvas$protocols$ICanvasToolbarButtonData$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasToolbarButtonData, a) : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasToolbarButtonData, a);
  return b ? b : cljs.core.ifn_QMARK_.call(null, cljs.core.get.call(null, cljs.core.meta.call(null, a), new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null)));
};
portfolio.views.canvas.prepare_layout_xs = function(a, b, c, d, e, f, g) {
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "rows", "rows", 850049680), null, new cljs.core.Keyword(null, "cols", "cols", -1914801295), null], null), null)).call(null, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(g)))) {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(g), new cljs.core.Keyword(null, "xs", "xs", 649443341), function() {
      return function r(p) {
        return new cljs.core.LazySeq(null, function() {
          for (;;) {
            var u = cljs.core.seq.call(null, p);
            if (u) {
              if (cljs.core.chunked_seq_QMARK_.call(null, u)) {
                var z = cljs.core.chunk_first.call(null, u), D = cljs.core.count.call(null, z), H = cljs.core.chunk_buffer.call(null, D);
                a: {
                  for (var L = 0;;) {
                    if (L < D) {
                      var P = cljs.core._nth.call(null, z, L), S = cljs.core.nth.call(null, P, 0, null);
                      P = cljs.core.nth.call(null, P, 1, null);
                      cljs.core.chunk_append.call(null, H, portfolio.views.canvas.prepare_layout_xs.call(null, a, b, c, d, e, cljs.core.conj.call(null, f, S), P));
                      L += 1;
                    } else {
                      z = !0;
                      break a;
                    }
                  }
                }
                return z ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, H), r.call(null, cljs.core.chunk_rest.call(null, u))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, H), null);
              }
              z = cljs.core.first.call(null, u);
              H = cljs.core.nth.call(null, z, 0, null);
              z = cljs.core.nth.call(null, z, 1, null);
              return cljs.core.cons.call(null, portfolio.views.canvas.prepare_layout_xs.call(null, a, b, c, d, e, cljs.core.conj.call(null, f, H), z), r.call(null, cljs.core.rest.call(null, u)));
            }
            return null;
          }
        }, null, null);
      }.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.range.call(null), (new cljs.core.Keyword(null, "xs", "xs", 649443341)).cljs$core$IFn$_invoke$arity$1(g)));
    }()], null);
  }
  var h = cljs.core.concat.call(null, c, f), k = cljs.core.merge.call(null, portfolio.views.canvas.get_tool_defaults.call(null, (new cljs.core.Keyword(null, "tools", "tools", -1241731990)).cljs$core$IFn$_invoke$arity$1(d)), g, portfolio.views.canvas.get_tool_values.call(null, a, h, (new cljs.core.Keyword(null, "tools", "tools", -1241731990)).cljs$core$IFn$_invoke$arity$1(d)));
  if (cljs.core.seq.call(null, e)) {
    var l = cljs.core.keep.call(null, function(n) {
      return portfolio.views.canvas.protocols.prepare_toolbar_button.call(null, n, a, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857), h, new cljs.core.Keyword(null, "pane-options", "pane-options", -1713668629), k, new cljs.core.Keyword(null, "pane-path", "pane-path", -316302892), f, new cljs.core.Keyword(null, "layout-path", "layout-path", -654991240), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "layout", "layout", -2120940921), c], null), new cljs.core.Keyword(null, "layout", "layout", -2120940921), b, new cljs.core.Keyword(null, "config-source", "config-source", -1282385545), c], null));
    }, cljs.core.filter.call(null, portfolio.views.canvas.toolbar_button_QMARK_, (new cljs.core.Keyword(null, "tools", "tools", -1241731990)).cljs$core$IFn$_invoke$arity$1(d))), m = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), new cljs.core.Keyword(null, "pane", "pane", 1593450723), new cljs.core.Keyword(null, "canvases", "canvases", -441653731), cljs.core.map.call(null, cljs.core.partial.call(null, portfolio.views.canvas.prepare_canvas, k), 
    e)], null);
    return cljs.core.seq.call(null, l) ? cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "toolbar", "toolbar", -1172789065), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "buttons", "buttons", -1953831197), l], null)) : m;
  }
  return null;
};
portfolio.views.canvas.canvas_tool_QMARK_ = function(a) {
  var b = null != a ? cljs.core.PROTOCOL_SENTINEL === a.portfolio$views$canvas$protocols$ICanvasTool$ ? !0 : a.cljs$lang$protocol_mask$partition$ ? !1 : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasTool, a) : cljs.core.native_satisfies_QMARK_.call(null, portfolio.views.canvas.protocols.ICanvasTool, a);
  return b ? b : cljs.core.ifn_QMARK_.call(null, cljs.core.get.call(null, cljs.core.meta.call(null, a), new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null))) && cljs.core.ifn_QMARK_.call(null, cljs.core.get.call(null, cljs.core.meta.call(null, a), new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null)));
};
portfolio.views.canvas.prepare_layout = function(a, b, c, d, e, f) {
  var g = cljs.core.__destructure_map.call(null, d);
  d = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "layout", "layout", -2120940921));
  g = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "source", "source", -433931539));
  var h = function() {
    return function m(l) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var n = cljs.core.seq.call(null, l);
          if (n) {
            if (cljs.core.chunked_seq_QMARK_.call(null, n)) {
              var p = cljs.core.chunk_first.call(null, n), r = cljs.core.count.call(null, p), u = cljs.core.chunk_buffer.call(null, r);
              return function() {
                for (var D = 0;;) {
                  if (D < r) {
                    var H = cljs.core._nth.call(null, p, D), L = cljs.core.chunk_append, P = L.call, S = u;
                    var U = cljs.core.filter.call(null, portfolio.views.canvas.canvas_tool_QMARK_, (new cljs.core.Keyword(null, "tools", "tools", -1241731990)).cljs$core$IFn$_invoke$arity$1(c)), V = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), H], null);
                    V = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, V, new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563), (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(a)) : V;
                    V = cljs.core.truth_((new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, V, new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618), (new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618)).cljs$core$IFn$_invoke$arity$1(a)) : V;
                    U = cljs.core.seq.call(null, U) ? cljs.core.assoc.call(null, V, new cljs.core.Keyword(null, "tools", "tools", -1241731990), U) : V;
                    H = cljs.core.truth_(f) ? cljs.core.assoc.call(null, U, new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(H), new cljs.core.Keyword(null, "url", "url", 276297046), portfolio.core.get_scene_url.call(null, b, H), new cljs.core.Keyword(null, "description", "description", -1428560544), (new cljs.core.Keyword(null, "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(H)) : 
                    U;
                    P.call(L, null, S, H);
                    D += 1;
                  } else {
                    return !0;
                  }
                }
              }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, u), m.call(null, cljs.core.chunk_rest.call(null, n))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, u), null);
            }
            var z = cljs.core.first.call(null, n);
            return cljs.core.cons.call(null, function() {
              var D = cljs.core.filter.call(null, portfolio.views.canvas.canvas_tool_QMARK_, (new cljs.core.Keyword(null, "tools", "tools", -1241731990)).cljs$core$IFn$_invoke$arity$1(c)), H = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "scene", "scene", 1523800415), z], null);
              H = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, H, new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563), (new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563)).cljs$core$IFn$_invoke$arity$1(a)) : H;
              H = cljs.core.truth_((new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.assoc.call(null, H, new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618), (new cljs.core.Keyword(null, "canvas-path", "canvas-path", 658132618)).cljs$core$IFn$_invoke$arity$1(a)) : H;
              D = cljs.core.seq.call(null, D) ? cljs.core.assoc.call(null, H, new cljs.core.Keyword(null, "tools", "tools", -1241731990), D) : H;
              return cljs.core.truth_(f) ? cljs.core.assoc.call(null, D, new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(z), new cljs.core.Keyword(null, "url", "url", 276297046), portfolio.core.get_scene_url.call(null, b, z), new cljs.core.Keyword(null, "description", "description", -1428560544), (new cljs.core.Keyword(null, "description", "description", -1428560544)).cljs$core$IFn$_invoke$arity$1(z)) : 
              D;
            }(), m.call(null, cljs.core.rest.call(null, n)));
          }
          return null;
        }
      }, null, null);
    }.call(null, e);
  }();
  return cljs.core.assoc.call(null, portfolio.views.canvas.prepare_layout_xs.call(null, a, d, g, c, h, cljs.core.PersistentVector.EMPTY, d), new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.truth_(f) ? (new cljs.core.Keyword(null, "namespace", "namespace", -377510372)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "current-namespace", "current-namespace", -1512089502)).cljs$core$IFn$_invoke$arity$1(a)) : new cljs.core.Keyword(null, "single-scene", "single-scene", -30974946));
};
portfolio.views.canvas.prepare_canvas_view = function(a, b, c) {
  var d = portfolio.views.canvas.get_current_layout.call(null, b, c, a), e = (new cljs.core.Keyword(null, "current-scenes", "current-scenes", 1736940721)).cljs$core$IFn$_invoke$arity$1(b), f = portfolio.views.canvas.gallery_QMARK_.call(null, b, c), g = cljs.core.with_meta, h = g.call;
  var k = (new cljs.core.Keyword(null, "problems", "problems", 2097327077)).cljs$core$IFn$_invoke$arity$1(a);
  a = cljs.core.truth_(k) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "problems", "problems", 2097327077), k], null) : cljs.core.assoc.call(null, portfolio.views.canvas.prepare_layout.call(null, b, c, a, d, e, f), new cljs.core.Keyword(null, "panel", "panel", -558637456), cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, e)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "addons", "addons", -1518903852)).cljs$core$IFn$_invoke$arity$1(a)) ? portfolio.views.canvas.prepare_panel.call(null, 
  b, c, cljs.core.first.call(null, e), (new cljs.core.Keyword(null, "addons", "addons", -1518903852)).cljs$core$IFn$_invoke$arity$1(a)) : null);
  return h.call(g, null, a, portfolio.views.canvas.view_impl);
};
portfolio.views.canvas.data_impl = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.view", "prepare-data", "portfolio.view/prepare-data", -1000148919, null), new cljs.core.Var(function() {
  return portfolio.views.canvas.prepare_canvas_view;
}, new cljs.core.Symbol("portfolio.views.canvas", "prepare-canvas-view", "portfolio.views.canvas/prepare-canvas-view", -102305783, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas", "portfolio.views.canvas", 1374113554, null), new cljs.core.Symbol(null, "prepare-canvas-view", "prepare-canvas-view", 1078914127, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas.cljs", 
26, 1, 164, 164, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "view", "view", -1406440955, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "location", "location", -838836381, null)], null)), null, cljs.core.truth_(portfolio.views.canvas.prepare_canvas_view) ? portfolio.views.canvas.prepare_canvas_view.cljs$lang$test : null]))], null);
portfolio.views.canvas.describe_missing_tool_id = function(a) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Badly configured canvas tool", new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "Canvas tool extensions must have an ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "code", "code", 
  1586293142), ":id"], null), " or they won't work correctly. Please inspect this tool:"], null), new cljs.core.Keyword(null, "code", "code", 1586293142), portfolio.code.code_str.call(null, a)], null);
};
portfolio.views.canvas.create_canvas = function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "tools", "tools", -1241731990));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "addons", "addons", -1518903852)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "layout", "layout", -2120940921));
  b = cljs.core.with_meta;
  var e = b.call, f = cljs.core.PersistentArrayMap, g = new cljs.core.Keyword(null, "id", "id", -1388402092), h = new cljs.core.Keyword("portfolio.views.canvas", "canvas", "portfolio.views.canvas/canvas", 225457385), k = new cljs.core.Keyword(null, "title", "title", 636505583), l = new cljs.core.Keyword(null, "tools", "tools", -1241731990), m = cljs.core.filter.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), a), n = new cljs.core.Keyword(null, "addons", "addons", -1518903852), p = 
  new cljs.core.Keyword(null, "layout", "layout", -2120940921);
  d = cljs.core.truth_(d) ? d : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY], null)], null);
  return e.call(b, null, new f(null, 6, [g, h, k, "Canvas", l, m, n, c, p, d, new cljs.core.Keyword(null, "problems", "problems", 2097327077), cljs.core.seq.call(null, cljs.core.map.call(null, portfolio.views.canvas.describe_missing_tool_id, cljs.core.remove.call(null, new cljs.core.Keyword(null, "id", "id", -1388402092), a)))], null), portfolio.views.canvas.data_impl);
};
portfolio.components.popup_menu = {};
portfolio.components.popup_menu.PopupMenu = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "options", "options", 99638489));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "left", "left", -399115937), "50%"], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "box-shadow", "box-shadow", 1600206755), new cljs.core.Keyword(null, "transform", "transform", 1381301764), new cljs.core.Keyword(null, "margin-top", "margin-top", 392161226), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "background", 
  "background", -863952629), new cljs.core.Keyword(null, "z-index", "z-index", 1892827090), new cljs.core.Keyword(null, "padding", "padding", 1660304693), new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.Keyword(null, "border-radius", "border-radius", 419594011)], ["rgba(0, 0, 0, 0.1) 0px 1px 5px 0px", "translateX(-50%)", 6, 200, "#fff", 1, "10px 0", "fixed", 4])], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "border-style", "border-style", -485574304), "solid", new cljs.core.Keyword(null, "transform", "transform", 1381301764), "translate3d(-50%, 0px, 0px)", new cljs.core.Keyword(null, "left", "left", -399115937), "50%", new cljs.core.Keyword(null, 
  "top", "top", -1856271961), -8, new cljs.core.Keyword(null, "border-width", "border-width", -1512605390), "0px 8px 8px", new cljs.core.Keyword(null, "border-color", "border-color", -2059162761), "transparent transparent rgba(255, 255, 255, 0.95)"], null)], null)], null), function() {
    return function e(d) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, d);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l), n = cljs.core.__destructure_map.call(null, m);
                    m = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "title", "title", 636505583));
                    var p = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
                    n = cljs.core.get.call(null, n, new cljs.core.Keyword(null, "actions", "actions", -812656882));
                    cljs.core.chunk_append.call(null, k, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button.button.hoverable", "button.button.hoverable", 1635518314), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(p) ? "#f8f8f8" : null, new cljs.core.Keyword(null, 
                    "font-weight", "font-weight", 2085804583), cljs.core.truth_(p) ? "bold" : null, new cljs.core.Keyword(null, "width", "width", -384071477), "100%", new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(n) ? "pointer" : "default", new cljs.core.Keyword(null, "text-align", "text-align", 1786091845), "left", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px"], null), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), n], 
                    null), m], null));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            k = cljs.core.first.call(null, f);
            h = cljs.core.__destructure_map.call(null, k);
            k = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "title", "title", 636505583));
            g = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "selected?", "selected?", -742502788));
            h = cljs.core.get.call(null, h, new cljs.core.Keyword(null, "actions", "actions", -812656882));
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button.button.hoverable", "button.button.hoverable", 1635518314), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_(g) ? "#f8f8f8" : null, new cljs.core.Keyword(null, 
            "font-weight", "font-weight", 2085804583), cljs.core.truth_(g) ? "bold" : null, new cljs.core.Keyword(null, "width", "width", -384071477), "100%", new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), cljs.core.truth_(h) ? "pointer" : "default", new cljs.core.Keyword(null, "text-align", "text-align", 1786091845), "left", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px"], null), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), h], null), 
            k], null), e.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, b);
  }()], null)], null);
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.popup-menu/PopupMenu", new cljs.core.Keyword(null, "on-render", "on-render", 2096729391), function(a, b) {
  b = a.getBoundingClientRect().left;
  var c = a.firstChild.getBoundingClientRect().width, d = a.parentNode.getBoundingClientRect().width;
  return 0 > b - c / 2 ? (a.style.left = "0", a.firstChild.style.transform = null, a.firstChild.firstChild.style.left = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d / 2), "px"].join("")) : null;
}], null));
portfolio.components.canvas_toolbar_buttons = {};
portfolio.components.canvas_toolbar_buttons.MenuButton = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "text", "text", -1790561697));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "icon", "icon", 1679606541)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "title", "title", 636505583)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "align", "align", 1964212802)), f = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "menu", "menu", 352255198)), g = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "active?", "active?", 459499776));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "actions", "actions", -812656882));
  var h = cljs.core.PersistentVector, k = cljs.core.PersistentVector.EMPTY_NODE, l = new cljs.core.Keyword(null, "span", "span", 1394872991), m = cljs.core.PersistentArrayMap, n = new cljs.core.Keyword(null, "style", "style", -496642736), p = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "position", "position", -2011731912), "relative"], null);
  e = cljs.core._EQ_.call(null, e, new cljs.core.Keyword(null, "right", "right", -452581833)) ? cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "flex", "flex", -1425124628), "1", new cljs.core.Keyword(null, "justify-content", "justify-content", -1990475787), "flex-end") : p;
  return new h(null, 4, 5, k, [l, new m(null, 1, [n, e], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button.button.boldable", "button.button.boldable", 34576834), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), cljs.core.truth_(d) ? d : a, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", 
  "color", 1011675173), cljs.core.truth_(f) ? "#1ea7fd" : "#000", new cljs.core.Keyword(null, "display", "display", 242065432), "block", new cljs.core.Keyword(null, "font-weight", "font-weight", 2085804583), cljs.core.truth_(g) ? "bold" : null, new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 0", new cljs.core.Keyword(null, "width", "width", -384071477), cljs.core.truth_(c) ? 20 : null], null), new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), b], null), cljs.core.truth_(c) ? 
  new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "block"], null)], null), c], null) : null, a], null), null == f ? null : portfolio.components.popup_menu.PopupMenu.call(null, f)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas-toolbar-buttons/MenuButton"], null));
portfolio.components.canvas_toolbar_buttons.Button = portfolio.components.canvas_toolbar_buttons.MenuButton;
portfolio.components.canvas_toolbar_buttons.ButtonGroup = dumdom.core.component.call(null, function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "buttons", "buttons", -1953831197));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "flex-direction", "flex-direction", 364609438), "row", new cljs.core.Keyword(null, "gap", "gap", 80255254), 10], 
  null)], null), function() {
    return function e(d) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var f = cljs.core.seq.call(null, d);
          if (f) {
            if (cljs.core.chunked_seq_QMARK_.call(null, f)) {
              var g = cljs.core.chunk_first.call(null, f), h = cljs.core.count.call(null, g), k = cljs.core.chunk_buffer.call(null, h);
              a: {
                for (var l = 0;;) {
                  if (l < h) {
                    var m = cljs.core._nth.call(null, g, l);
                    cljs.core.chunk_append.call(null, k, portfolio.views.canvas.protocols.render_toolbar_button.call(null, m));
                    l += 1;
                  } else {
                    g = !0;
                    break a;
                  }
                }
              }
              return g ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), e.call(null, cljs.core.chunk_rest.call(null, f))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, k), null);
            }
            k = cljs.core.first.call(null, f);
            return cljs.core.cons.call(null, portfolio.views.canvas.protocols.render_toolbar_button.call(null, k), e.call(null, cljs.core.rest.call(null, f)));
          }
          return null;
        }
      }, null, null);
    }.call(null, b);
  }()], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "portfolio.components.canvas-toolbar-buttons/ButtonGroup"], null));
portfolio.views.canvas.addons = {};
portfolio.views.canvas.addons.get_expand_path = function(a) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("canvas", "tools", "canvas/tools", -491389486), a, new cljs.core.Keyword(null, "expanded", "expanded", -3020742)], null);
};
portfolio.views.canvas.addons.get_custom_tool_source_title = function(a) {
  a = cljs.core.nth.call(null, a, 0, null);
  a = a instanceof cljs.core.Keyword ? a.fqn : null;
  switch(a) {
    case "scene":
      return "Scene config";
    case "namespace":
      return "NS config";
    case "collection":
      return "Collection config";
    case "state-layout":
      return "Global config";
    case "view":
      return "Canvas config";
    case "portfolio.views.canvas/gallery-default":
      return "Default config (gallery)";
    case "layout/default":
      return "Default config";
    default:
      throw Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(a)].join(""));
  }
};
portfolio.views.canvas.addons.get_current_value = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "pane-options", "pane-options", -1713668629));
  b = portfolio.views.canvas.protocols.get_tool_value.call(null, a, b, d);
  a = cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "default-value", "default-value", 232220170)).cljs$core$IFn$_invoke$arity$1(a);
  b = cljs.core.PersistentArrayMap;
  d = new cljs.core.Keyword(null, "value", "value", 305978217);
  var e = new cljs.core.Keyword(null, "current-value", "current-value", 2066017989), f = cljs.core.map_QMARK_.call(null, a);
  c = f ? cljs.core.not_empty.call(null, cljs.core.select_keys.call(null, c, cljs.core.keys.call(null, a))) : f;
  return new b(null, 2, [d, a, e, c], null);
};
portfolio.views.canvas.addons.prepare_tool_menu = function(a, b, c) {
  b = portfolio.views.canvas.addons.get_current_value.call(null, a, b, c);
  b = cljs.core.__destructure_map.call(null, b);
  var d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "value", "value", 305978217)), e = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "current-value", "current-value", 2066017989)), f = cljs.core.truth_(cljs.core.truth_(e) ? cljs.core.not_EQ_.call(null, e, d) : e) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), portfolio.views.canvas.addons.get_custom_tool_source_title.call(null, 
  (new cljs.core.Keyword(null, "config-source", "config-source", -1282385545)).cljs$core$IFn$_invoke$arity$1(c)), new cljs.core.Keyword(null, "value", "value", 305978217), e, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), !0], null)], null) : null;
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "options", "options", 99638489), function() {
    return function k(h) {
      return new cljs.core.LazySeq(null, function() {
        for (;;) {
          var l = cljs.core.seq.call(null, h);
          if (l) {
            if (cljs.core.chunked_seq_QMARK_.call(null, l)) {
              var m = cljs.core.chunk_first.call(null, l), n = cljs.core.count.call(null, m), p = cljs.core.chunk_buffer.call(null, n);
              return function() {
                for (var H = 0;;) {
                  if (H < n) {
                    var L = cljs.core._nth.call(null, m, H), P = cljs.core.__destructure_map.call(null, L);
                    L = cljs.core.get.call(null, P, new cljs.core.Keyword(null, "title", "title", 636505583));
                    var S = cljs.core.get.call(null, P, new cljs.core.Keyword(null, "value", "value", 305978217)), U = cljs.core.get.call(null, P, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181));
                    P = cljs.core.chunk_append;
                    var V = P.call, q = p, t = cljs.core._EQ_.call(null, S, e);
                    L = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), L, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), t, new cljs.core.Keyword(null, "actions", "actions", -812656882), cljs.core.truth_(U) ? null : cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                    [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), portfolio.views.canvas.addons.get_expand_path.call(null, (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c))], null), t ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, 
                    "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "value", "value", 305978217)], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, 
                    "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "value", "value", 305978217)], null), S], null), cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("fn", "call", 
                    "fn/call", -519998786), (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(a), S], null) : null], null))], null);
                    V.call(P, null, q, L);
                    H += 1;
                  } else {
                    return !0;
                  }
                }
              }() ? cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, p), k.call(null, cljs.core.chunk_rest.call(null, l))) : cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, p), null);
            }
            var r = cljs.core.first.call(null, l);
            r = cljs.core.__destructure_map.call(null, r);
            var u = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "title", "title", 636505583)), z = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "value", "value", 305978217)), D = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181));
            return cljs.core.cons.call(null, function() {
              var H = cljs.core._EQ_.call(null, z, e);
              return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), u, new cljs.core.Keyword(null, "selected?", "selected?", -742502788), H, new cljs.core.Keyword(null, "actions", "actions", -812656882), cljs.core.truth_(D) ? null : cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), portfolio.views.canvas.addons.get_expand_path.call(null, (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c))], null), H ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, 
              "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "value", "value", 305978217)], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, 
              "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c), new cljs.core.Keyword(null, "value", "value", 305978217)], null), z], null), cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(a)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("fn", "call", 
              "fn/call", -519998786), (new cljs.core.Keyword(null, "on-select", "on-select", -192407950)).cljs$core$IFn$_invoke$arity$1(a), z], null) : null], null))], null);
            }(), k.call(null, cljs.core.rest.call(null, l)));
          }
          return null;
        }
      }, null, null);
    }.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(a), f));
  }()], null);
};
portfolio.views.canvas.addons.prepare_toolbar_menu_button = function(a, b, c) {
  var d = portfolio.views.canvas.addons.get_expand_path.call(null, (new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857)).cljs$core$IFn$_invoke$arity$1(c)), e = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), cljs.core.get_in.call(null, b, d));
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "text", "text", -1790561697), function() {
    var f = cljs.core.ifn_QMARK_.call(null, (new cljs.core.Keyword(null, "prepare-title", "prepare-title", -384904958)).cljs$core$IFn$_invoke$arity$1(a)) ? (new cljs.core.Keyword(null, "prepare-title", "prepare-title", -384904958)).cljs$core$IFn$_invoke$arity$1(a).call(null, (new cljs.core.Keyword(null, "current-value", "current-value", 2066017989)).cljs$core$IFn$_invoke$arity$1(portfolio.views.canvas.addons.get_current_value.call(null, a, b, c))) : null;
    return cljs.core.truth_(f) ? f : (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a);
  }(), new cljs.core.Keyword(null, "actions", "actions", -812656882), e ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), d], null)], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "assoc-in", "assoc-in", -1754117270), d, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a)], null)], null), new cljs.core.Keyword(null, "menu", "menu", 352255198), e ? portfolio.views.canvas.addons.prepare_tool_menu.call(null, a, b, c) : null], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.MenuButton;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "MenuButton", "portfolio.components.canvas-toolbar-buttons/MenuButton", -1000164917, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
  new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "MenuButton", "MenuButton", 249681575, 
  null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 27, 1, 6, 6, cljs.core.List.EMPTY, "", cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.MenuButton) ? portfolio.components.canvas_toolbar_buttons.MenuButton.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.addons.create_toolbar_menu_button = function(a) {
  for (var b = cljs.core.seq.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "title", "title", 636505583), null, new cljs.core.Keyword(null, "id", "id", -1388402092), null, new cljs.core.Keyword(null, "options", "options", 99638489), null, new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), null], null), null)), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      if (!cljs.core.truth_(f.call(null, a))) {
        throw cljs.core.ex_info.call(null, "Can't create toolbar menu button without key", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "k", "k", -2146297393), f, new cljs.core.Keyword(null, "data", "data", -232669377), a], null));
      }
      e += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        c = b;
        if (cljs.core.chunked_seq_QMARK_.call(null, c)) {
          b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e;
        } else {
          b = cljs.core.first.call(null, c);
          if (!cljs.core.truth_(b.call(null, a))) {
            throw cljs.core.ex_info.call(null, "Can't create toolbar menu button without key", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "k", "k", -2146297393), b, new cljs.core.Keyword(null, "data", "data", -232669377), a], null));
          }
          b = cljs.core.next.call(null, c);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        break;
      }
    }
  }
  return cljs.core.with_meta.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613)), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
    return portfolio.views.canvas.addons.prepare_toolbar_menu_button;
  }, new cljs.core.Symbol("portfolio.views.canvas.addons", "prepare-toolbar-menu-button", "portfolio.views.canvas.addons/prepare-toolbar-menu-button", 1402114613, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
  new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.addons", "portfolio.views.canvas.addons", -1938046669, null), new cljs.core.Symbol(null, "prepare-toolbar-menu-button", "prepare-toolbar-menu-button", 
  2050463894, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/addons.cljs", 34, 1, 46, 46, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "pane", "pane", -1060985046, null)], null)), null, cljs.core.truth_(portfolio.views.canvas.addons.prepare_toolbar_menu_button) ? 
  portfolio.views.canvas.addons.prepare_toolbar_menu_button.cljs$lang$test : null])), new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function() {
    var g = (new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(g) ? g : function(h, k, l) {
      return null;
    };
  }(), new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null), function() {
    var g = (new cljs.core.Keyword(null, "finalize-canvas", "finalize-canvas", 1918696852)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(g) ? g : function(h, k, l) {
      return null;
    };
  }()], null));
};
portfolio.views.canvas.addons.create_canvas_extension = function(a) {
  if (!cljs.core.truth_((new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a))) {
    throw Error("Assert failed: Can't create viewport extension without :id\n(:id data)");
  }
  if (!cljs.core.truth_(function() {
    var b = (new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : (new cljs.core.Keyword(null, "finalize-canvas", "finalize-canvas", 1918696852)).cljs$core$IFn$_invoke$arity$1(a);
  }())) {
    throw Error("Assert failed: Can't create viewport extension without neither :prepare-canvas nor :finalize-canvas\n(or (:prepare-canvas data) (:finalize-canvas data))");
  }
  return cljs.core.with_meta.call(null, a, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function() {
    var b = (new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : function(c, d, e) {
      return null;
    };
  }(), new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null), function() {
    var b = (new cljs.core.Keyword(null, "finalize-canvas", "finalize-canvas", 1918696852)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : function(c, d, e) {
      return null;
    };
  }()], null));
};
portfolio.views.canvas.addons.create_action_button = function(a) {
  for (var b = cljs.core.seq.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "get-actions", "get-actions", 396936459), null, new cljs.core.Keyword(null, "title", "title", 636505583), null, new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), null], null), null)), c = null, d = 0, e = 0;;) {
    if (e < d) {
      var f = cljs.core._nth.call(null, c, e);
      if (!cljs.core.truth_(f.call(null, a))) {
        throw cljs.core.ex_info.call(null, "Can't create toolbar action button without key", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "k", "k", -2146297393), f, new cljs.core.Keyword(null, "data", "data", -232669377), a], null));
      }
      e += 1;
    } else {
      if (b = cljs.core.seq.call(null, b)) {
        c = b;
        if (cljs.core.chunked_seq_QMARK_.call(null, c)) {
          b = cljs.core.chunk_first.call(null, c), e = cljs.core.chunk_rest.call(null, c), c = b, d = cljs.core.count.call(null, b), b = e;
        } else {
          b = cljs.core.first.call(null, c);
          if (!cljs.core.truth_(b.call(null, a))) {
            throw cljs.core.ex_info.call(null, "Can't create toolbar action button without key", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "k", "k", -2146297393), b, new cljs.core.Keyword(null, "data", "data", -232669377), a], null));
          }
          b = cljs.core.next.call(null, c);
          c = null;
          d = 0;
        }
        e = 0;
      } else {
        break;
      }
    }
  }
  var g = function() {
    var h = (new cljs.core.Keyword(null, "show?", "show?", 1543842127)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(h) ? h : cljs.core.constantly.call(null, !0);
  }();
  return cljs.core.with_meta.call(null, cljs.core.dissoc.call(null, a, new cljs.core.Keyword(null, "show?", "show?", 1543842127), new cljs.core.Keyword(null, "get-actions", "get-actions", 396936459), new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), function(h, k, l) {
    return cljs.core.truth_(g.call(null, h, k, l)) ? cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.truth_((new cljs.core.Keyword(null, "icon", "icon", 1679606541)).cljs$core$IFn$_invoke$arity$1(a)) ? null : (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 
    636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "icon", "icon", 1679606541), (new cljs.core.Keyword(null, "icon", "icon", 1679606541)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "actions", "actions", -812656882), (new cljs.core.Keyword(null, "get-actions", "get-actions", 396936459)).cljs$core$IFn$_invoke$arity$1(a).call(null, h, k, l)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", 
    "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
      return portfolio.components.canvas_toolbar_buttons.MenuButton;
    }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "MenuButton", "portfolio.components.canvas-toolbar-buttons/MenuButton", -1000164917, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
    new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "MenuButton", "MenuButton", 249681575, 
    null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 27, 1, 6, 6, cljs.core.List.EMPTY, "", cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.MenuButton) ? portfolio.components.canvas_toolbar_buttons.MenuButton.cljs$lang$test : null]))], null)) : null;
  }], null));
};
portfolio.views.canvas.background = {};
portfolio.views.canvas.background.default_options = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "light-mode", "light-mode", -1650913509), new cljs.core.Keyword(null, "title", "title", 636505583), "Light (.light-mode)", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("background", 
"background-color", "background/background-color", 1902638780), "#fff", new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863), "light-mode"], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "dark-mode", "dark-mode", 491620517), new cljs.core.Keyword(null, "title", "title", 636505583), "Dark (.dark-mode)", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword("background", "background-color", "background/background-color", 1902638780), "#111111", new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863), "dark-mode"], null)], null)], null);
portfolio.views.canvas.background.prepare_canvas = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword("background", "background-color", "background/background-color", 1902638780));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863));
  portfolio.components.canvas.get_iframe.call(null, b).style.backgroundColor = d;
  b = portfolio.components.canvas.get_iframe_body.call(null, b);
  a = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "options", "options", 99638489)).cljs$core$IFn$_invoke$arity$1(a));
  d = null;
  for (var e = 0, f = 0;;) {
    if (f < e) {
      var g = cljs.core._nth.call(null, d, f);
      g = cljs.core.__destructure_map.call(null, g);
      g = cljs.core.get.call(null, g, new cljs.core.Keyword(null, "value", "value", 305978217));
      cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) || (cljs.core._EQ_.call(null, c, (new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) ? b.classList.add((new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) : b.classList.remove((new cljs.core.Keyword("background", 
      "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)));
      f += 1;
    } else {
      if (a = cljs.core.seq.call(null, a)) {
        cljs.core.chunked_seq_QMARK_.call(null, a) ? (e = cljs.core.chunk_first.call(null, a), a = cljs.core.chunk_rest.call(null, a), d = e, e = cljs.core.count.call(null, e)) : (d = cljs.core.first.call(null, a), d = cljs.core.__destructure_map.call(null, d), g = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) || 
        (cljs.core._EQ_.call(null, c, (new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) ? b.classList.add((new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g)) : b.classList.remove((new cljs.core.Keyword("background", "body-class", "background/body-class", 181741863)).cljs$core$IFn$_invoke$arity$1(g))), a = cljs.core.next.call(null, a), d = null, e = 0), f = 
        0;
      } else {
        return null;
      }
    }
  }
};
portfolio.views.canvas.background.create_background_tool = function(a) {
  var b = function() {
    var c = (new cljs.core.Keyword("background", "options", "background/options", 1180140427)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? c : portfolio.views.canvas.background.default_options;
  }();
  return portfolio.views.canvas.addons.create_toolbar_menu_button.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "background", "canvas/background", -533817437), new cljs.core.Keyword(null, "title", "title", 636505583), "Background", new cljs.core.Keyword(null, "options", "options", 99638489), function() {
    var c = (new cljs.core.Keyword("background", "options", "background/options", 1180140427)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(c) ? c : b;
  }(), new cljs.core.Keyword(null, "default-value", "default-value", 232220170), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, function() {
    var c = (new cljs.core.Keyword("background", "default-option-id", "background/default-option-id", -1599012737)).cljs$core$IFn$_invoke$arity$1(a);
    c = cljs.core.truth_(c) ? cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.PersistentHashSet.createAsIfByAssoc([c]), new cljs.core.Keyword(null, "id", "id", -1388402092)), b) : null;
    return cljs.core.truth_(c) ? c : b;
  }())), new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), new cljs.core.Var(function() {
    return portfolio.views.canvas.background.prepare_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.background", "prepare-canvas", "portfolio.views.canvas.background/prepare-canvas", 735124134, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.background", "portfolio.views.canvas.background", -1099920894, null), new cljs.core.Symbol(null, "prepare-canvas", "prepare-canvas", -1313844156, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/background.cljs", 
  21, 1, 15, 15, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("background", "keys", "background/keys", -1876510524), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "background-color", "background-color", 
  -2084001743, null), new cljs.core.Symbol(null, "body-class", "body-class", 1006967324, null)], null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.background.prepare_canvas) ? portfolio.views.canvas.background.prepare_canvas.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.grid = {};
portfolio.views.canvas.grid.prepare_canvas = function(a, b, c) {
  var d = cljs.core.__destructure_map.call(null, c), e = cljs.core.get.call(null, d, new cljs.core.Keyword("grid", "offset", "grid/offset", 289189693));
  a = cljs.core.get.call(null, d, new cljs.core.Keyword("grid", "size", "grid/size", 1053670865));
  var f = cljs.core.get.call(null, d, new cljs.core.Keyword("grid", "group-size", "grid/group-size", -624518492));
  b = portfolio.components.canvas.get_iframe.call(null, b).style;
  var g = function() {
    var m = (new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441)).cljs$core$IFn$_invoke$arity$1(d);
    return cljs.core.truth_(m) ? m : 1;
  }();
  if ("number" === typeof a && cljs.core.not_EQ_.call(null, 0, a)) {
    var h = g * a;
    a = (new cljs.core.Keyword("viewport", "padding", "viewport/padding", -1583726021)).cljs$core$IFn$_invoke$arity$1(d);
    var k = cljs.core.nth.call(null, a, 0, null);
    cljs.core.nth.call(null, a, 1, null);
    cljs.core.nth.call(null, a, 2, null);
    var l = cljs.core.nth.call(null, a, 3, null);
    b.backgroundSize = function() {
      var m = cljs.core.truth_(f) ? f : 5;
      m *= h;
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), "px ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), "px, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), "px ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m), "px, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), "px ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), "px, ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), "px ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(h), "px"].join("");
    }();
    b.backgroundPosition = function() {
      var m = cljs.core.truth_(e) ? e : 0;
      return clojure.string.join.call(null, ", ", cljs.core.repeat.call(null, 4, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(l + m * g), "px ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(g * (k + m)), "px"].join("")));
    }();
    b.backgroundBlendMode = "difference";
    return b.backgroundImage = "linear-gradient(rgba(130, 130, 130, 0.5) 1px, transparent 1px),\n                  linear-gradient(90deg, rgba(130, 130, 130, 0.5) 1px, transparent 1px),\n                  linear-gradient(rgba(130, 130, 130, 0.25) 1px, transparent 1px),\n                  linear-gradient(90deg, rgba(130, 130, 130, 0.25) 1px, transparent 1px)";
  }
  return b.backgroundImage = "none";
};
portfolio.views.canvas.grid.create_grid_tool = function(a) {
  return portfolio.views.canvas.addons.create_toolbar_menu_button.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "grid", "canvas/grid", 645886336), new cljs.core.Keyword(null, "title", "title", 636505583), "Grid", new cljs.core.Keyword(null, "options", "options", 99638489), function() {
    var b = (new cljs.core.Keyword("grid", "options", "grid/options", 96459187)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "5 x 20px", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("grid", "offset", "grid/offset", 289189693), 0, new cljs.core.Keyword("grid", "size", "grid/size", 1053670865), 20, new cljs.core.Keyword("grid", 
    "group-size", "grid/group-size", -624518492), 5], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "No grid", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("grid", "size", "grid/size", 1053670865), 0], null)], null)], null);
  }(), new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), new cljs.core.Var(function() {
    return portfolio.views.canvas.grid.prepare_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.grid", "prepare-canvas", "portfolio.views.canvas.grid/prepare-canvas", 1558133966, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.grid", "portfolio.views.canvas.grid", -656194143, null), new cljs.core.Symbol(null, "prepare-canvas", "prepare-canvas", -1313844156, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/grid.cljs", 
  21, 1, 6, 6, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("grid", "keys", "grid/keys", 1065119436), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, 
  "size", "size", -1555742762, null), new cljs.core.Symbol(null, "group-size", "group-size", 996060049, null)], null), new cljs.core.Keyword(null, "as", "as", 1148689641), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.grid.prepare_canvas) ? portfolio.views.canvas.grid.prepare_canvas.cljs$lang$test : null]))], null));
};
portfolio.icons.rows = {};
var sym__15832__auto___16610 = cljs.core.symbol.call(null, "portfolio.icons.rows/icon");
portfolio.icons.rows.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rect", 
"rect", -108902628), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "rx", "rx", 1627208482), new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, 
"stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "height", "height", 1025178622)], "144 8 currentColor none round 176 round 16 40 56".split(" "))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rect", "rect", -108902628), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "rx", "rx", 
1627208482), new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "height", 
"height", 1025178622)], "56 8 currentColor none round 176 round 16 40 56".split(" "))], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___16610, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___16610)], null));
portfolio.icons.columns = {};
var sym__15832__auto___16613 = cljs.core.symbol.call(null, "portfolio.icons.columns/icon");
portfolio.icons.columns.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"rect", "rect", -108902628), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "rx", "rx", 1627208482), new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "transform", "transform", 1381301764), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, 
"stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "height", "height", 1025178622)], "100;8;currentColor;translate(212 44) rotate(90);none;round;176;round;16;-4;56".split(";"))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rect", "rect", -108902628), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, 
"y", "y", -1757859776), new cljs.core.Keyword(null, "rx", "rx", 1627208482), new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "transform", "transform", 1381301764), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "width", "width", -384071477), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, 
"stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "height", "height", 1025178622)], "100;8;currentColor;translate(300 -44) rotate(90);none;round;176;round;16;84;56".split(";"))], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___16613, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, 
sym__15832__auto___16613)], null));
portfolio.icons.cross = {};
var sym__15832__auto___16616 = cljs.core.symbol.call(null, "portfolio.icons.cross/icon");
portfolio.icons.cross.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "x1", "x1", -1863922247), "200", new cljs.core.Keyword(null, "y1", "y1", 589123466), "56", new cljs.core.Keyword(null, "x2", "x2", -1362513475), "56", new cljs.core.Keyword(null, "y2", "y2", -718691301), "200", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, 
"stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "x1", "x1", -1863922247), "200", new cljs.core.Keyword(null, "y1", "y1", 589123466), "200", new cljs.core.Keyword(null, "x2", "x2", -1362513475), 
"56", new cljs.core.Keyword(null, "y2", "y2", -718691301), "56", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 
441598760), sym__15832__auto___16616, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___16616)], null));
portfolio.views.canvas.split = {};
portfolio.views.canvas.split.split_layout = function(a, b, c) {
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b))) {
    var d = cljs.core.nth.call(null, b, 0, null);
    b = cljs.core._EQ_.call(null, c, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.update.call(null, a, new cljs.core.Keyword(null, "xs", "xs", 649443341), function(e) {
      return cljs.core.vec.call(null, cljs.core.mapcat.call(null, function(f, g) {
        return cljs.core._EQ_.call(null, g, d) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, f], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null);
      }, e, cljs.core.range.call(null)));
    }) : a;
    return cljs.core.not_EQ_.call(null, c, (new cljs.core.Keyword(null, "kind", "kind", -717265803)).cljs$core$IFn$_invoke$arity$1(a)) ? cljs.core.update.call(null, b, new cljs.core.Keyword(null, "xs", "xs", 649443341), function(e) {
      return cljs.core.mapv.call(null, function(f, g) {
        return cljs.core._EQ_.call(null, g, d) ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "kind", "kind", -717265803), c, new cljs.core.Keyword(null, "xs", "xs", 649443341), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, f], null)], null) : f;
      }, e, cljs.core.range.call(null));
    }) : b;
  }
  return cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "xs", "xs", 649443341), cljs.core.first.call(null, b)], null), portfolio.views.canvas.split.split_layout, cljs.core.rest.call(null, b), c);
};
portfolio.views.canvas.split.split_layout_horizontally = function(a, b) {
  return portfolio.views.canvas.split.split_layout.call(null, a, b, new cljs.core.Keyword(null, "rows", "rows", 850049680));
};
portfolio.views.canvas.split.prepare_horizontal_split_button = function(a, b, c) {
  var d = cljs.core.__destructure_map.call(null, c);
  b = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "pane-path", "pane-path", -316302892));
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout-path", "layout-path", -654991240));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout", "layout", -2120940921));
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "icon", "icon", 1679606541), portfolio.icons.rows.icon, new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), c, portfolio.views.canvas.split.split_layout_horizontally.call(null, d, b)], null)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.Button;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "Button", "portfolio.components.canvas-toolbar-buttons/Button", 1140280554, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "Button", "Button", -1787718586, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 
  12, 1, 24, 24, cljs.core.List.EMPTY, null, cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.Button) ? portfolio.components.canvas_toolbar_buttons.Button.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.split.horizontal_impl = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function(a, b, c) {
  return null;
}, new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
  return portfolio.views.canvas.split.prepare_horizontal_split_button;
}, new cljs.core.Symbol("portfolio.views.canvas.split", "prepare-horizontal-split-button", "portfolio.views.canvas.split/prepare-horizontal-split-button", 403687597, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.split", "portfolio.views.canvas.split", -1513421381, null), new cljs.core.Symbol(null, "prepare-horizontal-split-button", "prepare-horizontal-split-button", 
-664960121, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/split.cljs", 38, 1, 33, 33, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pane-path", "pane-path", 1324228635, null), new cljs.core.Symbol(null, "layout-path", "layout-path", 985540287, null), new cljs.core.Symbol(null, "layout", "layout", -480409394, null)], null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.split.prepare_horizontal_split_button) ? portfolio.views.canvas.split.prepare_horizontal_split_button.cljs$lang$test : null]))], null);
portfolio.views.canvas.split.create_split_horizontally_tool = function(a) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "split-horizontally", "canvas/split-horizontally", 1909089480), new cljs.core.Keyword(null, "title", "title", 636505583), "Split horizontally"], null), portfolio.views.canvas.split.horizontal_impl);
};
portfolio.views.canvas.split.split_layout_vertically = function(a, b) {
  return portfolio.views.canvas.split.split_layout.call(null, a, b, new cljs.core.Keyword(null, "cols", "cols", -1914801295));
};
portfolio.views.canvas.split.prepare_vertical_split_button = function(a, b, c) {
  var d = cljs.core.__destructure_map.call(null, c);
  b = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "pane-path", "pane-path", -316302892));
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout-path", "layout-path", -654991240));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout", "layout", -2120940921));
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "icon", "icon", 1679606541), portfolio.icons.columns.icon, new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
  3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), c, portfolio.views.canvas.split.split_layout_vertically.call(null, d, b)], null)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.Button;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "Button", "portfolio.components.canvas-toolbar-buttons/Button", 1140280554, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "Button", "Button", -1787718586, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 
  12, 1, 24, 24, cljs.core.List.EMPTY, null, cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.Button) ? portfolio.components.canvas_toolbar_buttons.Button.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.split.vertical_impl = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function(a, b, c) {
  return null;
}, new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
  return portfolio.views.canvas.split.prepare_vertical_split_button;
}, new cljs.core.Symbol("portfolio.views.canvas.split", "prepare-vertical-split-button", "portfolio.views.canvas.split/prepare-vertical-split-button", -549226293, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.split", "portfolio.views.canvas.split", -1513421381, null), new cljs.core.Symbol(null, "prepare-vertical-split-button", "prepare-vertical-split-button", 
-1619983299, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/split.cljs", 36, 1, 54, 54, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pane-path", "pane-path", 1324228635, null), new cljs.core.Symbol(null, "layout-path", "layout-path", 985540287, null), new cljs.core.Symbol(null, "layout", "layout", -480409394, null)], null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.split.prepare_vertical_split_button) ? portfolio.views.canvas.split.prepare_vertical_split_button.cljs$lang$test : null]))], null);
portfolio.views.canvas.split.create_split_vertically_tool = function(a) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "split-vertically", "canvas/split-vertically", 92240264), new cljs.core.Keyword(null, "title", "title", 636505583), "Split vertically"], null), portfolio.views.canvas.split.vertical_impl);
};
portfolio.views.canvas.split.close_pane = function(a, b) {
  return cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, b)) ? cljs.core.update.call(null, a, new cljs.core.Keyword(null, "xs", "xs", 649443341), function(c) {
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.take.call(null, cljs.core.first.call(null, b), c), cljs.core.drop.call(null, cljs.core.first.call(null, b) + 1, c)));
  }) : cljs.core.update_in.call(null, a, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "xs", "xs", 649443341), cljs.core.first.call(null, b)], null), portfolio.views.canvas.split.close_pane, cljs.core.rest.call(null, b));
};
portfolio.views.canvas.split.prepare_close_pane_button = function(a, b, c) {
  var d = cljs.core.__destructure_map.call(null, c);
  b = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "pane-path", "pane-path", -316302892));
  c = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout-path", "layout-path", -654991240));
  d = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "layout", "layout", -2120940921));
  return 1 < cljs.core.count.call(null, cljs.core.remove.call(null, new cljs.core.Keyword(null, "kind", "kind", -717265803), cljs.core.filter.call(null, cljs.core.map_QMARK_, cljs.core.tree_seq.call(null, cljs.core.coll_QMARK_, cljs.core.identity, d)))) ? cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, 
  "icon", "icon", 1679606541), portfolio.icons.cross.icon, new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "actions", "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), c, portfolio.views.canvas.split.close_pane.call(null, 
  d, b)], null)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.Button;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "Button", "portfolio.components.canvas-toolbar-buttons/Button", 1140280554, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "Button", "Button", -1787718586, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 
  12, 1, 24, 24, cljs.core.List.EMPTY, null, cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.Button) ? portfolio.components.canvas_toolbar_buttons.Button.cljs$lang$test : null]))], null)) : null;
};
portfolio.views.canvas.split.close_impl = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function(a, b, c) {
  return null;
}, new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
  return portfolio.views.canvas.split.prepare_close_pane_button;
}, new cljs.core.Symbol("portfolio.views.canvas.split", "prepare-close-pane-button", "portfolio.views.canvas.split/prepare-close-pane-button", 289553204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.split", "portfolio.views.canvas.split", -1513421381, null), new cljs.core.Symbol(null, "prepare-close-pane-button", "prepare-close-pane-button", 1360068190, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/split.cljs", 
32, 1, 80, 80, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pane-path", "pane-path", 1324228635, null), new cljs.core.Symbol(null, 
"layout-path", "layout-path", 985540287, null), new cljs.core.Symbol(null, "layout", "layout", -480409394, null)], null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.split.prepare_close_pane_button) ? portfolio.views.canvas.split.prepare_close_pane_button.cljs$lang$test : null]))], null);
portfolio.views.canvas.split.create_close_tool = function(a) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "close", "canvas/close", -1142649018), new cljs.core.Keyword(null, "title", "title", 636505583), "Close pane"], null), portfolio.views.canvas.split.close_impl);
};
portfolio.views.canvas.viewport = {};
portfolio.views.canvas.viewport.get_width = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return portfolio.views.canvas.viewport.get_width.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
portfolio.views.canvas.viewport.get_width.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  d = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.__destructure_map.call(null, d);
  d = cljs.core.get.call(null, d, new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441));
  d = cljs.core.truth_(d) ? d : 1;
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "auto", "auto", -566279492), c) ? (a = window.getComputedStyle(a), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((parseInt(a.getPropertyValue("padding-left"), 10) + parseInt(a.getPropertyValue("padding-right"), 10) + b.scrollWidth) * d), "px"].join("")) : "number" === typeof c ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c * d), "px"].join("") : null == c ? "100%" : c;
};
portfolio.views.canvas.viewport.get_width.cljs$lang$maxFixedArity = 3;
portfolio.views.canvas.viewport.get_width.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
portfolio.views.canvas.viewport.get_style_px = function(a, b) {
  a = null == a ? null : a.getPropertyValue(b);
  a = null == a ? null : cljs.core.not_empty.call(null, a);
  return cljs.core.truth_(a) ? parseInt(a, 10) : 0;
};
portfolio.views.canvas.viewport.get_height = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 3 < b.length ? new cljs.core.IndexedSeq(b.slice(3), 0, null) : null;
  return portfolio.views.canvas.viewport.get_height.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], b);
};
portfolio.views.canvas.viewport.get_height.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d) {
  d = cljs.core.nth.call(null, d, 0, null);
  d = cljs.core.__destructure_map.call(null, d);
  d = cljs.core.get.call(null, d, new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441));
  d = cljs.core.truth_(d) ? d : 1;
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "auto", "auto", -566279492), c) ? (a = window.getComputedStyle(a), c = null == b ? null : b.firstElementChild, c = null == c ? null : c.firstElementChild, c = null == c ? null : window.getComputedStyle(c), [cljs.core.str.cljs$core$IFn$_invoke$arity$1((portfolio.views.canvas.viewport.get_style_px.call(null, a, "padding-top") + portfolio.views.canvas.viewport.get_style_px.call(null, a, "padding-bottom") + portfolio.views.canvas.viewport.get_style_px.call(null, 
  c, "margin-top") + portfolio.views.canvas.viewport.get_style_px.call(null, c, "margin-bottom") + b.scrollHeight) * d), "px"].join("")) : "number" === typeof c ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(c * d), "px"].join("") : null == c ? "100%" : c;
};
portfolio.views.canvas.viewport.get_height.cljs$lang$maxFixedArity = 3;
portfolio.views.canvas.viewport.get_height.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  var d = cljs.core.next.call(null, c);
  c = cljs.core.first.call(null, d);
  d = cljs.core.next.call(null, d);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c, d);
};
portfolio.views.canvas.viewport.get_available_width = function(a) {
  return a.parentNode.getBoundingClientRect().width;
};
portfolio.views.canvas.viewport.prepare_canvas = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237));
  a = cljs.core.get.call(null, c, new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772));
  var e = portfolio.components.canvas.get_iframe.call(null, b), f = portfolio.components.canvas.get_iframe_body.call(null, b);
  c = portfolio.views.canvas.viewport.get_width.call(null, e, f, d, c);
  d = b.style;
  if (e = cljs.core._EQ_.call(null, "100%", c)) {
    e = cljs.core.not_EQ_, f = e.call, a = cljs.core.truth_(a) ? a : "100%", e = f.call(e, null, "100%", a);
  }
  return d.width = e ? "calc(100% - 40px)" : cljs.core.truth_("number" === typeof c ? portfolio.views.canvas.viewport.get_available_width.call(null, b) <= c : null) ? "100%" : c;
};
portfolio.views.canvas.viewport.finalize_canvas = function(a, b, c) {
  var d = cljs.core.__destructure_map.call(null, c);
  a = cljs.core.get.call(null, d, new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237));
  var e = cljs.core.get.call(null, d, new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772)), f = portfolio.components.canvas.get_iframe.call(null, b), g = portfolio.components.canvas.get_iframe_body.call(null, b);
  c = portfolio.views.canvas.viewport.get_width.call(null, f, g, a, d);
  d = portfolio.views.canvas.viewport.get_height.call(null, f, g, e, d);
  c = (cljs.core.not_EQ_.call(null, "100%", c) || cljs.core.not_EQ_.call(null, "100%", d)) && ("number" !== typeof a || 40 + a < portfolio.views.canvas.viewport.get_available_width.call(null, b)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["20px", "rgba(0, 0, 0, 0.1) 0px 1px 5px 0px"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", "none"], null);
  a = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.nth.call(null, c, 1, null);
  b.style.height = d;
  b.style.margin = a;
  return b.style.boxShadow = c;
};
portfolio.views.canvas.viewport.get_padding = function(a) {
  if (cljs.core.empty_QMARK_.call(null, a)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 20, 20, 20], null);
  }
  if ("number" === typeof a) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a, a, a], null);
  }
  if (cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, a))) {
    var b = cljs.core.first.call(null, a);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b, b, b], null);
  }
  return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, a)) ? (b = cljs.core.nth.call(null, a, 0, null), a = cljs.core.nth.call(null, a, 1, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a, b, a], null)) : a;
};
portfolio.views.canvas.viewport.create_viewport_tool = function(a) {
  return portfolio.views.canvas.addons.create_toolbar_menu_button.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "viewport", "canvas/viewport", 1810532963), new cljs.core.Keyword(null, "title", "title", 636505583), "Viewport", new cljs.core.Keyword(null, "default-value", "default-value", 232220170), cljs.core.update.call(null, (new cljs.core.Keyword("viewport", "defaults", "viewport/defaults", 2054751788)).cljs$core$IFn$_invoke$arity$1(a), 
  new cljs.core.Keyword("viewport", "padding", "viewport/padding", -1583726021), portfolio.views.canvas.viewport.get_padding), new cljs.core.Keyword(null, "options", "options", 99638489), cljs.core.map.call(null, function(b) {
    return cljs.core.update.call(null, b, new cljs.core.Keyword("viewport", "padding", "viewport/padding", -1583726021), portfolio.views.canvas.viewport.get_padding);
  }, function() {
    var b = (new cljs.core.Keyword("viewport", "options", "viewport/options", -576953325)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(b) ? b : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "Auto", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237), "100%", new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772), "100%"], null), 
    new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "desktop", "desktop", 1494219798)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 636505583), "iPhone 12 / 13 Prop", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "width", "viewport/width", 809992237), 390, new cljs.core.Keyword("viewport", "height", "viewport/height", 1951335772), 
    844], null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "mobile", "mobile", 1403078170)], null)], null);
  }()), new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), new cljs.core.Var(function() {
    return portfolio.views.canvas.viewport.prepare_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.viewport", "prepare-canvas", "portfolio.views.canvas.viewport/prepare-canvas", 534055726, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.viewport", "portfolio.views.canvas.viewport", 439168753, null), new cljs.core.Symbol(null, "prepare-canvas", "prepare-canvas", -1313844156, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/viewport.cljs", 
  21, 1, 53, 53, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "keys", "viewport/keys", -161294996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "width", "width", 1256460050, null), new cljs.core.Symbol(null, 
  "height", "height", -1629257147, null)], null), new cljs.core.Keyword(null, "as", "as", 1148689641), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.viewport.prepare_canvas) ? portfolio.views.canvas.viewport.prepare_canvas.cljs$lang$test : null])), new cljs.core.Keyword(null, "finalize-canvas", "finalize-canvas", 1918696852), new cljs.core.Var(function() {
    return portfolio.views.canvas.viewport.finalize_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.viewport", "finalize-canvas", "portfolio.views.canvas.viewport/finalize-canvas", 1245758693, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.viewport", "portfolio.views.canvas.viewport", 439168753, null), new cljs.core.Symbol(null, "finalize-canvas", "finalize-canvas", -735738917, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/viewport.cljs", 
  22, 1, 68, 68, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "keys", "viewport/keys", -161294996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "width", "width", 1256460050, null), new cljs.core.Symbol(null, 
  "height", "height", -1629257147, null)], null), new cljs.core.Keyword(null, "as", "as", 1148689641), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.viewport.finalize_canvas) ? portfolio.views.canvas.viewport.finalize_canvas.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.viewport.create_viewport_extension = function(a) {
  return portfolio.views.canvas.addons.create_canvas_extension.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "viewport", "canvas/viewport", 1810532963), new cljs.core.Keyword(null, "title", "title", 636505583), "Viewport", new cljs.core.Keyword(null, "default-value", "default-value", 232220170), (new cljs.core.Keyword("viewport", "defaults", "viewport/defaults", 2054751788)).cljs$core$IFn$_invoke$arity$1(a), 
  new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), new cljs.core.Var(function() {
    return portfolio.views.canvas.viewport.prepare_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.viewport", "prepare-canvas", "portfolio.views.canvas.viewport/prepare-canvas", 534055726, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.viewport", "portfolio.views.canvas.viewport", 439168753, null), new cljs.core.Symbol(null, "prepare-canvas", "prepare-canvas", -1313844156, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/viewport.cljs", 
  21, 1, 53, 53, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "keys", "viewport/keys", -161294996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "width", "width", 1256460050, null), new cljs.core.Symbol(null, 
  "height", "height", -1629257147, null)], null), new cljs.core.Keyword(null, "as", "as", 1148689641), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.viewport.prepare_canvas) ? portfolio.views.canvas.viewport.prepare_canvas.cljs$lang$test : null])), new cljs.core.Keyword(null, "finalize-canvas", "finalize-canvas", 1918696852), new cljs.core.Var(function() {
    return portfolio.views.canvas.viewport.finalize_canvas;
  }, new cljs.core.Symbol("portfolio.views.canvas.viewport", "finalize-canvas", "portfolio.views.canvas.viewport/finalize-canvas", 1245758693, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.viewport", "portfolio.views.canvas.viewport", 439168753, null), new cljs.core.Symbol(null, "finalize-canvas", "finalize-canvas", -735738917, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/viewport.cljs", 
  22, 1, 68, 68, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("viewport", "keys", "viewport/keys", -161294996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "width", "width", 1256460050, null), new cljs.core.Symbol(null, 
  "height", "height", -1629257147, null)], null), new cljs.core.Keyword(null, "as", "as", 1148689641), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.viewport.finalize_canvas) ? portfolio.views.canvas.viewport.finalize_canvas.cljs$lang$test : null]))], null));
};
portfolio.icons.arrow_counter_clockwise = {};
var sym__15832__auto___16592 = cljs.core.symbol.call(null, "portfolio.icons.arrow-counter-clockwise/icon");
portfolio.icons.arrow_counter_clockwise.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"polyline", "polyline", -1731551044), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "points", "points", -1486596883), "79.8 99.7 31.8 99.7 31.8 51.7", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), 
"16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M65.8,190.2a88,88,0,1,0,0-124.4l-34,33.9", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", 
"stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___16592, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___16592)], null));
portfolio.icons.magnifying_glass_minus = {};
var sym__15832__auto___16595 = cljs.core.symbol.call(null, "portfolio.icons.magnifying-glass-minus/icon");
portfolio.icons.magnifying_glass_minus.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16", new cljs.core.Keyword(null, "x1", "x1", -1863922247), "84", new cljs.core.Keyword(null, "x2", "x2", 
-1362513475), "148", new cljs.core.Keyword(null, "y1", "y1", 589123466), "116", new cljs.core.Keyword(null, "y2", "y2", -718691301), "116"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), "116", new cljs.core.Keyword(null, "cy", "cy", 755331060), "116", new cljs.core.Keyword(null, "r", "r", -471384190), 
"84", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 
8, [new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16", new cljs.core.Keyword(null, "x1", "x1", -1863922247), "175.4", new cljs.core.Keyword(null, "x2", "x2", -1362513475), "224", new cljs.core.Keyword(null, "y1", "y1", 589123466), 
"175.4", new cljs.core.Keyword(null, "y2", "y2", -718691301), "224"], null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___16595, new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___16595)], null));
portfolio.icons.magnifying_glass_plus = {};
var sym__15832__auto___16598 = cljs.core.symbol.call(null, "portfolio.icons.magnifying-glass-plus/icon");
portfolio.icons.magnifying_glass_plus.icon = cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16", new cljs.core.Keyword(null, "x1", "x1", -1863922247), "84", new cljs.core.Keyword(null, "x2", "x2", 
-1362513475), "148", new cljs.core.Keyword(null, "y1", "y1", 589123466), "116", new cljs.core.Keyword(null, "y2", "y2", -718691301), "116"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", 
new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16", new cljs.core.Keyword(null, "x1", "x1", -1863922247), "116", new cljs.core.Keyword(null, "x2", "x2", -1362513475), "116", new cljs.core.Keyword(null, "y1", "y1", 589123466), "84", new cljs.core.Keyword(null, "y2", "y2", -718691301), "148"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "cx", "cx", 1272694324), "116", new cljs.core.Keyword(null, "cy", "cy", 755331060), "116", new cljs.core.Keyword(null, "r", "r", -471384190), "84", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", 
-1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", 
"stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16", new cljs.core.Keyword(null, "x1", "x1", -1863922247), "175.4", new cljs.core.Keyword(null, "x2", "x2", -1362513475), "224", new cljs.core.Keyword(null, "y1", "y1", 589123466), "175.4", new cljs.core.Keyword(null, "y2", "y2", -718691301), "224"], null)], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), sym__15832__auto___16598, 
new cljs.core.Symbol("portfolio.code", "format-code", "portfolio.code/format-code", 133517642, null), cljs.core.constantly.call(null, sym__15832__auto___16598)], null));
portfolio.views.canvas.zoom = {};
portfolio.views.canvas.zoom.reset_canvas_zoom = function(a, b, c) {
  if (cljs.core.contains_QMARK_.call(null, c, new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441))) {
    return null;
  }
  a = portfolio.components.canvas.get_iframe_body.call(null, b);
  a.style.transform = "";
  a.style.width = "100%";
  return a.style.height = "100%";
};
portfolio.views.canvas.zoom.zoom = function(a, b) {
  var c = portfolio.components.canvas.get_iframe_body.call(null, a), d = (new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441)).cljs$core$IFn$_invoke$arity$1(b);
  return cljs.core.truth_(d) ? (a = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(100 / d), "%"].join(""), c.zoomed = !0, c.style.transform = ["scale(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), ")"].join(""), c.style.transformOrigin = "left top", c.style.width = a, c.style.height = a) : cljs.core.truth_(c.zoomed) ? portfolio.views.canvas.zoom.reset_canvas_zoom.call(null, null, a, b) : null;
};
portfolio.views.canvas.zoom.prepare_zoom_button = function(a, b, c) {
  c = cljs.core.__destructure_map.call(null, c);
  b = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857));
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "pane-options", "pane-options", -1713668629));
  c = function() {
    var f = (new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441)).cljs$core$IFn$_invoke$arity$1(d);
    return cljs.core.truth_(f) ? f : 1;
  }();
  var e = function() {
    var f = (new cljs.core.Keyword(null, "zoom-increment", "zoom-increment", 1290521682)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(f) ? f : 0.25;
  }();
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "title", "title", 636505583), (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "icon", "icon", 1679606541), (new cljs.core.Keyword(null, "icon", "icon", 1679606541)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "active?", "active?", 459499776), 0 < e ? 1 < c : 1 > c, new cljs.core.Keyword(null, "actions", 
  "actions", -812656882), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "assoc-in", "assoc-in", -1754117270), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(a), b, new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword("zoom", 
  "level", "zoom/level", 1294076441)], null), e + c], null)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.Button;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "Button", "portfolio.components.canvas-toolbar-buttons/Button", 1140280554, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "Button", "Button", -1787718586, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 
  12, 1, 24, 24, cljs.core.List.EMPTY, null, cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.Button) ? portfolio.components.canvas_toolbar_buttons.Button.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.zoom.impl = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function(a, b, c) {
  return portfolio.views.canvas.zoom.zoom.call(null, b, c);
}, new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null), function(a, b, c) {
  return null;
}, new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
  return portfolio.views.canvas.zoom.prepare_zoom_button;
}, new cljs.core.Symbol("portfolio.views.canvas.zoom", "prepare-zoom-button", "portfolio.views.canvas.zoom/prepare-zoom-button", -606198771, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.zoom", "portfolio.views.canvas.zoom", 539896532, null), new cljs.core.Symbol(null, "prepare-zoom-button", "prepare-zoom-button", 1051862024, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/zoom.cljs", 
26, 1, 32, 32, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keys", "keys", 1068423698), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "pane-id", "pane-id", 1669512384, null), new cljs.core.Symbol(null, 
"pane-options", "pane-options", -73137102, null)], null)], null)], null)), null, cljs.core.truth_(portfolio.views.canvas.zoom.prepare_zoom_button) ? portfolio.views.canvas.zoom.prepare_zoom_button.cljs$lang$test : null]))], null);
portfolio.views.canvas.zoom.create_zoom_in_tool = function(a) {
  var b = cljs.core.with_meta, c = b.call, d = cljs.core.PersistentArrayMap, e = new cljs.core.Keyword(null, "id", "id", -1388402092), f = new cljs.core.Keyword("canvas", "zoom", "canvas/zoom", 596462602), g = new cljs.core.Keyword(null, "title", "title", 636505583), h = new cljs.core.Keyword(null, "icon", "icon", 1679606541), k = portfolio.icons.magnifying_glass_plus.icon, l = new cljs.core.Keyword(null, "zoom-increment", "zoom-increment", 1290521682);
  a = (new cljs.core.Keyword(null, "zoom-increment", "zoom-increment", 1290521682)).cljs$core$IFn$_invoke$arity$1(a);
  a = cljs.core.truth_(a) ? a : 0.25;
  return c.call(b, null, new d(null, 4, [e, f, g, "Zoom in", h, k, l, a], null), portfolio.views.canvas.zoom.impl);
};
portfolio.views.canvas.zoom.create_zoom_out_tool = function(a) {
  var b = cljs.core.with_meta, c = b.call, d = cljs.core.PersistentArrayMap, e = new cljs.core.Keyword(null, "id", "id", -1388402092), f = new cljs.core.Keyword("canvas", "zoom", "canvas/zoom", 596462602), g = new cljs.core.Keyword(null, "title", "title", 636505583), h = new cljs.core.Keyword(null, "icon", "icon", 1679606541), k = portfolio.icons.magnifying_glass_minus.icon, l = new cljs.core.Keyword(null, "zoom-increment", "zoom-increment", 1290521682);
  a = (new cljs.core.Keyword(null, "zoom-increment", "zoom-increment", 1290521682)).cljs$core$IFn$_invoke$arity$1(a);
  a = cljs.core.truth_(a) ? a : -0.25;
  return c.call(b, null, new d(null, 4, [e, f, g, "Zoom out", h, k, l, a], null), portfolio.views.canvas.zoom.impl);
};
portfolio.views.canvas.zoom.create_reset_zoom_tool = function(a) {
  return portfolio.views.canvas.addons.create_action_button.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "zoom-reset", "canvas/zoom-reset", -1575077322), new cljs.core.Keyword(null, "title", "title", 636505583), "Reset zoom", new cljs.core.Keyword(null, "icon", "icon", 1679606541), portfolio.icons.arrow_counter_clockwise.icon, new cljs.core.Keyword(null, "prepare-canvas", "prepare-canvas", 1340591613), 
  new cljs.core.Var(function() {
    return portfolio.views.canvas.zoom.reset_canvas_zoom;
  }, new cljs.core.Symbol("portfolio.views.canvas.zoom", "reset-canvas-zoom", "portfolio.views.canvas.zoom/reset-canvas-zoom", 49617911, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.zoom", "portfolio.views.canvas.zoom", 539896532, null), new cljs.core.Symbol(null, "reset-canvas-zoom", "reset-canvas-zoom", 1640045512, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/zoom.cljs", 
  24, 1, 10, 10, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.Symbol(null, "el", "el", 22330409, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)), null, cljs.core.truth_(portfolio.views.canvas.zoom.reset_canvas_zoom) ? portfolio.views.canvas.zoom.reset_canvas_zoom.cljs$lang$test : null])), new cljs.core.Keyword(null, "get-actions", "get-actions", 396936459), 
  function(b, c, d) {
    b = cljs.core.__destructure_map.call(null, d);
    b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pane-id", "pane-id", 28980857));
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dissoc-in", "dissoc-in", -1889884806), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("canvas", "zoom", "canvas/zoom", 596462602), b, new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword("zoom", "level", "zoom/level", 
    1294076441)], null)], null)], null);
  }, new cljs.core.Keyword(null, "show?", "show?", 1543842127), function(b, c, d) {
    b = cljs.core.__destructure_map.call(null, d);
    b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "pane-options", "pane-options", -1713668629));
    c = (new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441)).cljs$core$IFn$_invoke$arity$1(b);
    return cljs.core.truth_(c) ? cljs.core.not_EQ_.call(null, 1, (new cljs.core.Keyword("zoom", "level", "zoom/level", 1294076441)).cljs$core$IFn$_invoke$arity$1(b)) : c;
  }], null));
};
portfolio.views.canvas.zoom.prepare_button_group = function(a, b, c) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "buttons", "buttons", -1953831197), cljs.core.keep.call(null, function(d) {
    return portfolio.views.canvas.protocols.prepare_toolbar_button.call(null, d, b, c);
  }, (new cljs.core.Keyword(null, "buttons", "buttons", -1953831197)).cljs$core$IFn$_invoke$arity$1(a))], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "render-toolbar-button", "portfolio.views.canvas.protocols/render-toolbar-button", -474027607, null), new cljs.core.Var(function() {
    return portfolio.components.canvas_toolbar_buttons.ButtonGroup;
  }, new cljs.core.Symbol("portfolio.components.canvas-toolbar-buttons", "ButtonGroup", "portfolio.components.canvas-toolbar-buttons/ButtonGroup", 1443226220, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
  new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.components.canvas-toolbar-buttons", "portfolio.components.canvas-toolbar-buttons", 684710462, null), new cljs.core.Symbol(null, "ButtonGroup", "ButtonGroup", -309978472, 
  null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/components/canvas_toolbar_buttons.cljs", 28, 1, 26, 26, cljs.core.List.EMPTY, "", cljs.core.truth_(portfolio.components.canvas_toolbar_buttons.ButtonGroup) ? portfolio.components.canvas_toolbar_buttons.ButtonGroup.cljs$lang$test : null]))], null));
};
portfolio.views.canvas.zoom.create_zoom_tool = function(a) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("canvas", "zoom", "canvas/zoom", 596462602), new cljs.core.Keyword(null, "buttons", "buttons", -1953831197), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [portfolio.views.canvas.zoom.create_zoom_in_tool.call(null, a), portfolio.views.canvas.zoom.create_zoom_out_tool.call(null, a), portfolio.views.canvas.zoom.create_reset_zoom_tool.call(null, 
  a)], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-canvas", "portfolio.views.canvas.protocols/prepare-canvas", 1591467281, null), function(b, c, d) {
    return portfolio.views.canvas.zoom.zoom.call(null, c, d);
  }, new cljs.core.Symbol("portfolio.views.canvas.protocols", "finalize-canvas", "portfolio.views.canvas.protocols/finalize-canvas", -1958789840, null), function(b, c, d) {
    return null;
  }, new cljs.core.Symbol("portfolio.views.canvas.protocols", "prepare-toolbar-button", "portfolio.views.canvas.protocols/prepare-toolbar-button", 127148166, null), new cljs.core.Var(function() {
    return portfolio.views.canvas.zoom.prepare_button_group;
  }, new cljs.core.Symbol("portfolio.views.canvas.zoom", "prepare-button-group", "portfolio.views.canvas.zoom/prepare-button-group", -1359650072, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "portfolio.views.canvas.zoom", "portfolio.views.canvas.zoom", 539896532, null), new cljs.core.Symbol(null, "prepare-button-group", "prepare-button-group", -1014930705, null), "/Users/christian/.gitlibs/libs/no.cjohansen/portfolio/5f9d05e933a4e64af54740c016a7a81ddef583fc/src/portfolio/views/canvas/zoom.cljs", 
  27, 1, 79, 79, cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tool", "tool", 341835057, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "opt", "opt", 845825158, null)], null)), null, cljs.core.truth_(portfolio.views.canvas.zoom.prepare_button_group) ? portfolio.views.canvas.zoom.prepare_button_group.cljs$lang$test : null]))], null));
};
portfolio.ui = {};
portfolio.ui.app = cljs.core.atom.call(null, null);
portfolio.ui.create_app = function(a, b, c) {
  var d = cljs.core.assoc, e = d.call, f = portfolio.core.init_state.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "scenes", "scenes", -425219404), cljs.core.vals.call(null, cljs.core.deref.call(null, portfolio.data.scenes)), new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), cljs.core.vals.call(null, cljs.core.deref.call(null, portfolio.data.namespaces)), new cljs.core.Keyword(null, "collections", "collections", -2114643505), cljs.core.vals.call(null, cljs.core.deref.call(null, 
  portfolio.data.collections)))), g = new cljs.core.Keyword(null, "views", "views", 1450155487), h = cljs.core.PersistentVector, k = cljs.core.PersistentVector.EMPTY_NODE, l = portfolio.views.canvas.create_canvas, m = l.call, n = cljs.core.PersistentArrayMap, p = new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185), r = (new cljs.core.Keyword("canvas", "layout", "canvas/layout", -737151185)).cljs$core$IFn$_invoke$arity$1(a), u = new cljs.core.Keyword(null, "tools", "tools", -1241731990), 
  z = cljs.core.into, D = z.call;
  a = cljs.core.truth_(b) ? b : new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [portfolio.views.canvas.background.create_background_tool.call(null, a), portfolio.views.canvas.viewport.create_viewport_tool.call(null, a), portfolio.views.canvas.grid.create_grid_tool.call(null, a), portfolio.views.canvas.zoom.create_zoom_tool.call(null, a), portfolio.views.canvas.split.create_split_horizontally_tool.call(null, a), portfolio.views.canvas.split.create_split_vertically_tool.call(null, 
  a), portfolio.views.canvas.split.create_close_tool.call(null, a)], null);
  return e.call(d, null, f, g, new h(null, 1, 5, k, [m.call(l, null, new n(null, 2, [p, r, u, D.call(z, null, a, c)], null))], null));
};
portfolio.ui.eventually_execute = portfolio.homeless.debounce.call(null, portfolio.actions.execute_action_BANG_, 250);
portfolio.ui.start_BANG_ = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return portfolio.ui.start_BANG_.cljs$core$IFn$_invoke$arity$variadic(b);
};
portfolio.ui.start_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.nth.call(null, a, 0, null);
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "on-render", "on-render", 2096729391));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "config", "config", 994861415)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "canvas-tools", "canvas-tools", -1946158067));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "extra-canvas-tools", "extra-canvas-tools", 1666309267));
  cljs.core.swap_BANG_.call(null, portfolio.ui.app, cljs.core.merge, portfolio.ui.create_app.call(null, c, d, b));
  cljs.core.add_watch.call(null, portfolio.data.scenes, new cljs.core.Keyword("portfolio.ui", "app", "portfolio.ui/app", 355044435), function(e, f, g, h) {
    cljs.core.swap_BANG_.call(null, portfolio.ui.app, cljs.core.assoc, new cljs.core.Keyword(null, "scenes", "scenes", -425219404), h);
    return portfolio.ui.eventually_execute.call(null, portfolio.ui.app, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "go-to-current-location", "go-to-current-location", 1620881583)], null));
  });
  cljs.core.add_watch.call(null, portfolio.data.namespaces, new cljs.core.Keyword("portfolio.ui", "app", "portfolio.ui/app", 355044435), function(e, f, g, h) {
    return cljs.core.swap_BANG_.call(null, portfolio.ui.app, cljs.core.assoc, new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469), h);
  });
  cljs.core.add_watch.call(null, portfolio.data.collections, new cljs.core.Keyword("portfolio.ui", "app", "portfolio.ui/app", 355044435), function(e, f, g, h) {
    return cljs.core.swap_BANG_.call(null, portfolio.ui.app, cljs.core.assoc, new cljs.core.Keyword(null, "collections", "collections", -2114643505), h);
  });
  return portfolio.client.start_app.call(null, portfolio.ui.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-render", "on-render", 2096729391), a], null));
};
portfolio.ui.start_BANG_.cljs$lang$maxFixedArity = 0;
portfolio.ui.start_BANG_.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
portfolio.dumdom = {};
portfolio.dumdom.component_impl = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("portfolio.adapter", "render-component", "portfolio.adapter/render-component", -433053335, null), function(a, b) {
  var c = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "component", "component", 1555936782));
  var d = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "id", "id", -1388402092));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "updated-at", "updated-at", -1592622336));
  return cljs.core.truth_(b) ? dumdom.core.render.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(d), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("")], null), a], null), b) : console.error("Asked to render Dumdom component without an element");
}], null);
portfolio.dumdom.create_scene = function(a) {
  return portfolio.adapter.prepare_scene.call(null, a, portfolio.dumdom.component_impl);
};
var sasha = {components:{}};
sasha.components.spinner = {};
sasha.components.spinner.Spinner = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return sasha.components.spinner.Spinner.cljs$core$IFn$_invoke$arity$variadic(b);
};
sasha.components.spinner.Spinner.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.nth.call(null, a, 0, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg.spinner", "svg.spinner", -48573392), cljs.core.merge.call(null, a, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 100 100"], null)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "g.spinner-inner", "g.spinner-inner", 620849111), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "10", new cljs.core.Keyword(null, "cx", "cx", 1272694324), "50", new cljs.core.Keyword(null, "cy", "cy", 755331060), "50", new cljs.core.Keyword(null, 
  "r", "r", -471384190), "31", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "var(--spinner-track)"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "circle.spinner-circle", "circle.spinner-circle", 886452578), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "stroke-dasharray", "stroke-dasharray", -942933855), new cljs.core.Keyword(null, "r", "r", -471384190), new cljs.core.Keyword(null, 
  "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-dashoffset", "stroke-dashoffset", -782320340), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "cx", "cx", 1272694324), new cljs.core.Keyword(null, "cy", "cy", 755331060)], "200 31 var(--spinner-line) none 0 round 10 50 50".split(" "))], null)], 
  null)], null);
};
sasha.components.spinner.Spinner.cljs$lang$maxFixedArity = 0;
sasha.components.spinner.Spinner.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
sasha.components.button = {};
sasha.components.button.Button = function(a) {
  a = cljs.core.__destructure_map.call(null, a);
  var b = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "id", "id", -1388402092)), c = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "text", "text", -1790561697)), d = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "type", "type", 1174270348)), e = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "href", "href", -793805698)), f = cljs.core.get.call(null, a, new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181)), g = cljs.core.PersistentVector, h = 
  cljs.core.PersistentVector.EMPTY_NODE, k = cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["submit", null, "button", null], null), null)).call(null, d)) ? new cljs.core.Keyword(null, "button", "button", 1456579943) : new cljs.core.Keyword(null, "a", "a", -2123407586), l = cljs.core.merge, m = l.call, n = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "className", "className", -1983287057), ["button text-m", cljs.core.truth_(f) ? 
  " button-disabled" : null].join("")], null), p = cljs.core.truth_(d) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), d], null) : null, r = cljs.core, u = r.truth_;
  d = cljs.core.truth_(d) ? f : d;
  return new g(null, 4, 5, h, [k, m.call(l, null, n, p, u.call(r, d) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), "true"], null) : null, cljs.core.truth_(b) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), b], null) : null, cljs.core.truth_(e) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), e], null) : null), cljs.core.truth_((new cljs.core.Keyword(null, 
  "spinner?", "spinner?", 939139177)).cljs$core$IFn$_invoke$arity$1(a)) ? sasha.components.spinner.Spinner.call(null) : null, c], null);
};
sasha.components.button_scenes = {};
portfolio.data.register_namespace_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), "sasha.components.button-scenes", new cljs.core.Keyword(null, "title", "title", 636505583), "Button", new cljs.core.Keyword(null, "group", "group", 582596132), new cljs.core.Keyword(null, "components", "components", -1073188942)], null));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.button-scenes", "button", "sasha.components.button-scenes/button", 1827652925), new cljs.core.Keyword(null, "line", "line", 212345235), 8, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.button.Button.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Click it", new cljs.core.Keyword(null, "href", "href", -793805698), "/lul"], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.button-scenes", "disabled-button", "sasha.components.button-scenes/disabled-button", 435946190), new cljs.core.Keyword(null, "line", "line", 212345235), 12, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.button.Button.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Click it", new cljs.core.Keyword(null, "href", "href", -793805698), "/lul", new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), !0], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.button-scenes", "button-with-spinner", "sasha.components.button-scenes/button-with-spinner", 871343751), new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.button.Button.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Click it", new cljs.core.Keyword(null, "href", "href", -793805698), "/lul", new cljs.core.Keyword(null, "disabled?", "disabled?", -1523234181), !0, new cljs.core.Keyword(null, "spinner?", "spinner?", 939139177), !0], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
sasha.components.completion_input = {};
sasha.components.completion_input.CompletionInput = dumdom.core.component.call(null, function(a) {
  var b = dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "onComplete", "onComplete", -661010670)).cljs$core$IFn$_invoke$arity$1(a)), c = dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "onSubmit", "onSubmit", 761425194)).cljs$core$IFn$_invoke$arity$1(a));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "position", "position", -2011731912), "relative"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input.input.suggestion", 
  "input.input.suggestion", 1842104538), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    var d = (new cljs.core.Keyword(null, "completion", "completion", -731716930)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(d) ? d : "";
  }()], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input.input", "input.input", -850828147), cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 
  0, new cljs.core.Keyword(null, "left", "left", -399115937), 0, new cljs.core.Keyword(null, "right", "right", -452581833), 0, new cljs.core.Keyword(null, "background", "background", -863952629), "transparent"], null), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(d) {
    var e = cljs.core, f = e.truth_;
    var g = cljs.core.not_empty.call(null, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(a));
    cljs.core.truth_(g) && (g = (new cljs.core.Keyword(null, "completion", "completion", -731716930)).cljs$core$IFn$_invoke$arity$1(a), g = cljs.core.truth_(g) ? b : g);
    return f.call(e, g) ? b.call(null, d) : null;
  }, new cljs.core.Keyword(null, "onKeyDown", "onKeyDown", 648902330), function(d) {
    cljs.core.truth_(function() {
      var e = cljs.core._EQ_.call(null, "Enter", d.key);
      return e ? c : e;
    }()) && (d.preventDefault(), c.call(null, d));
    return cljs.core.truth_(function() {
      var e = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Tab", null, "ArrowRight", null], null), null)).call(null, d.key);
      return cljs.core.truth_(e) ? b : e;
    }()) ? (d.preventDefault(), b.call(null, d)) : null;
  })], null)], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "sasha.components.completion-input/CompletionInput"], null));
sasha.components.completion_input_scenes = {};
portfolio.data.register_namespace_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), "sasha.components.completion-input-scenes", new cljs.core.Keyword(null, "title", "title", 636505583), "Completion Input", new cljs.core.Keyword(null, "group", "group", 582596132), new cljs.core.Keyword(null, "components", "components", -1073188942)], null));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.completion-input-scenes", "empty-input", "sasha.components.completion-input-scenes/empty-input", 963755461), new cljs.core.Keyword(null, "line", "line", 212345235), 9, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.completion_input.CompletionInput.call(null, cljs.core.PersistentArrayMap.EMPTY);
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.completion-input-scenes", "input-with-placeholder", "sasha.components.completion-input-scenes/input-with-placeholder", 1602371878), new cljs.core.Keyword(null, "line", "line", 212345235), 12, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.completion_input.CompletionInput.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Write in it"], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.completion-input-scenes", "input-with-placeholder-and-value", "sasha.components.completion-input-scenes/input-with-placeholder-and-value", 159981226), new cljs.core.Keyword(null, "line", "line", 212345235), 15, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), 
function() {
  var a = function(c) {
    return sasha.components.completion_input.CompletionInput.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Write in it", new cljs.core.Keyword(null, "value", "value", 305978217), "I am writing"], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.completion-input-scenes", "input-with-suggestion", "sasha.components.completion-input-scenes/input-with-suggestion", 76589559), new cljs.core.Keyword(null, "line", "line", 212345235), 19, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.completion_input.CompletionInput.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), "I am writing", new cljs.core.Keyword(null, "completion", "completion", -731716930), "I am writing to you"], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
sasha.components.completion_input_scenes.completions = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, "Bananas;Apples;Oranges;Orangutangs;Orange juice;Oracle".split(";"), null);
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.completion-input-scenes", "input-with-live-suggestions", "sasha.components.completion-input-scenes/input-with-live-suggestions", -1780566319), new cljs.core.Keyword(null, "line", "line", 212345235), 31, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), 
function() {
  var a = function(c, d) {
    d = cljs.core.deref.call(null, c);
    d = cljs.core.__destructure_map.call(null, d);
    var e = cljs.core.get.call(null, d, new cljs.core.Keyword(null, "text", "text", -1790561697));
    return sasha.components.completion_input.CompletionInput.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "value", "value", 305978217), e, new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "Try completions", new cljs.core.Keyword(null, "completion", "completion", -731716930), cljs.core.empty_QMARK_.call(null, e) ? null : cljs.core.first.call(null, cljs.core.filter.call(null, function(f) {
      return clojure.string.starts_with_QMARK_.call(null, f, e);
    }, sasha.components.completion_input_scenes.completions)), new cljs.core.Keyword(null, "onInput", "onInput", -1944920038), function(f) {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "text", "text", -1790561697), f.target.value);
    }], null));
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
sasha.components.spinner_scenes = {};
portfolio.data.register_namespace_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), "sasha.components.spinner-scenes", new cljs.core.Keyword(null, "title", "title", 636505583), "Spinner", new cljs.core.Keyword(null, "group", "group", 582596132), new cljs.core.Keyword(null, "components", "components", -1073188942)], null));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.spinner-scenes", "spinner", "sasha.components.spinner-scenes/spinner", 352172980), new cljs.core.Keyword(null, "line", "line", 212345235), 8, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-width", "max-width", -1939924051), 100], null)], null), sasha.components.spinner.Spinner.call(null)], null);
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
sasha.components.swiper = {};
sasha.components.swiper.touch_x = function(a) {
  a = null == a ? null : a.changedTouches;
  a = null == a ? null : a[0];
  return null == a ? null : a.screenX;
};
sasha.components.swiper.parse_num = function(a) {
  a = parseInt(a, 10);
  return cljs.core.truth_(isNaN(a)) ? 0 : a;
};
sasha.components.swiper.set_left = function(a, b) {
  return a.style.left = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(b), "px"].join("");
};
sasha.components.swiper.animate_left_pos = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 2 < b.length ? new cljs.core.IndexedSeq(b.slice(2), 0, null) : null;
  return sasha.components.swiper.animate_left_pos.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], b);
};
sasha.components.swiper.animate_left_pos.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c) {
  c = cljs.core.nth.call(null, c, 0, null);
  c = cljs.core.truth_(c) ? c : 150;
  a.style.transition = ["left ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), "ms"].join("");
  setTimeout(function() {
    return sasha.components.swiper.set_left.call(null, a, b);
  });
  return setTimeout(function() {
    return a.style.transition = "";
  }, c);
};
sasha.components.swiper.animate_left_pos.cljs$lang$maxFixedArity = 2;
sasha.components.swiper.animate_left_pos.cljs$lang$applyTo = function(a) {
  var b = cljs.core.first.call(null, a), c = cljs.core.next.call(null, a);
  a = cljs.core.first.call(null, c);
  c = cljs.core.next.call(null, c);
  return this.cljs$core$IFn$_invoke$arity$variadic(b, a, c);
};
sasha.components.swiper.get_threshold = function(a, b) {
  b = "number" === typeof b ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null) : b;
  return cljs.core.coll_QMARK_.call(null, b) ? cljs.core.map.call(null, function(c) {
    return 1 >= cljs.core.abs.call(null, c) ? c * a : c;
  }, cljs.core.take.call(null, 2, cljs.core.cycle.call(null, b))) : null;
};
sasha.components.swiper.fire_threshold_events = function(a, b, c, d, e) {
  var f = cljs.core.deref.call(null, a);
  f = cljs.core.__destructure_map.call(null, f);
  var g = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "past-left-in-threshold?", "past-left-in-threshold?", 843083831)), h = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "past-left-out-threshold?", "past-left-out-threshold?", 183044553)), k = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "past-right-in-threshold?", "past-right-in-threshold?", -1447189991)), l = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "past-right-out-threshold?", "past-right-out-threshold?", 
  1239961622));
  f = cljs.core.__destructure_map.call(null, b);
  var m = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564));
  f = cljs.core.get.call(null, f, new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361));
  if (0 <= c && cljs.core.truth_(m)) {
    var n = cljs.core.nth.call(null, m, 0, null), p = cljs.core.nth.call(null, m, 1, null);
    if (cljs.core.not.call(null, g) && n <= c || cljs.core.not.call(null, h) && p <= c) {
      cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-left-in-threshold?", "past-left-in-threshold?", 843083831), !0), m = null == d ? null : d.classList, null != m && m.add("swiper-above-threshold"), m = (new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(m) && m.call(null);
    }
    cljs.core.not.call(null, h) && p <= c && cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-left-out-threshold?", "past-left-out-threshold?", 183044553), !0);
    cljs.core.truth_(function() {
      var D = cljs.core.truth_(g) ? c < n : g;
      return cljs.core.truth_(D) ? D : cljs.core.truth_(h) ? c < p : h;
    }()) && (cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-left-out-threshold?", "past-left-out-threshold?", 183044553), !1), d = null == d ? null : d.classList, null != d && d.remove("swiper-above-threshold"), d = (new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(d) && d.call(null));
    cljs.core.truth_(cljs.core.truth_(g) ? c <= n : g) && cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-left-in-threshold?", "past-left-in-threshold?", 843083831), !1);
  }
  if (0 >= c && cljs.core.truth_(f)) {
    var r = cljs.core.nth.call(null, f, 0, null), u = cljs.core.nth.call(null, f, 1, null), z = -c;
    if (cljs.core.not.call(null, k) && r <= z || cljs.core.not.call(null, l) && u <= z) {
      cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-right-in-threshold?", "past-right-in-threshold?", -1447189991), !0), d = null == e ? null : e.classList, null != d && d.add("swiper-above-threshold"), d = (new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(d) && d.call(null);
    }
    cljs.core.not.call(null, l) && u <= z && cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-right-out-threshold?", "past-right-out-threshold?", 1239961622), !0);
    cljs.core.truth_(function() {
      var D = cljs.core.truth_(k) ? z < r : k;
      return cljs.core.truth_(D) ? D : cljs.core.truth_(l) ? z < u : l;
    }()) && (cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-right-out-threshold?", "past-right-out-threshold?", 1239961622), !1), e = null == e ? null : e.classList, null != e && e.remove("swiper-above-threshold"), b = (new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267)).cljs$core$IFn$_invoke$arity$1(b), cljs.core.truth_(b) && b.call(null));
    return cljs.core.truth_(cljs.core.truth_(k) ? z <= r : k) ? cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, new cljs.core.Keyword(null, "past-right-in-threshold?", "past-right-in-threshold?", -1447189991), !1) : null;
  }
  return null;
};
sasha.components.swiper.with_defaults = function(a, b, c, d) {
  b = null == b ? null : b.clientWidth;
  return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352), new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267), new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396), new cljs.core.Keyword(null, "snap-left", "snap-left", -535184056), new cljs.core.Keyword(null, "snap-right", "snap-right", -1064610294), new cljs.core.Keyword(null, 
  "left-threshold", "left-threshold", -475912564), new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361), new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878), new cljs.core.Keyword(null, "on-snap-left", "on-snap-left", -900655144), new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406), new cljs.core.Keyword(null, "swipe-threshold", "swipe-threshold", -1639251265)], [dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, 
  "on-above-right-threshold", "on-above-right-threshold", -1104096352)).cljs$core$IFn$_invoke$arity$1(a)), dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267)).cljs$core$IFn$_invoke$arity$1(a)), dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396)).cljs$core$IFn$_invoke$arity$1(a)), function() {
    var e = (new cljs.core.Keyword(null, "snap-left", "snap-left", -535184056)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(e) ? e : 0.25;
  }(), function() {
    var e = (new cljs.core.Keyword(null, "snap-right", "snap-right", -1064610294)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(e) ? e : 0.25;
  }(), sasha.components.swiper.get_threshold.call(null, b, function() {
    var e = (new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(e) ? e : null == c ? null : c.clientWidth;
  }()), sasha.components.swiper.get_threshold.call(null, b, function() {
    var e = (new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(e) ? e : null == d ? null : d.clientWidth;
  }()), dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878)).cljs$core$IFn$_invoke$arity$1(a)), dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "on-snap-left", "on-snap-left", -900655144)).cljs$core$IFn$_invoke$arity$1(a)), dumdom.element.event_handler.call(null, (new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406)).cljs$core$IFn$_invoke$arity$1(a)), function() {
    var e = (new cljs.core.Keyword(null, "swipe-threshold", "swipe-threshold", -1639251265)).cljs$core$IFn$_invoke$arity$1(a);
    return cljs.core.truth_(e) ? e : 5;
  }()]);
};
sasha.components.swiper.get_target_direction = function(a, b, c, d) {
  return 0 > a ? new cljs.core.Keyword(null, "right", "right", -452581833) : 0 < a ? new cljs.core.Keyword(null, "left", "left", -399115937) : cljs.core.truth_(function() {
    var e = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "left", "left", -399115937), b);
    return e ? d : e;
  }()) ? new cljs.core.Keyword(null, "right", "right", -452581833) : cljs.core.truth_(function() {
    var e = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "right", "right", -452581833), b);
    return e ? c : e;
  }()) ? new cljs.core.Keyword(null, "left", "left", -399115937) : null;
};
sasha.components.swiper.get_direction_update = function(a, b) {
  var c = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "direction", "direction", -633359395));
  c = cljs.core.get.call(null, c, new cljs.core.Keyword(null, "x", "x", 2099068185));
  return cljs.core.truth_(a) ? null : b < c ? new cljs.core.Keyword(null, "left", "left", -399115937) : new cljs.core.Keyword(null, "right", "right", -452581833);
};
sasha.components.swiper.mount_swiper = function(a, b) {
  var c = null == a ? null : a.querySelector(".swipe-left"), d = null == a ? null : a.querySelector(".swipe-right"), e = null == a ? null : a.querySelector(".swipee"), f = sasha.components.swiper.with_defaults.call(null, b, e, c, d), g = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), 0, new cljs.core.Keyword(null, "left", "left", -399115937), 0], null));
  b = function(l) {
    return cljs.core.reset_BANG_.call(null, g, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "x", "x", 2099068185), sasha.components.swiper.touch_x.call(null, l), new cljs.core.Keyword(null, "left", "left", -399115937), sasha.components.swiper.parse_num.call(null, e.style.left), new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564), cljs.core.first.call(null, (new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564)).cljs$core$IFn$_invoke$arity$1(f)), 
    new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361), cljs.core.first.call(null, (new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361)).cljs$core$IFn$_invoke$arity$1(f)), new cljs.core.Keyword(null, "past-left-threshold?", "past-left-threshold?", 259418662), (new cljs.core.Keyword(null, "past-left-threshold?", "past-left-threshold?", 259418662)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, g)), new cljs.core.Keyword(null, "past-right-threshold?", 
    "past-right-threshold?", 900382663), (new cljs.core.Keyword(null, "past-right-threshold?", "past-right-threshold?", 900382663)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, g))], null));
  };
  var h = function(l) {
    var m = sasha.components.swiper.touch_x.call(null, l);
    if (cljs.core.truth_(m)) {
      var n = sasha.components.swiper.get_direction_update.call(null, cljs.core.deref.call(null, g), m), p = cljs.core.deref.call(null, g), r = cljs.core.__destructure_map.call(null, p), u = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "x", "x", 2099068185));
      p = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "left", "left", -399115937));
      r = cljs.core.get.call(null, r, new cljs.core.Keyword(null, "direction", "direction", -633359395));
      r = cljs.core.truth_(n) ? n : r;
      var z = p + (m - u), D = sasha.components.swiper.get_target_direction.call(null, p, r, c, d);
      cljs.core.truth_(n) && (cljs.core.swap_BANG_.call(null, g, cljs.core.assoc, new cljs.core.Keyword(null, "direction", "direction", -633359395), n), n = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "left", "left", -399115937), D) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null), m = cljs.core.nth.call(null, n, 0, null), n = cljs.core.nth.call(null, 
      n, 1, null), cljs.core.truth_(m) && (cljs.core.truth_(m.originalDisplay) || (m.originalDisplay = getComputedStyle(m).getPropertyValue("display")), m.style.display = "none"), cljs.core.truth_(cljs.core.truth_(n) ? n.originalDisplay : n) && (n.style.display = n.originalDisplay));
      if (cljs.core.not_EQ_.call(null, 0, p) || (new cljs.core.Keyword(null, "swipe-threshold", "swipe-threshold", -1639251265)).cljs$core$IFn$_invoke$arity$1(f) < cljs.core.abs.call(null, p - z)) {
        return l.preventDefault(), l = function() {
          switch(D instanceof cljs.core.Keyword ? D.fqn : null) {
            case "left":
              return Math.max(z, 0);
            case "right":
              return Math.min(z, 0);
            default:
              return 0;
          }
        }(), sasha.components.swiper.fire_threshold_events.call(null, g, f, l, c, d), sasha.components.swiper.set_left.call(null, e, l);
      }
    }
    return null;
  }, k = function(l) {
    l = cljs.core.deref.call(null, g);
    var m = cljs.core.__destructure_map.call(null, l);
    l = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "left", "left", -399115937));
    var n = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "direction", "direction", -633359395)), p = null == d ? null : d.clientWidth, r = null == c ? null : c.clientWidth;
    m = sasha.components.swiper.parse_num.call(null, e.style.left) - l;
    var u = cljs.core.truth_(cljs.core.truth_(p) ? 0 >= l && 0 > m && p * (new cljs.core.Keyword(null, "snap-right", "snap-right", -1064610294)).cljs$core$IFn$_invoke$arity$1(f) < cljs.core.abs.call(null, m) : p) ? -p : cljs.core.truth_(cljs.core.truth_(r) ? 0 <= l && 0 < m && r * (new cljs.core.Keyword(null, "snap-left", "snap-left", -535184056)).cljs$core$IFn$_invoke$arity$1(f) < m : r) ? r : 0;
    sasha.components.swiper.fire_threshold_events.call(null, g, f, u, c, d);
    sasha.components.swiper.animate_left_pos.call(null, e, u);
    cljs.core.truth_(function() {
      var z = cljs.core._EQ_.call(null, u, -p);
      return z ? (z = cljs.core._EQ_.call(null, n, new cljs.core.Keyword(null, "left", "left", -399115937))) ? (new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406)).cljs$core$IFn$_invoke$arity$1(f) : z : z;
    }()) && (new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406)).cljs$core$IFn$_invoke$arity$1(f).call(null);
    return cljs.core.truth_(function() {
      var z = cljs.core._EQ_.call(null, u, r);
      return z ? (z = cljs.core._EQ_.call(null, n, new cljs.core.Keyword(null, "right", "right", -452581833))) ? (new cljs.core.Keyword(null, "on-snap-left", "on-snap-left", -900655144)).cljs$core$IFn$_invoke$arity$1(f) : z : z;
    }()) ? (new cljs.core.Keyword(null, "on-snap-left", "on-snap-left", -900655144)).cljs$core$IFn$_invoke$arity$1(f).call(null) : null;
  };
  return cljs.core.truth_(e) ? (e.style.position = "relative", e.style.left = 0, a.addEventListener("contextmenu", function(l) {
    return l.preventDefault();
  }, !1), a.addEventListener("touchstart", b, !1), a.addEventListener("mousedown", b, !1), a.addEventListener("touchmove", h, !1), a.addEventListener("mousemove", h, !1), a.addEventListener("touchend", k, !1), a.addEventListener("mouseup", k, !1)) : null;
};
sasha.components.swiper.swipable_container = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return sasha.components.swiper.swipable_container.cljs$core$IFn$_invoke$arity$variadic(b);
};
sasha.components.swiper.swipable_container.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  return cljs.core.apply.call(null, cljs.core.vector, new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), "relative", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null)], null), a);
};
sasha.components.swiper.swipable_container.cljs$lang$maxFixedArity = 0;
sasha.components.swiper.swipable_container.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
sasha.components.swiper.SwipeReveal = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "swipee", "swipee", -620984612));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "right", "right", -452581833));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "left", "left", -399115937));
  return sasha.components.swiper.swipable_container.call(null, cljs.core.truth_(c) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipe-right", "div.swipe-right", 2110781987), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "right", 
  "right", -452581833), 0, new cljs.core.Keyword(null, "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 0], null)], null), c], null) : null, cljs.core.truth_(b) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipe-left", "div.swipe-left", -1783015736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 
  4, [new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "left", "left", -399115937), 0, new cljs.core.Keyword(null, "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 0], null)], null), b], null) : null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipee", "div.swipee", -972995774), a], null));
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "sasha.components.swiper/SwipeReveal", new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840), sasha.components.swiper.mount_swiper], null));
sasha.components.swiper.SwipeControl = dumdom.core.component.call(null, function(a) {
  var b = cljs.core.__destructure_map.call(null, a);
  a = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "color", "color", 1011675173));
  var c = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "content", "content", 15833224)), d = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "align", "align", 1964212802));
  b = cljs.core.get.call(null, b, new cljs.core.Keyword(null, "class-name", "class-name", 945142584));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipe-control", "div.swipe-control", -2017421777), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), clojure.string.join.call(null, " ", cljs.core.remove.call(null, cljs.core.empty_QMARK_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, 
  "right", "right", -452581833), d) ? "swipe-right" : "swipe-left"], null))), new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "align-items", "align-items", -267946462), new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), new cljs.core.Keyword(null, "top", "top", -1856271961), new cljs.core.Keyword(null, "background", "background", -863952629), new cljs.core.Keyword(null, "padding", "padding", 1660304693), new cljs.core.Keyword(null, 
  "justify-content", "justify-content", -1990475787), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "display", "display", 242065432), new cljs.core.Keyword(null, "position", "position", -2011731912), new cljs.core.Keyword(null, "left", "left", -399115937)], ["center", 0, 0, a, "0 20px", cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "right", "right", -452581833), d) ? "flex-end" : null, 0, "flex", "absolute", 0])], null), c], null);
}, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "sasha.components.swiper/SwipeControl"], null));
sasha.components.icon = {};
sasha.components.icon.params = function(a) {
  return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.into.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "color", "color", 1011675173), (new cljs.core.Keyword(null, "color", "color", 1011675173)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "width", "width", -384071477), (new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword(null, "height", 
  "height", 1025178622), (new cljs.core.Keyword(null, "size", "size", 1098693007)).cljs$core$IFn$_invoke$arity$1(a)], null), (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(a)));
};
sasha.icons = {};
sasha.icons.check = {};
sasha.icons.check.check = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return sasha.icons.check.check.cljs$core$IFn$_invoke$arity$variadic(b);
};
sasha.icons.check.check.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.nth.call(null, a, 0, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), sasha.components.icon.params.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256")), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "polyline", "polyline", -1731551044), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, 
  "points", "points", -1486596883), "216 72 104 184 48 128", new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null)], null);
};
sasha.icons.check.check.cljs$lang$maxFixedArity = 0;
sasha.icons.check.check.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
sasha.icons.trash = {};
sasha.icons.trash.trash = function(a) {
  for (var b = [], c = arguments.length, d = 0;;) {
    if (d < c) {
      b.push(arguments[d]), d += 1;
    } else {
      break;
    }
  }
  b = 0 < b.length ? new cljs.core.IndexedSeq(b.slice(0), 0, null) : null;
  return sasha.icons.trash.trash.cljs$core$IFn$_invoke$arity$variadic(b);
};
sasha.icons.trash.trash.cljs$core$IFn$_invoke$arity$variadic = function(a) {
  a = cljs.core.nth.call(null, a, 0, null);
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "svg", "svg", 856789142), sasha.components.icon.params.call(null, cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "viewBox", "viewBox", -469489477), "0 0 256 256")), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, 
  "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "y1", "y1", 589123466), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x1", "x1", -1863922247), new cljs.core.Keyword(null, "y2", "y2", -718691301), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)], "currentColor none round 56 round 16 216 56 40".split(" "))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, 
  "y1", "y1", 589123466), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x1", "x1", -1863922247), new cljs.core.Keyword(null, "y2", "y2", -718691301), new cljs.core.Keyword(null, "x2", "x2", -1362513475)], "currentColor none round 104 round 16 104 168 104".split(" "))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "line", "line", 212345235), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), new cljs.core.Keyword(null, "fill", "fill", 883462889), new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), new cljs.core.Keyword(null, "y1", "y1", 589123466), new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), new cljs.core.Keyword(null, "x1", 
  "x1", -1863922247), new cljs.core.Keyword(null, "y2", "y2", -718691301), new cljs.core.Keyword(null, "x2", "x2", -1362513475)], "currentColor none round 104 round 16 152 168 152".split(" "))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M200,56V208a8,8,0,0,1-8,8H64a8,8,0,0,1-8-8V56", new cljs.core.Keyword(null, 
  "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), "16"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "path", 
  "path", -188191168), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "d", "d", 1972142424), "M168,56V40a16,16,0,0,0-16-16H104A16,16,0,0,0,88,40V56", new cljs.core.Keyword(null, "fill", "fill", 883462889), "none", new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "currentColor", new cljs.core.Keyword(null, "stroke-linecap", "stroke-linecap", -1201103248), "round", new cljs.core.Keyword(null, "stroke-linejoin", "stroke-linejoin", -1810816406), "round", new cljs.core.Keyword(null, 
  "stroke-width", "stroke-width", 716836435), "16"], null)], null)], null);
};
sasha.icons.trash.trash.cljs$lang$maxFixedArity = 0;
sasha.icons.trash.trash.cljs$lang$applyTo = function(a) {
  return this.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, a));
};
sasha.components.swiper_scenes = {};
portfolio.data.register_namespace_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "namespace", "namespace", -377510372), "sasha.components.swiper-scenes", new cljs.core.Keyword(null, "title", "title", 636505583), "Swiper", new cljs.core.Keyword(null, "group", "group", 582596132), new cljs.core.Keyword(null, "components", "components", -1073188942)], null));
sasha.components.swiper_scenes.styles = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display", "display", 242065432), "flex", new cljs.core.Keyword(null, "align-items", "align-items", -267946462), "center", new cljs.core.Keyword(null, "padding", "padding", 1660304693), "10px 20px", new cljs.core.Keyword(null, "height", "height", 1025178622), "50px"], null);
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swip-control-right", "sasha.components.swiper-scenes/swip-control-right", 1981449996), new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin-bottom", 
    "margin-bottom", 388334941), 10], null)], null), "Click it to toggle state"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "height", "height", 1025178622), 50, new cljs.core.Keyword(null, "position", "position", -2011731912), 
    "relative"], null), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(e) {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.update, new cljs.core.Keyword(null, "clicked?", "clicked?", -1150668623), cljs.core.not);
    }], null), sasha.components.swiper.SwipeControl.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "content", "content", 15833224), sasha.icons.trash.trash.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#ffffff", new cljs.core.Keyword(null, "size", "size", 1098693007), 24], null)), new cljs.core.Keyword(null, "color", "color", 1011675173), "var(--mexican-rojo)", new cljs.core.Keyword(null, "align", 
    "align", 1964212802), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "class-name", "class-name", 945142584), cljs.core.truth_((new cljs.core.Keyword(null, "clicked?", "clicked?", -1150668623)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? "swiper-above-threshold" : null], null))], null)], null);
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swip-control-left", "sasha.components.swiper-scenes/swip-control-left", -1059059713), new cljs.core.Keyword(null, "line", "line", 212345235), 33, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 151049309), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "margin-bottom", 
    "margin-bottom", 388334941), 10], null)], null), "Click it to toggle state"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "height", "height", 1025178622), 50, new cljs.core.Keyword(null, "position", "position", -2011731912), 
    "relative"], null), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(e) {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.update, new cljs.core.Keyword(null, "clicked?", "clicked?", -1150668623), cljs.core.not);
    }], null), sasha.components.swiper.SwipeControl.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "content", "content", 15833224), sasha.icons.check.check.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#ffffff", new cljs.core.Keyword(null, "size", "size", 1098693007), 24], null)), new cljs.core.Keyword(null, "color", "color", 1011675173), "var(--lima)", new cljs.core.Keyword(null, "class-name", 
    "class-name", 945142584), cljs.core.truth_((new cljs.core.Keyword(null, "clicked?", "clicked?", -1150668623)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? "swiper-above-threshold" : null], null))], null)], null);
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-left", "sasha.components.swiper-scenes/swipe-left", 1027912791), new cljs.core.Keyword(null, "line", "line", 212345235), 48, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
    "background", -863952629), "var(--woodsmoke)")], null), "Drag me right"], null), new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", 
    -863952629), "var(--lima)")], null), "OK!"], null)], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-right", "sasha.components.swiper-scenes/swipe-right", 1801936263), new cljs.core.Keyword(null, "line", "line", 212345235), 54, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
    "background", -863952629), "var(--woodsmoke)")], null), "Drag me left"], null), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", 
    -863952629), "var(--mexican-rojo)")], null), "NO!"], null)], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-both-ways", "sasha.components.swiper-scenes/swipe-both-ways", 1800560647), new cljs.core.Keyword(null, "line", "line", 212345235), 60, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c) {
    return sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
    "background", -863952629), "var(--woodsmoke)")], null), "Drag me both ways"], null), new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", 
    -863952629), "var(--lima)")], null), "OK!"], null), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--mexican-rojo)")], 
    null), "NO!"], null)], null));
  }, b = function(c) {
    var d = null;
    if (0 < arguments.length) {
      d = 0;
      for (var e = Array(arguments.length - 0); d < e.length;) {
        e[d] = arguments[d + 0], ++d;
      }
      d = new cljs.core.IndexedSeq(e, 0, null);
    }
    return a.call(this, d);
  };
  b.cljs$lang$maxFixedArity = 0;
  b.cljs$lang$applyTo = function(c) {
    c = cljs.core.seq(c);
    return a(c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}()], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-with-left-threshold-transition", "sasha.components.swiper-scenes/swipe-with-left-threshold-transition", 211355873), new cljs.core.Keyword(null, "line", "line", 212345235), 67, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
    "background", -863952629), "var(--woodsmoke)")], null), "Dragging right yields a transition"], null), new cljs.core.Keyword(null, "left", "left", -399115937), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "transition", 
    "transition", 765692007), "background 0.5s", new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_((new cljs.core.Keyword(null, "ok?", "ok?", 447310304)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? "var(--lima)" : "var(--mine-shaft)")], null), "OK!"], null), new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "ok?", "ok?", 447310304), !0);
    }, new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "ok?", "ok?", 447310304), !1);
    }], null));
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-with-right-threshold-transition", "sasha.components.swiper-scenes/swipe-with-right-threshold-transition", -339561642), new cljs.core.Keyword(null, "line", "line", 212345235), 83, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
    "background", -863952629), "var(--woodsmoke)")], null), "Dragging left yields a transition"], null), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "transition", 
    "transition", 765692007), "background 0.5s", new cljs.core.Keyword(null, "background", "background", -863952629), cljs.core.truth_((new cljs.core.Keyword(null, "ok?", "ok?", 447310304)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? "var(--mexican-rojo)" : "var(--mine-shaft)")], null), "NO!"], null), new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "ok?", "ok?", 447310304), !0);
    }, new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "ok?", "ok?", 447310304), !1);
    }], null));
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "swipe-both-ways-with-transitions", "sasha.components.swiper-scenes/swipe-both-ways-with-transitions", 1192713060), new cljs.core.Keyword(null, "line", "line", 212345235), 99, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return sasha.components.swiper.SwipeReveal.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352), new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267), new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396), new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564), new cljs.core.Keyword(null, "right-threshold", 
    "right-threshold", -1747117361), new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "swipee", "swipee", -620984612), new cljs.core.Keyword(null, "left", "left", -399115937)], [function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "right?", "right?", 380310444), !0);
    }, function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "right?", "right?", 380310444), !1);
    }, function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "left?", "left?", 1009526930), !0);
    }, 0.25, 0.25, function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "left?", "left?", 1009526930), !1);
    }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--mexican-rojo)", new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 100, new cljs.core.Keyword(null, 
    "transition", "transition", 765692007), "opacity 0.5s", new cljs.core.Keyword(null, "opacity", "opacity", 397153780), cljs.core.truth_((new cljs.core.Keyword(null, "right?", "right?", 380310444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? 1 : 0.1)], null), "NO!"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
    "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--woodsmoke)")], null), "Drag me both ways"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, 
    new cljs.core.Keyword(null, "background", "background", -863952629), "var(--lima)", new cljs.core.Keyword(null, "padding-right", "padding-right", -1250249681), 100, new cljs.core.Keyword(null, "transition", "transition", 765692007), "opacity 0.5s", new cljs.core.Keyword(null, "opacity", "opacity", 397153780), cljs.core.truth_((new cljs.core.Keyword(null, "left?", "left?", 1009526930)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? 1 : 0.1)], null), "OK!"], null)]));
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "snap-left-disappear", "sasha.components.swiper-scenes/snap-left-disappear", 2126468128), new cljs.core.Keyword(null, "line", "line", 212345235), 126, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.truth_((new cljs.core.Keyword(null, "retry?", "retry?", -1054643849)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "onClick", 
    "onClick", -1991238530), function(e) {
      e.preventDefault();
      return cljs.core.swap_BANG_.call(null, c, cljs.core.dissoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), new cljs.core.Keyword(null, "retry?", "retry?", -1054643849));
    }], null), "Try again"], null) : null, cljs.core.truth_((new cljs.core.Keyword(null, "gone?", "gone?", 1030484758)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? null : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
    "height", "height", 1025178622), 50, new cljs.core.Keyword(null, "transition", "transition", 765692007), "height 0.5s", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 0], null)], null), sasha.components.swiper.SwipeReveal.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, 
    "swipee", "swipee", -620984612), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--woodsmoke)")], null), "Drag me left"], null), new cljs.core.Keyword(null, "right", 
    "right", -452581833), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--mexican-rojo)", new cljs.core.Keyword(null, "opacity", "opacity", 397153780), cljs.core.truth_((new cljs.core.Keyword(null, 
    "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? 1 : 0.1, new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), 100)], null), "NO!"], null), new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361), 0.25, new cljs.core.Keyword(null, "snap-right", "snap-right", -1064610294), 0.4, new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !0);
    }, new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
    }, new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406), function() {
      cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), !0);
      return setTimeout(function() {
        return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "retry?", "retry?", -1054643849), !0, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
      }, 1000);
    }], null))], null)], null);
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
sasha.components.swiper_scenes.CustomSwipable = dumdom.core.component.call(null, function(a) {
  return sasha.components.swiper.swipable_container.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipe-left", "div.swipe-left", -1783015736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "background", "background", -863952629), "var(--mexican-rojo)", new cljs.core.Keyword(null, "opacity", "opacity", 
  397153780), cljs.core.truth_((new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0.1, new cljs.core.Keyword(null, "transition", "transition", 765692007), cljs.core.truth_((new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(a)) ? "opacity 0.5s ease-in" : "opacity 0.75s ease-out", new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "right", "right", -452581833), 
  0, new cljs.core.Keyword(null, "left", "left", -399115937), 0, new cljs.core.Keyword(null, "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 0], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), sasha.components.swiper_scenes.styles], null), "NO!"], null)], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipee", "div.swipee", -972995774), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", 
  "background", -863952629), "var(--woodsmoke)")], null), "Drag me right"], null)], null));
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "sasha.components.swiper-scenes/CustomSwipable", new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840), sasha.components.swiper.mount_swiper], null));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "custom-swipable", "sasha.components.swiper-scenes/custom-swipable", 260828760), new cljs.core.Keyword(null, "line", "line", 212345235), 176, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.truth_((new cljs.core.Keyword(null, "retry?", "retry?", -1054643849)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "onClick", 
    "onClick", -1991238530), function(e) {
      e.preventDefault();
      return cljs.core.swap_BANG_.call(null, c, cljs.core.dissoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), new cljs.core.Keyword(null, "retry?", "retry?", -1054643849));
    }], null), "Try again"], null) : null, cljs.core.truth_((new cljs.core.Keyword(null, "gone?", "gone?", 1030484758)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? null : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
    "height", "height", 1025178622), 50, new cljs.core.Keyword(null, "transition", "transition", 765692007), "height 0.5s", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 0], null)], null), sasha.components.swiper_scenes.CustomSwipable.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, 
    c), new cljs.core.Keyword(null, "on-above-left-threshold", "on-above-left-threshold", -1807622396), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !0);
    }, new cljs.core.Keyword(null, "on-below-left-threshold", "on-below-left-threshold", 1220301878), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
    }, new cljs.core.Keyword(null, "on-snap-left", "on-snap-left", -900655144), function() {
      cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), !0);
      return setTimeout(function() {
        return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "retry?", "retry?", -1054643849), !0, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
      }, 1000);
    }))], null)], null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "left-threshold", "left-threshold", -475912564), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.1, 0.2], null), new cljs.core.Keyword(null, "snap-left", "snap-left", -535184056), 0.3], null);
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
sasha.components.swiper_scenes.CustomSwipeRight = dumdom.core.component.call(null, function(a) {
  return sasha.components.swiper.swipable_container.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipe-right", "div.swipe-right", 2110781987), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "background", "background", -863952629), "var(--mexican-rojo)", new cljs.core.Keyword(null, "opacity", 
  "opacity", 397153780), cljs.core.truth_((new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(a)) ? 1 : 0.1, new cljs.core.Keyword(null, "transition", "transition", 765692007), cljs.core.truth_((new cljs.core.Keyword(null, "active?", "active?", 459499776)).cljs$core$IFn$_invoke$arity$1(a)) ? "opacity 0.5s ease-in" : "opacity 0.75s ease-out", new cljs.core.Keyword(null, "position", "position", -2011731912), "absolute", new cljs.core.Keyword(null, "right", "right", 
  -452581833), 0, new cljs.core.Keyword(null, "left", "left", -399115937), 0, new cljs.core.Keyword(null, "top", "top", -1856271961), 0, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), 0], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, 
  new cljs.core.Keyword(null, "justify-content", "justify-content", -1990475787), "flex-end")], null), "NO!"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.swipee", "div.swipee", -972995774), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 
  -496642736), cljs.core.assoc.call(null, sasha.components.swiper_scenes.styles, new cljs.core.Keyword(null, "background", "background", -863952629), "var(--woodsmoke)")], null), "Drag me left"], null)], null));
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "sasha.components.swiper-scenes/CustomSwipeRight", new cljs.core.Keyword(null, "on-mount", "on-mount", -1236735840), sasha.components.swiper.mount_swiper], null));
portfolio.data.register_scene_BANG_.call(null, portfolio.dumdom.create_scene.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword("sasha.components.swiper-scenes", "custom-swipable-other-side", "sasha.components.swiper-scenes/custom-swipable-other-side", 739530405), new cljs.core.Keyword(null, "line", "line", 212345235), 221, new cljs.core.Keyword(null, "component-fn", "component-fn", -266012750), function() {
  var a = function(c, d) {
    new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs.core.truth_((new cljs.core.Keyword(null, "retry?", "retry?", -1054643849)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "onClick", 
    "onClick", -1991238530), function(e) {
      e.preventDefault();
      return cljs.core.swap_BANG_.call(null, c, cljs.core.dissoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), new cljs.core.Keyword(null, "retry?", "retry?", -1054643849));
    }], null), "Try again"], null) : null, cljs.core.truth_((new cljs.core.Keyword(null, "gone?", "gone?", 1030484758)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c))) ? null : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
    "height", "height", 1025178622), 50, new cljs.core.Keyword(null, "transition", "transition", 765692007), "height 0.5s", new cljs.core.Keyword(null, "overflow", "overflow", 2058931880), "hidden"], null), new cljs.core.Keyword(null, "leaving-style", "leaving-style", 599773625), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "height", "height", 1025178622), 0], null)], null), sasha.components.swiper_scenes.CustomSwipeRight.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, 
    c), new cljs.core.Keyword(null, "on-above-right-threshold", "on-above-right-threshold", -1104096352), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !0);
    }, new cljs.core.Keyword(null, "on-below-right-threshold", "on-below-right-threshold", 288887267), function() {
      return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
    }, new cljs.core.Keyword(null, "on-snap-right", "on-snap-right", -1422270406), function() {
      cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "gone?", "gone?", 1030484758), !0);
      return setTimeout(function() {
        return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "retry?", "retry?", -1054643849), !0, new cljs.core.Keyword(null, "active?", "active?", 459499776), !1);
      }, 1000);
    }))], null)], null);
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right-threshold", "right-threshold", -1747117361), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.1, 0.5], null), new cljs.core.Keyword(null, "snap-right", "snap-right", -1064610294), 0.3], null);
  }, b = function(c, d) {
    var e = null;
    if (1 < arguments.length) {
      e = 0;
      for (var f = Array(arguments.length - 1); e < f.length;) {
        f[e] = arguments[e + 1], ++e;
      }
      e = new cljs.core.IndexedSeq(f, 0, null);
    }
    return a.call(this, c, e);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(c) {
    var d = cljs.core.first(c);
    c = cljs.core.rest(c);
    return a(d, c);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = a;
  return b;
}(), new cljs.core.Keyword(null, "param", "param", 2013631823), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null)));
sasha.portfolio = {};
portfolio.data.register_collection_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), new cljs.core.Keyword(null, "components", "components", -1073188942), new cljs.core.Keyword(null, "title", "title", 636505583), "Components"], null));
dumdom.component._STAR_render_eagerly_QMARK__STAR_ = !0;
portfolio.ui.start_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "config", "config", 994861415), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "css-paths", "css-paths", 582305563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["/css/sasha.css", "/css/theme-pinky.css"], null), new cljs.core.Keyword("grid", "options", "grid/options", 96459187), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 636505583), "8 x 8px", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("grid", "offset", "grid/offset", 289189693), 0, new cljs.core.Keyword("grid", "size", "grid/size", 1053670865), 8, new cljs.core.Keyword("grid", "group-size", "grid/group-size", -624518492), 8], null)], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"title", "title", 636505583), "No grid", new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("grid", "size", "grid/size", 1053670865), 0], null)], null)], null)], null)], null));
